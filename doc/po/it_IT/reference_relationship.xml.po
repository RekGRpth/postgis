# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2023-07-07 05:39+0000\n"
"PO-Revision-Date: 2022-01-19 10:14+0000\n"
"Last-Translator: Sandro Santilli <strk@kbt.io>\n"
"Language-Team: Italian <https://weblate.osgeo.org/projects/postgis/"
"reference_relationshipxml/it/>\n"
"Language: it_IT\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.10.1\n"

#. Tag: para
#: reference_relationship.xml:5
#, no-c-format
msgid "These functions determine spatial relationships between geometries."
msgstr ""

#. Tag: title
#: reference_relationship.xml:8
#, no-c-format
msgid "Spatial Relationships"
msgstr ""

#. Tag: title
#: reference_relationship.xml:11
#, no-c-format
msgid "Topological Relationships"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:15
#, no-c-format
msgid "ST_3DIntersects"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:17
#, no-c-format
msgid ""
"Tests if two geometries spatially intersect in 3D - only for points, "
"linestrings, polygons, polyhedral surface (area)"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:23
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DIntersects</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geomA</parameter> </paramdef> <paramdef> "
"<type>geometry</type> <parameter>geomB</parameter> </paramdef>"
msgstr ""

#. Tag: title
#: reference_relationship.xml:37 reference_relationship.xml:89
#: reference_relationship.xml:282 reference_relationship.xml:359
#: reference_relationship.xml:438 reference_relationship.xml:514
#: reference_relationship.xml:674 reference_relationship.xml:736
#: reference_relationship.xml:810 reference_relationship.xml:890
#: reference_relationship.xml:997 reference_relationship.xml:1040
#: reference_relationship.xml:1183 reference_relationship.xml:1335
#: reference_relationship.xml:1391 reference_relationship.xml:1529
#: reference_relationship.xml:1628 reference_relationship.xml:1689
#: reference_relationship.xml:1745 reference_relationship.xml:1810
#: reference_relationship.xml:1875
#, no-c-format
msgid "Description"
msgstr "Descrizione"

#. Tag: para
#: reference_relationship.xml:38
#, no-c-format
msgid ""
"Overlaps, Touches, Within all imply spatial intersection. If any of the "
"aforementioned returns true, then the geometries also spatially intersect. "
"Disjoint implies false for spatial intersection."
msgstr ""

#. Tag: para
#: reference_relationship.xml:42 reference_relationship.xml:554
#: reference_relationship.xml:835 reference_relationship.xml:1637
#: reference_relationship.xml:1697 reference_relationship.xml:1753
#, no-c-format
msgid "&index_aware;"
msgstr ""

#. Tag: para
#: reference_relationship.xml:44
#, no-c-format
msgid "Changed: 3.0.0 SFCGAL backend removed, GEOS backend supports TINs."
msgstr ""

#. Tag: para
#: reference_relationship.xml:45 reference_relationship.xml:1348
#: reference_relationship.xml:1644 reference_relationship.xml:1699
#, no-c-format
msgid "Availability: 2.0.0"
msgstr "Disponibilit√†: 2.0.0"

#. Tag: para
#: reference_relationship.xml:47 reference_relationship.xml:1639
#: reference_relationship.xml:1700
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_relationship.xml:49 reference_relationship.xml:1641
#: reference_relationship.xml:1702
#, no-c-format
msgid "&P_support;"
msgstr "&P_support;"

#. Tag: para
#: reference_relationship.xml:50 reference_relationship.xml:856
#, no-c-format
msgid "&T_support;"
msgstr "&T_support;"

#. Tag: para
#: reference_relationship.xml:51
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM IEC 13249-3: 5.1"
msgstr ""

#. Tag: title
#: reference_relationship.xml:54 reference_relationship.xml:859
#, no-c-format
msgid "Geometry Examples"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:55
#, no-c-format
msgid ""
"SELECT ST_3DIntersects(pt, line), ST_Intersects(pt, line)\n"
"  FROM (SELECT 'POINT(0 0 2)'::geometry As pt, 'LINESTRING (0 0 1, 0 2 3)'::"
"geometry As line) As foo;\n"
" st_3dintersects | st_intersects\n"
"-----------------+---------------\n"
" f               | t\n"
"(1 row)"
msgstr ""

#. Tag: title
#: reference_relationship.xml:58
#, no-c-format
msgid "TIN Examples"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:59
#, no-c-format
msgid ""
"SELECT ST_3DIntersects('TIN(((0 0 0,1 0 0,0 1 0,0 0 0)))'::geometry, "
"'POINT(.1 .1 0)'::geometry);\n"
" st_3dintersects\n"
"-----------------\n"
" t"
msgstr ""

#. Tag: title
#: reference_relationship.xml:62 reference_relationship.xml:255
#: reference_relationship.xml:322 reference_relationship.xml:402
#: reference_relationship.xml:489 reference_relationship.xml:646
#: reference_relationship.xml:713 reference_relationship.xml:769
#: reference_relationship.xml:867 reference_relationship.xml:974
#: reference_relationship.xml:1017 reference_relationship.xml:1142
#: reference_relationship.xml:1303 reference_relationship.xml:1363
#: reference_relationship.xml:1593 reference_relationship.xml:1654
#: reference_relationship.xml:1712 reference_relationship.xml:1764
#: reference_relationship.xml:1849 reference_relationship.xml:1896
#, no-c-format
msgid "See Also"
msgstr "Si veda anche"

#. Tag: refname
#: reference_relationship.xml:69
#, no-c-format
msgid "ST_Contains"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:71
#, no-c-format
msgid ""
"Tests if every point of B lies in A, and their interiors have a point in "
"common"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:76
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Contains</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:91
#, no-c-format
msgid ""
"Returns TRUE if geometry A contains geometry B. A contains B if and only if "
"all points of B lie inside (i.e. in the interior or boundary of) A (or "
"equivalently, no points of B lie in the exterior of A), and the interiors of "
"A and B have at least one point in common."
msgstr ""

#. Tag: para
#: reference_relationship.xml:97
#, no-c-format
msgid ""
"The contains relationship is reflexive: every geometry contains itself. (In "
"contrast, in the <xref linkend=\"ST_ContainsProperly\"/> predicate a "
"geometry does <emphasis>not</emphasis> properly contain itself.) The "
"relationship is antisymmetric: if <code>ST_Contains(A,B) = true</code> and "
"<code>ST_Contains(B,A) = true</code>, then the two geometries must be "
"topologically equal (<code>ST_Equals(A,B) = true</code>)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:104
#, no-c-format
msgid ""
"ST_Contains is the converse of <xref linkend=\"ST_Within\"/>. So, "
"<code>ST_Contains(A,B) = ST_Within(B,A)</code>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:107
#, no-c-format
msgid ""
"Because the interiors must have a common point, a subtlety of the definition "
"is that polygons and lines do <emphasis>not</emphasis> contain lines and "
"points lying fully in their boundary. For further details see <ulink "
"url=\"http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-covers-"
"spatial.html\">Subtleties of OGC Covers, Contains, Within</ulink>. The <xref "
"linkend=\"ST_Covers\"/> predicate provides a more inclusive relationship."
msgstr ""

#. Tag: para
#: reference_relationship.xml:113
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function <function>_ST_Contains</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:116 reference_relationship.xml:387
#: reference_relationship.xml:468 reference_relationship.xml:691
#: reference_relationship.xml:1056 reference_relationship.xml:1261
#: reference_relationship.xml:1346 reference_relationship.xml:1560
#, no-c-format
msgid "Performed by the GEOS module"
msgstr "Eseguito dal modulo GEOS"

#. Tag: para
#: reference_relationship.xml:117 reference_relationship.xml:839
#, no-c-format
msgid ""
"Enhanced: 2.3.0 Enhancement to PIP short-circuit extended to support "
"MultiPoints with few points. Prior versions only supported point in polygon."
msgstr ""

#. Tag: para
#: reference_relationship.xml:120 reference_relationship.xml:307
#: reference_relationship.xml:381 reference_relationship.xml:461
#: reference_relationship.xml:557 reference_relationship.xml:688
#: reference_relationship.xml:754 reference_relationship.xml:1059
#: reference_relationship.xml:1264 reference_relationship.xml:1423
#: reference_relationship.xml:1565
#, no-c-format
msgid ""
"Enhanced: 3.0.0 enabled support for <varname>GEOMETRYCOLLECTION</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:124 reference_relationship.xml:311
#: reference_relationship.xml:385 reference_relationship.xml:465
#: reference_relationship.xml:1569
#, no-c-format
msgid ""
"Do not use this function with invalid geometries. You will get unexpected "
"results."
msgstr ""

#. Tag: para
#: reference_relationship.xml:127 reference_relationship.xml:390
#: reference_relationship.xml:474 reference_relationship.xml:699
#: reference_relationship.xml:847 reference_relationship.xml:1062
#: reference_relationship.xml:1572
#, no-c-format
msgid ""
"NOTE: this is the \"allowable\" version that returns a boolean, not an "
"integer."
msgstr ""

#. Tag: para
#: reference_relationship.xml:130
#, no-c-format
msgid ""
"&sfs_compliant; s2.1.1.2 // s2.1.13.3 - same as within(geometry B, geometry "
"A)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:132
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.31"
msgstr ""

#. Tag: title
#: reference_relationship.xml:137 reference_relationship.xml:317
#: reference_relationship.xml:397 reference_relationship.xml:481
#: reference_relationship.xml:565 reference_relationship.xml:707
#: reference_relationship.xml:763 reference_relationship.xml:926
#: reference_relationship.xml:1012 reference_relationship.xml:1070
#: reference_relationship.xml:1271 reference_relationship.xml:1353
#: reference_relationship.xml:1431 reference_relationship.xml:1582
#: reference_relationship.xml:1648 reference_relationship.xml:1707
#: reference_relationship.xml:1759 reference_relationship.xml:1844
#: reference_relationship.xml:1889
#, no-c-format
msgid "Examples"
msgstr "Esempi"

#. Tag: para
#: reference_relationship.xml:139
#, no-c-format
msgid ""
"<function>ST_Contains</function> returns <varname>TRUE</varname> in the "
"following situations:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:151
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:161 reference_relationship.xml:1495
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POINT</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:172 reference_relationship.xml:212
#: reference_relationship.xml:243 reference_relationship.xml:1464
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:182 reference_relationship.xml:1099
#: reference_relationship.xml:1444 reference_relationship.xml:1454
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:190
#, no-c-format
msgid ""
"<function>ST_Contains</function> returns <varname>FALSE</varname> in the "
"following situations:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:202
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:220
#, no-c-format
msgid ""
"Due to the interior intersection condition <function>ST_Contains</function> "
"returns <varname>FALSE</varname> in the following situations (whereas "
"<function>ST_Covers</function> returns <varname>TRUE</varname>):"
msgstr ""

#. Tag: para
#: reference_relationship.xml:233
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>POINT</varname>"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:251
#, no-c-format
msgid ""
"-- A circle within a circle\n"
"SELECT ST_Contains(smallc, bigc) As smallcontainsbig,\n"
"     ST_Contains(bigc,smallc) As bigcontainssmall,\n"
"     ST_Contains(bigc, ST_Union(smallc, bigc)) as bigcontainsunion,\n"
"     ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"     ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"     ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"       ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"\n"
"-- Result\n"
"  smallcontainsbig | bigcontainssmall | bigcontainsunion | bigisunion | "
"bigcoversexterior | bigcontainsexterior\n"
"------------------+------------------+------------------+------------"
"+-------------------+---------------------\n"
" f                | t                | t                | t          | "
"t        | f\n"
"\n"
"-- Example demonstrating difference between contains and contains properly\n"
"SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS "
"acontainsa, ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
"   ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, "
"ST_ContainsProperly(geomA, ST_Boundary(geomA)) As acontainspropba\n"
"FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"       ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"       ( ST_Point(1,1) )\n"
"    ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------"
"+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""

#. Tag: para
#: reference_relationship.xml:256
#, no-c-format
msgid ""
", <xref linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, "
"<xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Equals\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:262
#, no-c-format
msgid "ST_ContainsProperly"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:264
#, no-c-format
msgid "Tests if every point of B lies in the interior of A"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:269
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_ContainsProperly</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:284
#, no-c-format
msgid ""
"Returns <varname>true</varname> if every point of B lies inside A (or "
"equivalently, no point of B lies in the the boundary or exterior of A)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:287
#, no-c-format
msgid "A does not properly contain itself, but does contain itself."
msgstr ""

#. Tag: para
#: reference_relationship.xml:288
#, no-c-format
msgid ""
"Every point of the other geometry is a point of this geometry's interior. "
"The DE-9IM Intersection Matrix for the two geometries matches [T**FF*FF*] "
"used in <xref linkend=\"ST_Relate\"/>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:291
#, no-c-format
msgid ""
"A use for this predicate is computing the intersections of a set of "
"geometries with a large polygonal geometry. Since intersection is a fairly "
"slow operation, it can be more efficient to use containsProperly to filter "
"out test geometries which lie fully inside the area. In these cases the "
"intersection is known a priori to be exactly the original test geometry."
msgstr ""

#. Tag: para
#: reference_relationship.xml:296
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function "
"<function>_ST_ContainsProperly</function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:300
#, no-c-format
msgid ""
"The advantage of this predicate over <xref linkend=\"ST_Contains\"/> and "
"<xref linkend=\"ST_Intersects\"/> is that it can be computed more "
"efficiently, with no need to compute topology at individual points."
msgstr ""

#. Tag: para
#: reference_relationship.xml:303
#, no-c-format
msgid "Performed by the GEOS module."
msgstr "Eseguito dal modulo GEOS."

#. Tag: para
#: reference_relationship.xml:304
#, no-c-format
msgid "Availability: 1.4.0"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:318
#, no-c-format
msgid ""
"--a circle within a circle\n"
"  SELECT ST_ContainsProperly(smallc, bigc) As smallcontainspropbig,\n"
"  ST_ContainsProperly(bigc,smallc) As bigcontainspropsmall,\n"
"  ST_ContainsProperly(bigc, ST_Union(smallc, bigc)) as "
"bigcontainspropunion,\n"
"  ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"  ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"  ST_ContainsProperly(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"  FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"  ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"  --Result\n"
"  smallcontainspropbig | bigcontainspropsmall | bigcontainspropunion | "
"bigisunion | bigcoversexterior | bigcontainsexterior\n"
"------------------+------------------+------------------+------------"
"+-------------------+---------------------\n"
" f                     | t                    | f                    | "
"t          | t                 | f\n"
"\n"
" --example demonstrating difference between contains and contains properly\n"
" SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS "
"acontainsa, ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
" ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, "
"ST_ContainsProperly(geomA, ST_Boundary(geomA)) As acontainspropba\n"
" FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"      ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"      ( ST_Point(1,1) )\n"
"  ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------"
"+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""

#. Tag: para
#: reference_relationship.xml:323
#, no-c-format
msgid ""
", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_Contains\"/>, <xref "
"linkend=\"ST_Covers\"/>, <xref linkend=\"ST_CoveredBy\"/>, <xref "
"linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Relate\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:329
#, no-c-format
msgid "ST_CoveredBy"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:331
#, no-c-format
msgid "Tests if every point of A lies in B"
msgstr ""

#. Tag: funcsynopsis
#: reference_relationship.xml:335
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_CoveredBy</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>boolean <function>ST_CoveredBy</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogA</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>geogB</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:361
#, no-c-format
msgid ""
"Returns <varname>true</varname> if every point in Geometry/Geography A lies "
"inside (i.e. intersects the interior or boundary of) Geometry/Geography B. "
"Equivalently, tests that no point of A lies outside (in the exterior of) B."
msgstr ""

#. Tag: para
#: reference_relationship.xml:367
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_CoveredBy(A, B) ‚áî A ‚ãÇ B = A </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:370
#, no-c-format
msgid ""
"ST_CoveredBy is the converse of <xref linkend=\"ST_Covers\"/>. So, "
"<code>ST_CoveredBy(A,B) = ST_Covers(B,A)</code>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:373
#, no-c-format
msgid ""
"Generally this function should be used instead of <xref "
"linkend=\"ST_Within\"/>, since it has a simpler definition which does not "
"have the quirk that \"boundaries are not within their geometry\"."
msgstr ""

#. Tag: para
#: reference_relationship.xml:377
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function <function>_ST_CoveredBy</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:388 reference_relationship.xml:472
#, no-c-format
msgid "Availability: 1.2.2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:393 reference_relationship.xml:477
#, no-c-format
msgid "Not an OGC standard, but Oracle has it too."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:398
#, no-c-format
msgid ""
"--a circle coveredby a circle\n"
"SELECT ST_CoveredBy(smallc,smallc) As smallinsmall,\n"
"  ST_CoveredBy(smallc, bigc) As smallcoveredbybig,\n"
"  ST_CoveredBy(ST_ExteriorRing(bigc), bigc) As exteriorcoveredbybig,\n"
"  ST_Within(ST_ExteriorRing(bigc),bigc) As exeriorwithinbig\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"  ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"  --Result\n"
" smallinsmall | smallcoveredbybig | exteriorcoveredbybig | exeriorwithinbig\n"
"--------------+-------------------+----------------------"
"+------------------\n"
" t            | t                 | t                    | f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:403
#, no-c-format
msgid ""
", <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_ExteriorRing\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:409
#, no-c-format
msgid "ST_Covers"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:411
#, no-c-format
msgid "Tests if every point of B lies in A"
msgstr ""

#. Tag: funcsynopsis
#: reference_relationship.xml:415
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Covers</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>boolean <function>ST_Covers</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogpolyA</"
"parameter></paramdef> <paramdef><type>geography </type> "
"<parameter>geogpointB</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:440
#, no-c-format
msgid ""
"Returns <varname>true</varname> if every point in Geometry/Geography B lies "
"inside (i.e. intersects the interior or boundary of) Geometry/Geography A. "
"Equivalently, tests that no point of B lies outside (in the exterior of) A."
msgstr ""

#. Tag: para
#: reference_relationship.xml:446
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Covers(A, B) ‚áî A ‚ãÇ B = B </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:449
#, no-c-format
msgid ""
"ST_Covers is the converse of <xref linkend=\"ST_CoveredBy\"/>. So, "
"<code>ST_Covers(A,B) = ST_CoveredBy(B,A)</code>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:452
#, no-c-format
msgid ""
"Generally this function should be used instead of <xref "
"linkend=\"ST_Contains\"/>, since it has a simpler definition which does not "
"have the quirk that \"geometries do not contain their boundary\"."
msgstr ""

#. Tag: para
#: reference_relationship.xml:457
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function <function>_ST_Covers</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:469
#, no-c-format
msgid ""
"Enhanced: 2.4.0 Support for polygon in polygon and line in polygon added for "
"geography type"
msgstr ""

#. Tag: para
#: reference_relationship.xml:470 reference_relationship.xml:1562
#, no-c-format
msgid ""
"Enhanced: 2.3.0 Enhancement to PIP short-circuit for geometry extended to "
"support MultiPoints with few points. Prior versions only supported point in "
"polygon."
msgstr ""

#. Tag: para
#: reference_relationship.xml:471
#, no-c-format
msgid "Availability: 1.5 - support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_relationship.xml:482
#, no-c-format
msgid "Geometry example"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:483
#, no-c-format
msgid ""
"--a circle covering a circle\n"
"SELECT ST_Covers(smallc,smallc) As smallinsmall,\n"
"  ST_Covers(smallc, bigc) As smallcoversbig,\n"
"  ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"  ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"  ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"  --Result\n"
" smallinsmall | smallcoversbig | bigcoversexterior | bigcontainsexterior\n"
"--------------+----------------+-------------------+---------------------\n"
" t            | f              | t                 | f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:484
#, no-c-format
msgid "Geeography Example"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:485
#, no-c-format
msgid ""
"-- a point with a 300 meter buffer compared to a point, a point and its 10 "
"meter buffer\n"
"SELECT ST_Covers(geog_poly, geog_pt) As poly_covers_pt,\n"
"  ST_Covers(ST_Buffer(geog_pt,10), geog_pt) As buff_10m_covers_cent\n"
"  FROM (SELECT ST_Buffer(ST_GeogFromText('SRID=4326;POINT(-99.327 "
"31.4821)'), 300) As geog_poly,\n"
"        ST_GeogFromText('SRID=4326;POINT(-99.33 31.483)') As geog_pt ) As "
"foo;\n"
"\n"
" poly_covers_pt | buff_10m_covers_cent\n"
"----------------+------------------\n"
" f              | t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:490
#, no-c-format
msgid ", <xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:496
#, no-c-format
msgid "ST_Crosses"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:498
#, no-c-format
msgid ""
"Tests if two geometries have some, but not all, interior points in common"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:503
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Crosses</function></funcdef> "
"<paramdef><type>geometry </type><parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type><parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:516
#, no-c-format
msgid ""
"Compares two geometry objects and returns <varname>true</varname> if their "
"intersection \"spatially crosses\"; that is, the geometries have some, but "
"not all interior points in common. The intersection of the interiors of the "
"geometries must be non-empty and must have dimension less than the maximum "
"dimension of the two input geometries, and the intersection of the two "
"geometries must not equal either geometry. Otherwise, it returns "
"<varname>false</varname>. The crosses relation is symmetric and irreflexive."
msgstr ""

#. Tag: para
#: reference_relationship.xml:526
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Crosses(A, B) ‚áî (dim( Int(A) ‚ãÇ Int(B) ) "
"&lt; max( dim( Int(A) ), dim( Int(B) ) )) ‚àß (A ‚ãÇ B ‚â† A) ‚àß (A ‚ãÇ B ‚â† B) </"
"emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:529
#, no-c-format
msgid "Geometries cross if their DE-9IM Intersection Matrix matches:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:533
#, no-c-format
msgid ""
"<code>T*T******</code> for Point/Line, Point/Area, and Line/Area situations"
msgstr ""

#. Tag: para
#: reference_relationship.xml:537
#, no-c-format
msgid ""
"<code>T*****T**</code> for Line/Point, Area/Point, and Area/Line situations"
msgstr ""

#. Tag: para
#: reference_relationship.xml:541
#, no-c-format
msgid "<code>0********</code> for Line/Line situations"
msgstr ""

#. Tag: para
#: reference_relationship.xml:545
#, no-c-format
msgid ""
"the result is <varname>false</varname> for Point/Point and Area/Area "
"situations"
msgstr ""

#. Tag: para
#: reference_relationship.xml:549
#, no-c-format
msgid ""
"The OpenGIS Simple Features Specification defines this predicate only for "
"Point/Line, Point/Area, Line/Line, and Line/Area situations. JTS / GEOS "
"extends the definition to apply to Line/Point, Area/Point and Area/Line "
"situations as well. This makes the relation symmetric."
msgstr ""

#. Tag: para
#: reference_relationship.xml:560
#, no-c-format
msgid "&sfs_compliant; s2.1.13.3"
msgstr ""

#. Tag: para
#: reference_relationship.xml:561
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.29"
msgstr ""

#. Tag: para
#: reference_relationship.xml:567
#, no-c-format
msgid "The following situations all return <varname>true</varname>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:579
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:589
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:601
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:611 reference_relationship.xml:1091
#: reference_relationship.xml:1475 reference_relationship.xml:1485
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:619
#, no-c-format
msgid ""
"Consider a situation where a user has two tables: a table of roads and a "
"table of highways."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:627
#, no-c-format
msgid ""
"CREATE TABLE roads (\n"
"  id serial NOT NULL,\n"
"  geom geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:631
#, no-c-format
msgid ""
"CREATE TABLE highways (\n"
"  id serial NOT NULL,\n"
"  the_gem geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""

#. Tag: para
#: reference_relationship.xml:638
#, no-c-format
msgid ""
"To determine a list of roads that cross a highway, use a query similiar to:"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:642
#, no-c-format
msgid ""
"SELECT roads.id\n"
"FROM roads, highways\n"
"WHERE ST_Crosses(roads.geom, highways.geom);"
msgstr ""

#. Tag: para
#: reference_relationship.xml:648
#, no-c-format
msgid ", <xref linkend=\"ST_Overlaps\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:654
#, no-c-format
msgid "ST_Disjoint"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:656
#, no-c-format
msgid "Tests if two geometries have no points in common"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:660
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Disjoint</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>A</parameter> </paramdef> <paramdef> "
"<type>geometry</type> <parameter>B</parameter> </paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:676
#, no-c-format
msgid ""
"Returns <varname>true</varname> if two geometries are disjoint. Geometries "
"are disjoint if they have no point in common."
msgstr ""

#. Tag: para
#: reference_relationship.xml:680
#, no-c-format
msgid ""
"If any other spatial relationship is true for a pair of geometries, they are "
"not disjoint. Disjoint implies that <xref linkend=\"ST_Intersects\"/> is "
"false."
msgstr ""

#. Tag: para
#: reference_relationship.xml:684
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Disjoint(A, B) ‚áî A ‚ãÇ B = ‚àÖ </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:693
#, no-c-format
msgid ""
"This function call does not use indexes. A negated <xref "
"linkend=\"ST_Intersects\"/> predicate can be used as a more performant "
"alternative that uses indexes: <code>ST_Disjoint(A,B) = NOT ST_Intersects(A,"
"B)</code>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:702
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - a.Relate(b, 'FF*FF****')"
msgstr ""

#. Tag: para
#: reference_relationship.xml:704
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.26"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:709
#, no-c-format
msgid ""
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::"
"geometry);\n"
" st_disjoint\n"
"---------------\n"
" t\n"
"(1 row)\n"
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::"
"geometry);\n"
" st_disjoint\n"
"---------------\n"
" f\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:720
#, no-c-format
msgid "ST_Equals"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:722
#, no-c-format
msgid "Tests if two geometries include the same set of points"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:727
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Equals</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:738
#, no-c-format
msgid ""
"Returns <varname>true</varname> if the given geometries are \"topologically "
"equal\". Use this for a 'better' answer than '='. Topological equality means "
"that the geometries have the same dimension, and their point-sets occupy the "
"same space. This means that the order of vertices may be different in "
"topologically equal geometries. To verify the order of points is consistent "
"use <xref linkend=\"ST_OrderingEquals\"/> (it must be noted "
"ST_OrderingEquals is a little more stringent than simply verifying order of "
"points are the same)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:747
#, no-c-format
msgid "In mathematical terms: <emphasis>ST_Equals(A, B) ‚áî A = B </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:750
#, no-c-format
msgid ""
"The following relation holds: <emphasis>ST_Equals(A, B) ‚áî ST_Within(A,B) ‚àß "
"ST_Within(B,A) </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:757
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:758
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.24"
msgstr ""

#. Tag: para
#: reference_relationship.xml:759
#, no-c-format
msgid ""
"Changed: 2.2.0 Returns true even for invalid geometries if they are binary "
"equal"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:765
#, no-c-format
msgid ""
"SELECT ST_Equals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"    ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_Equals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"    ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:771
#, no-c-format
msgid ""
", <xref linkend=\"ST_OrderingEquals\"/>, <xref linkend=\"ST_Reverse\"/>, "
"<xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:779
#, no-c-format
msgid "ST_Intersects"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:781
#, no-c-format
msgid ""
"Tests if two geometries intersect (they have at least one point in common)"
msgstr ""

#. Tag: funcsynopsis
#: reference_relationship.xml:784
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Intersects</function></"
"funcdef> <paramdef> <type>geometry</type> <parameter>geomA</parameter> </"
"paramdef> <paramdef> <type>geometry</type> <parameter>geomB</parameter> </"
"paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_Intersects</function></funcdef> <paramdef> <type>geography</"
"type> <parameter>geogA</parameter> </paramdef> <paramdef> <type>geography</"
"type> <parameter>geogB</parameter> </paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:811
#, no-c-format
msgid ""
"Returns <varname>true</varname> if two geometries intersect. Geometries "
"intersect if they have any point in common."
msgstr ""

#. Tag: para
#: reference_relationship.xml:815
#, no-c-format
msgid ""
"For geography, a distance tolerance of 0.00001 meters is used (so points "
"that are very close are considered to intersect)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:819
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Intersects(A, B) ‚áî A ‚ãÇ B ‚â† ‚àÖ </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:822
#, no-c-format
msgid ""
"Geometries intersect if their DE-9IM Intersection Matrix matches one of:"
msgstr ""

#. Tag: code
#: reference_relationship.xml:826
#, no-c-format
msgid "T********"
msgstr ""

#. Tag: code
#: reference_relationship.xml:827
#, no-c-format
msgid "*T*******"
msgstr ""

#. Tag: code
#: reference_relationship.xml:828
#, no-c-format
msgid "***T*****"
msgstr ""

#. Tag: code
#: reference_relationship.xml:829
#, no-c-format
msgid "****T****"
msgstr ""

#. Tag: para
#: reference_relationship.xml:832
#, no-c-format
msgid ""
"Spatial intersection is implied by all the other spatial relationship tests, "
"except <xref linkend=\"ST_Disjoint\"/>, which tests that geometries do NOT "
"intersect."
msgstr ""

#. Tag: para
#: reference_relationship.xml:837
#, no-c-format
msgid ""
"Changed: 3.0.0 SFCGAL version removed and native support for 2D TINS added."
msgstr ""

#. Tag: para
#: reference_relationship.xml:838
#, no-c-format
msgid "Enhanced: 2.5.0 Supports GEOMETRYCOLLECTION."
msgstr ""

#. Tag: para
#: reference_relationship.xml:840
#, no-c-format
msgid "Performed by the GEOS module (for geometry), geography is native"
msgstr ""

#. Tag: para
#: reference_relationship.xml:841
#, no-c-format
msgid "Availability: 1.5 support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_relationship.xml:843
#, no-c-format
msgid ""
"For geography, this function has a distance tolerance of about 0.00001 "
"meters and uses the sphere rather than spheroid calculation."
msgstr ""

#. Tag: para
#: reference_relationship.xml:850
#, no-c-format
msgid ""
"&sfs_compliant; s2.1.1.2 //s2.1.13.3 - ST_Intersects(g1, g2 ) --&gt; Not "
"(ST_Disjoint(g1, g2 ))"
msgstr ""

#. Tag: para
#: reference_relationship.xml:853
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.27"
msgstr ""

#. Tag: para
#: reference_relationship.xml:854
#, no-c-format
msgid "&curve_support;"
msgstr "&curve_support;"

#. Tag: programlisting
#: reference_relationship.xml:860
#, no-c-format
msgid ""
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::"
"geometry);\n"
" st_intersects\n"
"---------------\n"
" f\n"
"(1 row)\n"
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::"
"geometry);\n"
" st_intersects\n"
"---------------\n"
" t\n"
"(1 row)\n"
"\n"
"-- Look up in table. Make sure table has a GiST index on geometry column for "
"faster lookup.\n"
"SELECT id, name FROM cities WHERE ST_Intersects(geom, 'SRID=4326;POLYGON((28 "
"53,27.707 52.293,27 52,26.293 52.293,26 53,26.293 53.707,27 54,27.707 "
"53.707,28 53))');\n"
" id | name\n"
"----+-------\n"
"  2 | Minsk\n"
"(1 row)"
msgstr ""

#. Tag: title
#: reference_relationship.xml:863
#, no-c-format
msgid "Geography Examples"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:864
#, no-c-format
msgid ""
"SELECT ST_Intersects(\n"
"    'SRID=4326;LINESTRING(-43.23456 72.4567,-43.23456 72.4568)'::geography,\n"
"    'SRID=4326;POINT(-43.23456 72.4567772)'::geography\n"
"    );\n"
"\n"
" st_intersects\n"
"---------------\n"
"t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:868
#, no-c-format
msgid ", <xref linkend=\"ST_3DIntersects\"/>, <xref linkend=\"ST_Disjoint\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:874
#, no-c-format
msgid "ST_LineCrossingDirection"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:876
#, no-c-format
msgid "Returns a number indicating the crossing behavior of two LineStrings"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:881
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_LineCrossingDirection</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>linestringA</parameter></"
"paramdef> <paramdef><type>geometry </type> <parameter>linestringB</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:892
#, no-c-format
msgid ""
"Given two linestrings returns an integer between -3 and 3 indicating what "
"kind of crossing behavior exists between them. 0 indicates no crossing. This "
"is only supported for <varname>LINESTRING</varname>s."
msgstr ""

#. Tag: para
#: reference_relationship.xml:897
#, no-c-format
msgid "The crossing number has the following meaning:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:900
#, no-c-format
msgid "0: LINE NO CROSS"
msgstr ""

#. Tag: para
#: reference_relationship.xml:903
#, no-c-format
msgid "-1: LINE CROSS LEFT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:906
#, no-c-format
msgid "1: LINE CROSS RIGHT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:909
#, no-c-format
msgid "-2: LINE MULTICROSS END LEFT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:912
#, no-c-format
msgid "2: LINE MULTICROSS END RIGHT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:915
#, no-c-format
msgid "-3: LINE MULTICROSS END SAME FIRST LEFT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:918
#, no-c-format
msgid "3: LINE MULTICROSS END SAME FIRST RIGHT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:922
#, no-c-format
msgid "Availability: 1.4"
msgstr ""

#. Tag: para
#: reference_relationship.xml:928
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Example:</emphasis> LINE CROSS LEFT and LINE CROSS "
"RIGHT"
msgstr ""

#. Tag: para
#: reference_relationship.xml:936 reference_relationship.xml:949
#: reference_relationship.xml:962
#, no-c-format
msgid "Blue: Line A; Green: Line B"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:939
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(lineA, lineB) As A_cross_B,\n"
"       ST_LineCrossingDirection(lineB, lineA) As B_cross_A\n"
"FROM (SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As lineA,\n"
"  ST_GeomFromText('LINESTRING (20 140, 71 74, 161 53)') As lineB\n"
"  ) As foo;\n"
"\n"
" A_cross_B | B_cross_A\n"
"-----------+-----------\n"
"        -1 |         1"
msgstr ""

#. Tag: para
#: reference_relationship.xml:941
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Example:</emphasis> LINE MULTICROSS END SAME FIRST "
"LEFT and LINE MULTICROSS END SAME FIRST RIGHT"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:952
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(lineA, lineB) As A_cross_B,\n"
"       ST_LineCrossingDirection(lineB, lineA) As B_cross_A\n"
"FROM (SELECT\n"
" ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As lineA,\n"
" ST_GeomFromText('LINESTRING(171 154,20 140,71 74,161 53)') As lineB\n"
"  ) As foo;\n"
"\n"
" A_cross_B | B_cross_A\n"
"-----------+-----------\n"
"         3 |        -3"
msgstr ""

#. Tag: para
#: reference_relationship.xml:954
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Example:</emphasis> LINE MULTICROSS END LEFT and "
"LINE MULTICROSS END RIGHT"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:965
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(lineA, lineB) As A_cross_B,\n"
"       ST_LineCrossingDirection(lineB, lineA) As B_cross_A\n"
"FROM (SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As lineA,\n"
"  ST_GeomFromText('LINESTRING(5 90, 71 74, 20 140, 171 154)') As lineB\n"
"  ) As foo;\n"
"\n"
" A_cross_B | B_cross_A\n"
"-----------+-----------\n"
"        -2 |         2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:967
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Example:</emphasis> Finds all streets that cross"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:970
#, no-c-format
msgid ""
"SELECT s1.gid, s2.gid, ST_LineCrossingDirection(s1.geom, s2.geom)\n"
"  FROM streets s1 CROSS JOIN streets s2\n"
"         ON (s1.gid != s2.gid AND s1.geom &amp;&amp; s2.geom )\n"
"WHERE ST_LineCrossingDirection(s1.geom, s2.geom) > 0;"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:981
#, no-c-format
msgid "ST_OrderingEquals"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:983
#, no-c-format
msgid ""
"Tests if two geometries represent the same geometry and have points in the "
"same directional order"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:988
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_OrderingEquals</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:999
#, no-c-format
msgid ""
"ST_OrderingEquals compares two geometries and returns t (TRUE) if the "
"geometries are equal and the coordinates are in the same order; otherwise it "
"returns f (FALSE)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1004
#, no-c-format
msgid ""
"This function is implemented as per the ArcSDE SQL specification rather than "
"SQL-MM. http://edndoc.esri.com/arcsde/9.1/sql_api/sqlapi3."
"htm#ST_OrderingEquals"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1008
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.43"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1014
#, no-c-format
msgid ""
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"    ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"    ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 "
"10)')),\n"
"    ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1018
#, no-c-format
msgid ", <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Reverse\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1024
#, no-c-format
msgid "ST_Overlaps"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1026
#, no-c-format
msgid ""
"Tests if two geometries have the same dimension and intersect, but each has "
"at least one point not in the other"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1031
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Overlaps</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1042
#, no-c-format
msgid ""
"Returns TRUE if geometry A and B \"spatially overlap\". Two geometries "
"overlap if they have the same dimension, their interiors intersect in that "
"dimension. and each has at least one point inside the other (or "
"equivalently, neither one covers the other). The overlaps relation is "
"symmetric and irreflexive."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1050
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Overlaps(A, B) ‚áî ( dim(A) = dim(B) = "
"dim( Int(A) ‚ãÇ Int(B) )) ‚àß (A ‚ãÇ B ‚â† A) ‚àß (A ‚ãÇ B ‚â† B) </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1053
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function <function>_ST_Overlaps</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1065 reference_relationship.xml:1259
#: reference_relationship.xml:1426
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1066
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.32"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1071
#, no-c-format
msgid ""
"<function>ST_Overlaps</function> returns <varname>TRUE</varname> in the "
"following situations:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1082
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1114
#, no-c-format
msgid ""
"A Point on a LineString is contained, but since it has lower dimension it "
"does not overlap or cross."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1116
#, no-c-format
msgid ""
"SELECT ST_Overlaps(a,b) AS overlaps,       ST_Crosses(a,b) AS crosses,\n"
"       ST_Intersects(a, b) AS intersects,  ST_Contains(b,a) AS b_contains_a\n"
"FROM (SELECT ST_GeomFromText('POINT (100 100)') As a,\n"
"             ST_GeomFromText('LINESTRING (30 50, 40 160, 160 40, 180 160)')  "
"AS b) AS t\n"
"\n"
"overlaps | crosses | intersects | b_contains_a\n"
"---------+----------------------+--------------\n"
"f        | f       | t          | t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1124
#, no-c-format
msgid ""
"A LineString that partly covers a Polygon intersects and crosses, but does "
"not overlap since it has different dimension."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1126
#, no-c-format
msgid ""
"SELECT ST_Overlaps(a,b) AS overlaps,        ST_Crosses(a,b) AS crosses,\n"
"       ST_Intersects(a, b) AS intersects,   ST_Contains(a,b) AS contains\n"
"FROM (SELECT ST_GeomFromText('POLYGON ((40 170, 90 30, 180 100, 40 170))') "
"AS a,\n"
"             ST_GeomFromText('LINESTRING(10 10, 190 190)') AS b) AS t;\n"
"\n"
" overlap | crosses | intersects | contains\n"
"---------+---------+------------+--------------\n"
" f       | t       | t          | f"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1134
#, no-c-format
msgid ""
"Two Polygons that intersect but with neither contained by the other overlap, "
"but do not cross because their intersection has the same dimension."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1136
#, no-c-format
msgid ""
"SELECT ST_Overlaps(a,b) AS overlaps,       ST_Crosses(a,b) AS crosses,\n"
"       ST_Intersects(a, b) AS intersects,  ST_Contains(b, a) AS "
"b_contains_a,\n"
"       ST_Dimension(a) AS dim_a, ST_Dimension(b) AS dim_b,\n"
"       ST_Dimension(ST_Intersection(a,b)) AS dim_int\n"
"FROM (SELECT ST_GeomFromText('POLYGON ((40 170, 90 30, 180 100, 40 170))') "
"AS a,\n"
"             ST_GeomFromText('POLYGON ((110 180, 20 60, 130 90, 110 180))') "
"AS b) As t;\n"
"\n"
" overlaps | crosses | intersects | b_contains_a | dim_a | dim_b | dim_int\n"
"----------+---------+------------+--------------+-------+-------"
"+-----------\n"
" t        | f       | t          | f            |     2 |     2 |       2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1144
#, no-c-format
msgid ""
", <xref linkend=\"ST_Crosses\"/>, <xref linkend=\"ST_Dimension\"/>, <xref "
"linkend=\"ST_Intersects\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1150
#, no-c-format
msgid "ST_Relate"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1152
#, no-c-format
msgid ""
"Tests if two geometries have a topological relationship matching an "
"Intersection Matrix pattern, or computes their Intersection Matrix"
msgstr ""

#. Tag: funcsynopsis
#: reference_relationship.xml:1159
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>text </type> <parameter>intersectionMatrixPattern</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>ST_Relate</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>geomB</parameter></paramdef> </funcprototype> <funcprototype> "
"<funcdef>text <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>boundaryNodeRule</parameter></"
"paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1185
#, no-c-format
msgid ""
"These functions allow testing and evaluating the spatial (topological) "
"relationship between two geometries, as defined by the <ulink url=\"http://"
"en.wikipedia.org/wiki/DE-9IM\">Dimensionally Extended 9-Intersection Model</"
"ulink> (DE-9IM)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1189
#, no-c-format
msgid ""
"The DE-9IM is specified as a 9-element matrix indicating the dimension of "
"the intersections between the Interior, Boundary and Exterior of two "
"geometries. It is represented by a 9-character text string using the symbols "
"'F', '0', '1', '2' (e.g. <code>'FF1FF0102'</code>)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1195
#, no-c-format
msgid ""
"A specific kind of spatial relationship can be tested by matching the "
"intersection matrix to an <emphasis>intersection matrix pattern</emphasis>. "
"Patterns can include the additional symbols 'T' (meaning \"intersection is "
"non-empty\") and '*' (meaning \"any value\"). Common spatial relationships "
"are provided by the named functions <xref linkend=\"ST_Contains\"/>, <xref "
"linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, <xref "
"linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Crosses\"/>, <xref "
"linkend=\"ST_Disjoint\"/>, <xref linkend=\"ST_Equals\"/>, <xref "
"linkend=\"ST_Intersects\"/>, <xref linkend=\"ST_Overlaps\"/>, <xref "
"linkend=\"ST_Touches\"/>, and <xref linkend=\"ST_Within\"/>. Using an "
"explicit pattern allows testing multiple conditions of intersects, crosses, "
"etc in one step. It also allows testing spatial relationships which do not "
"have a named spatial relationship function. For example, the relationship "
"\"Interior-Intersects\" has the DE-9IM pattern <code>T********</code>, which "
"is not evaluated by any named predicate."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1211 reference_relationship.xml:1343
#, no-c-format
msgid "For more information refer to <xref linkend=\"eval_spatial_rel\"/>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1215
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> Tests if two geometries are "
"spatially related according to the given <varname>intersectionMatrixPattern</"
"varname>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1219
#, no-c-format
msgid ""
"Unlike most of the named spatial relationship predicates, this does NOT "
"automatically include an index call. The reason is that some relationships "
"are true for geometries which do NOT intersect (e.g. Disjoint). If you are "
"using a relationship pattern that requires intersection, then include the "
"&amp;&amp; index call."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1227
#, no-c-format
msgid ""
"It is better to use a named relationship function if available, since they "
"automatically use a spatial index where one exists. Also, they may implement "
"performance optimizations which are not available with full relate evalation."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1233
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> Returns the DE-9IM matrix "
"string for the spatial relationship between the two input geometries. The "
"matrix string can be tested for matching a DE-9IM pattern using <xref "
"linkend=\"ST_RelateMatch\"/>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1238
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> Like variant 2, but allows "
"specifying a <emphasis role=\"bold\">Boundary Node Rule</emphasis>. A "
"boundary node rule allows finer control over whether the endpoints of "
"MultiLineStrings are considered to lie in the DE-9IM Interior or Boundary. "
"The <varname>boundaryNodeRule</varname> values are:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1245
#, no-c-format
msgid ""
"<code>1</code>: <emphasis role=\"bold\">OGC-Mod2</emphasis> - line endpoints "
"are in the Boundary if they occur an odd number of times. This is the rule "
"defined by the OGC SFS standard, and is the default for <function>ST_Relate</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1248
#, no-c-format
msgid ""
"<code>2</code>: <emphasis role=\"bold\">Endpoint</emphasis> - all endpoints "
"are in the Boundary."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1250
#, no-c-format
msgid ""
"<code>3</code>: <emphasis role=\"bold\">MultivalentEndpoint</emphasis> - "
"endpoints are in the Boundary if they occur more than once. In other words, "
"the boundary is all the \"attached\" or \"inner\" endpoints (but not the "
"\"unattached/outer\" ones)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1253
#, no-c-format
msgid ""
"<code>4</code>: <emphasis role=\"bold\">MonovalentEndpoint</emphasis> - "
"endpoints are in the Boundary if they occur only once. In other words, the "
"boundary is all the \"unattached\" or \"outer\" endpoints."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1258
#, no-c-format
msgid "This function is not in the OGC spec, but is implied. see s2.1.13.2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1260
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.25"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1262
#, no-c-format
msgid "Enhanced: 2.0.0 - added support for specifying boundary node rule."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1273
#, no-c-format
msgid "Using the boolean-valued function to test spatial relationships."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1274
#, no-c-format
msgid ""
"SELECT ST_Relate('POINT(1 2)', ST_Buffer( 'POINT(1 2)', 2), '0FFFFF212');\n"
"st_relate\n"
"-----------\n"
"t\n"
"\n"
"SELECT ST_Relate(POINT(1 2)', ST_Buffer( 'POINT(1 2)', 2), '*FF*FF212');\n"
"st_relate\n"
"-----------\n"
"t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1276
#, no-c-format
msgid ""
"Testing a custom spatial relationship pattern as a query condition, with "
"<code>&amp;&amp;</code> to enable using a spatial index."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1278
#, no-c-format
msgid ""
"-- Find compounds that properly intersect (not just touch) a poly (Interior "
"Intersects)\n"
"\n"
"SELECT c.* , p.name As poly_name\n"
"    FROM polys AS p\n"
"    INNER JOIN compounds As c\n"
"          ON c.geom &amp;&amp; p.geom\n"
"             AND ST_Relate(p.geom, c.geom,'T********');"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1280
#, no-c-format
msgid "Computing the intersection matrix for spatial relationships."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1281
#, no-c-format
msgid ""
"SELECT ST_Relate( 'POINT(1 2)',\n"
"                  ST_Buffer( 'POINT(1 2)', 2));\n"
"-----------\n"
"0FFFFF212\n"
"\n"
"SELECT ST_Relate( 'LINESTRING(1 2, 3 4)',\n"
"                  'LINESTRING(5 6, 7 8)' );\n"
"-----------\n"
"FF1FF0102"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1283
#, no-c-format
msgid ""
"Using different Boundary Node Rules to compute the spatial relationship "
"between a LineString and a MultiLineString with a duplicate endpoint "
"<code>(3 3)</code>:"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1287
#, no-c-format
msgid ""
"Using the <emphasis role=\"bold\">OGC-Mod2</emphasis> rule (1) the duplicate "
"endpoint is in the <emphasis role=\"bold\">interior</emphasis> of the "
"MultiLineString, so the DE-9IM matrix entry [aB:bI] is <code>0</code> and "
"[aB:bB] is <code>F</code>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1291
#, no-c-format
msgid ""
"Using the <emphasis role=\"bold\">Endpoint</emphasis> rule (2) the duplicate "
"endpoint is in the <emphasis role=\"bold\">boundary</emphasis> of the "
"MultiLineString, so the DE-9IM matrix entry [aB:bI] is <code>F</code> and "
"[aB:bB] is <code>0</code>."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1296
#, no-c-format
msgid ""
"WITH data AS (SELECT\n"
"  'LINESTRING(1 1, 3 3)'::geometry AS a_line,\n"
"  'MULTILINESTRING((3 3, 3 5), (3 3, 5 3))':: geometry AS b_multiline\n"
")\n"
"SELECT ST_Relate( a_line, b_multiline, 1) AS bnr_mod2,\n"
"       ST_Relate( a_line, b_multiline, 2) AS bnr_endpoint\n"
"    FROM data;\n"
"\n"
" bnr_mod2  | bnr_endpoint\n"
"-----------+--------------\n"
" FF10F0102 | FF1F00102"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1305
#, no-c-format
msgid ""
", <xref linkend=\"ST_RelateMatch\"/>, <xref linkend=\"ST_Contains\"/>, <xref "
"linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, <xref "
"linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Crosses\"/>, <xref "
"linkend=\"ST_Disjoint\"/>, <xref linkend=\"ST_Equals\"/>, <xref "
"linkend=\"ST_Intersects\"/>, <xref linkend=\"ST_Overlaps\"/>, <xref "
"linkend=\"ST_Touches\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1318
#, no-c-format
msgid "ST_RelateMatch"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1320
#, no-c-format
msgid ""
"Tests if a DE-9IM Intersection Matrix matches an Intersection Matrix pattern"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1326
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_RelateMatch</function></funcdef> "
"<paramdef><type>text </type> <parameter>intersectionMatrix</parameter></"
"paramdef> <paramdef><type>text </type> <parameter>intersectionMatrixPattern</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1337
#, no-c-format
msgid ""
"Tests if a <ulink url=\"http://en.wikipedia.org/wiki/DE-9IM\">Dimensionally "
"Extended 9-Intersection Model</ulink> (DE-9IM) <varname>intersectionMatrix</"
"varname> value satisfies an <varname>intersectionMatrixPattern</varname>. "
"Intersection matrix values can be computed by <xref linkend=\"ST_Relate\"/>."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1354
#, no-c-format
msgid ""
"SELECT ST_RelateMatch('101202FFF', 'TTTTTTFFF') ;\n"
"-- result --\n"
"t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1355
#, no-c-format
msgid ""
"Patterns for common spatial relationships matched against intersection "
"matrix values, for a line in various positions relative to a polygon"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1358
#, no-c-format
msgid ""
"SELECT pat.name AS relationship, pat.val AS pattern,\n"
"       mat.name AS position, mat.val AS matrix,\n"
"       ST_RelateMatch(mat.val, pat.val) AS match\n"
"    FROM (VALUES ( 'Equality', 'T1FF1FFF1' ),\n"
"                 ( 'Overlaps', 'T*T***T**' ),\n"
"                 ( 'Within',   'T*F**F***' ),\n"
"                 ( 'Disjoint', 'FF*FF****' )) AS pat(name,val)\n"
"    CROSS JOIN\n"
"        (VALUES  ('non-intersecting', 'FF1FF0212'),\n"
"                 ('overlapping',      '1010F0212'),\n"
"                 ('inside',           '1FF0FF212')) AS mat(name,val);\n"
"\n"
" relationship |  pattern  |     position     |  matrix   | match\n"
"--------------+-----------+------------------+-----------+-------\n"
" Equality     | T1FF1FFF1 | non-intersecting | FF1FF0212 | f\n"
" Equality     | T1FF1FFF1 | overlapping      | 1010F0212 | f\n"
" Equality     | T1FF1FFF1 | inside           | 1FF0FF212 | f\n"
" Overlaps     | T*T***T** | non-intersecting | FF1FF0212 | f\n"
" Overlaps     | T*T***T** | overlapping      | 1010F0212 | t\n"
" Overlaps     | T*T***T** | inside           | 1FF0FF212 | f\n"
" Within       | T*F**F*** | non-intersecting | FF1FF0212 | f\n"
" Within       | T*F**F*** | overlapping      | 1010F0212 | f\n"
" Within       | T*F**F*** | inside           | 1FF0FF212 | t\n"
" Disjoint     | FF*FF**** | non-intersecting | FF1FF0212 | t\n"
" Disjoint     | FF*FF**** | overlapping      | 1010F0212 | f\n"
" Disjoint     | FF*FF**** | inside           | 1FF0FF212 | f"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1364
#, no-c-format
msgid ", <xref linkend=\"ST_Relate\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1370
#, no-c-format
msgid "ST_Touches"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1372
#, no-c-format
msgid ""
"Tests if two geometries have at least one point in common, but their "
"interiors do not intersect"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1378
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Touches</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1393
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if A and B intersect, but their interiors do "
"not intersect. Equivalently, A and B have at least one point in common, and "
"the common points lie in at least one boundary. For Point/Point inputs the "
"relationship is always <varname>FALSE</varname>, since points do not have a "
"boundary."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1399
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Touches(A, B) ‚áî (Int(A) ‚ãÇ Int(B) ‚â† ‚àÖ) ‚àß "
"(A ‚ãÇ B ‚â† ‚àÖ) </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1402
#, no-c-format
msgid ""
"This relationship holds if the DE-9IM Intersection Matrix for the two "
"geometries matches one of:"
msgstr ""

#. Tag: markup
#: reference_relationship.xml:1406
#, no-c-format
msgid "FT*******"
msgstr ""

#. Tag: markup
#: reference_relationship.xml:1410
#, no-c-format
msgid "F**T*****"
msgstr ""

#. Tag: markup
#: reference_relationship.xml:1414
#, no-c-format
msgid "F***T****"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1418
#, no-c-format
msgid ""
"&index_aware; To avoid using an index, use <function>_ST_Touches</function> "
"instead."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1427
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.28"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1433
#, no-c-format
msgid ""
"The <function>ST_Touches</function> predicate returns <varname>TRUE</"
"varname> in the following examples."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1503
#, no-c-format
msgid ""
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(1 1)'::"
"geometry);\n"
" st_touches\n"
"------------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(0 2)'::"
"geometry);\n"
" st_touches\n"
"------------\n"
" t\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1509
#, no-c-format
msgid "ST_Within"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1511
#, no-c-format
msgid ""
"Tests if every point of A lies in B, and their interiors have a point in "
"common"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1516
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Within</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1531
#, no-c-format
msgid ""
"Returns TRUE if geometry A is within geometry B. A is within B if and only "
"if all points of A lie inside (i.e. in the interior or boundary of) B (or "
"equivalently, no points of A lie in the exterior of B), and the interiors of "
"A and B have at least one point in common."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1536
#, no-c-format
msgid ""
"For this function to make sense, the source geometries must both be of the "
"same coordinate projection, having the same SRID."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1541
#, no-c-format
msgid ""
"In mathematical terms: <emphasis>ST_Within(A, B) ‚áî (A ‚ãÇ B = A) ‚àß (Int(A) ‚ãÇ "
"Int(B) ‚â† ‚àÖ) </emphasis>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1544
#, no-c-format
msgid ""
"The within relation is reflexive: every geometry is within itself. The "
"relation is antisymmetric: if <code>ST_Within(A,B) = true</code> and "
"<code>ST_Within(B,A) = true</code>, then the two geometries must be "
"topologically equal (<code>ST_Equals(A,B) = true</code>)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1548
#, no-c-format
msgid ""
"ST_Within is the converse of <xref linkend=\"ST_Contains\"/>. So, "
"<code>ST_Within(A,B) = ST_Contains(B,A)</code>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1551
#, no-c-format
msgid ""
"Because the interiors must have a common point, a subtlety of the definition "
"is that lines and points lying fully in the boundary of polygons or lines "
"are <emphasis>not</emphasis> within the geometry. For further details see "
"<ulink url=\"http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-"
"covers-spatial.html\">Subtleties of OGC Covers, Contains, Within</ulink>. "
"The <xref linkend=\"ST_CoveredBy\"/> predicate provides a more inclusive "
"relationship."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1557
#, no-c-format
msgid ""
"&index_aware; To avoid index use, use the function <function>_ST_Within</"
"function>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1575
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - a.Relate(b, 'T*F**F***')"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1578
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.30"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1583
#, no-c-format
msgid ""
"--a circle within a circle\n"
"SELECT ST_Within(smallc,smallc) As smallinsmall,\n"
"  ST_Within(smallc, bigc) As smallinbig,\n"
"  ST_Within(bigc,smallc) As biginsmall,\n"
"  ST_Within(ST_Union(smallc, bigc), bigc) as unioninbig,\n"
"  ST_Within(bigc, ST_Union(smallc, bigc)) as biginunion,\n"
"  ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion\n"
"FROM\n"
"(\n"
"SELECT ST_Buffer(ST_GeomFromText('POINT(50 50)'), 20) As smallc,\n"
"  ST_Buffer(ST_GeomFromText('POINT(50 50)'), 40) As bigc) As foo;\n"
"--Result\n"
" smallinsmall | smallinbig | biginsmall | unioninbig | biginunion | "
"bigisunion\n"
"--------------+------------+------------+------------+------------"
"+------------\n"
" t            | t          | f          | t          | t          | t\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1594
#, no-c-format
msgid ""
", <xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Equals\"/>, <xref "
"linkend=\"ST_IsValid\"/>"
msgstr ""

#. Tag: title
#: reference_relationship.xml:1602
#, no-c-format
msgid "Distance Relationships"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1606
#, no-c-format
msgid "ST_3DDWithin"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1608
#, no-c-format
msgid "Tests if two 3D geometries are within a given 3D distance"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1612
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_of_srid</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1630
#, no-c-format
msgid ""
"Returns true if the 3D distance between two geometry values is no larger "
"than distance <varname>distance_of_srid</varname>. The distance is specified "
"in units defined by the spatial reference system of the geometries. For this "
"function to make sense the source geometries must be in the same coordinate "
"system (have the same SRID)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1642
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM ?"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1650
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal "
"area) (3D point and line compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and "
"assumed to be same units as final.\n"
"SELECT ST_3DDWithin(\n"
"      ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"4)'),2163),\n"
"      ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, "
"-72.123 42.1546 20)'),2163),\n"
"      126.8\n"
"    ) As within_dist_3d,\n"
"ST_DWithin(\n"
"      ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"4)'),2163),\n"
"      ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, "
"-72.123 42.1546 20)'),2163),\n"
"      126.8\n"
"    ) As within_dist_2d;\n"
"\n"
" within_dist_3d | within_dist_2d\n"
"----------------+----------------\n"
" f              | t"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1656
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DFullyWithin\"/>, <xref "
"linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_Distance\"/>, <xref "
"linkend=\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1666
#, no-c-format
msgid "ST_3DDFullyWithin"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1668
#, no-c-format
msgid "Tests if two 3D geometries are entirely within a given 3D distance"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1673
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDFullyWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1691
#, no-c-format
msgid ""
"Returns true if the 3D geometries are fully within the specified distance of "
"one another. The distance is specified in units defined by the spatial "
"reference system of the geometries. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the "
"same SRID."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1708
#, no-c-format
msgid ""
"-- This compares the difference between fully within and distance within as "
"well\n"
"    -- as the distance fully within for the 2D footprint of the line/point "
"vs. the 3d fully within\n"
"    SELECT ST_3DDFullyWithin(geom_a, geom_b, 10) as D3DFullyWithin10, "
"ST_3DDWithin(geom_a, geom_b, 10) as D3DWithin10,\n"
"  ST_DFullyWithin(geom_a, geom_b, 20) as D2DFullyWithin20,\n"
"  ST_3DDFullyWithin(geom_a, geom_b, 20) as D3DFullyWithin20 from\n"
"    (select ST_GeomFromEWKT('POINT(1 1 2)') as geom_a,\n"
"    ST_GeomFromEWKT('LINESTRING(1 5 2, 2 7 20, 1 9 100, 14 12 3)') as "
"geom_b) t1;\n"
" d3dfullywithin10 | d3dwithin10 | d2dfullywithin20 | d3dfullywithin20\n"
"------------------+-------------+------------------+------------------\n"
" f                | t           | t                | f"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1714
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DFullyWithin\"/>, <xref "
"linkend=\"ST_3DMaxDistance\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1722
#, no-c-format
msgid "ST_DFullyWithin"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1724
#, no-c-format
msgid "Tests if two geometries are entirely within a given distance"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1729
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_DFullyWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1747
#, no-c-format
msgid ""
"Returns true if the geometries are entirely within the specified distance of "
"one another. The distance is specified in units defined by the spatial "
"reference system of the geometries. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the "
"same SRID."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1755
#, no-c-format
msgid "Availability: 1.5.0"
msgstr "Disponibilit√†: 1.5.0"

#. Tag: programlisting
#: reference_relationship.xml:1760
#, no-c-format
msgid ""
"postgis=# SELECT ST_DFullyWithin(geom_a, geom_b, 10) as DFullyWithin10, "
"ST_DWithin(geom_a, geom_b, 10) as DWithin10, ST_DFullyWithin(geom_a, geom_b, "
"20) as DFullyWithin20 from\n"
"    (select ST_GeomFromText('POINT(1 1)') as geom_a,"
"ST_GeomFromText('LINESTRING(1 5, 2 7, 1 9, 14 12)') as geom_b) t1;\n"
"\n"
"-----------------\n"
" DFullyWithin10 | DWithin10 | DFullyWithin20 |\n"
"---------------+----------+---------------+\n"
" f             | t        | t             |"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1766
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_3DDWithin\"/>, <xref "
"linkend=\"ST_3DDFullyWithin\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1773
#, no-c-format
msgid "ST_DWithin"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1775
#, no-c-format
msgid "Tests if two geometries are within a given distance"
msgstr ""

#. Tag: funcsynopsis
#: reference_relationship.xml:1779
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_of_srid</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_DWithin</function></funcdef> <paramdef><type>geography </type> "
"<parameter>gg1</parameter></paramdef> <paramdef><type>geography </type> "
"<parameter>gg2</parameter></paramdef> <paramdef><type>double precision </"
"type> <parameter>distance_meters</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>boolean </type> <parameter>use_spheroid = true</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1812
#, no-c-format
msgid "Returns true if the geometries are within a given distance"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1814
#, no-c-format
msgid ""
"For <type>geometry</type>: The distance is specified in units defined by the "
"spatial reference system of the geometries. For this function to make sense, "
"the source geometries must be in the same coordinate system (have the same "
"SRID)."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1819
#, no-c-format
msgid ""
"For <type>geography</type>: units are in meters and distance measurement "
"defaults to <varname>use_spheroid = true</varname>. For faster evaluation "
"use <varname>use_spheroid = false</varname> to measure on the sphere."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1824
#, no-c-format
msgid "Use <xref linkend=\"ST_3DDWithin\"/> for 3D geometries."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1827
#, no-c-format
msgid ""
"This function call includes a bounding box comparison that makes use of any "
"indexes that are available on the geometries."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1832
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_relationship.xml:1833
#, no-c-format
msgid "Availability: 1.5.0 support for geography was introduced"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1834
#, no-c-format
msgid ""
"Enhanced: 2.1.0 improved speed for geography. See <ulink url=\"http://blog."
"opengeo.org/2012/07/12/making-geography-faster/\">Making Geography faster</"
"ulink> for details."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1835
#, no-c-format
msgid "Enhanced: 2.1.0 support for curved geometries was introduced."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1837
#, no-c-format
msgid ""
"Prior to 1.3, <xref linkend=\"ST_Expand\"/> was commonly used in conjunction "
"with &amp;&amp; and ST_Distance to test for distance, and in pre-1.3.4 this "
"function used that logic. From 1.3.4, ST_DWithin uses a faster short-circuit "
"distance function."
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1845
#, no-c-format
msgid ""
"-- Find the nearest hospital to each school\n"
"-- that is within 3000 units of the school.\n"
"--  We do an ST_DWithin search to utilize indexes to limit our search list\n"
"--  that the non-indexable ST_Distance needs to process\n"
"-- If the units of the spatial reference is meters then units would be "
"meters\n"
"SELECT DISTINCT ON (s.gid) s.gid, s.school_name, s.geom, h.hospital_name\n"
"  FROM schools s\n"
"    LEFT JOIN hospitals h ON ST_DWithin(s.geom, h.geom, 3000)\n"
"  ORDER BY s.gid, ST_Distance(s.geom, h.geom);\n"
"\n"
"-- The schools with no close hospitals\n"
"-- Find all schools with no hospital within 3000 units\n"
"-- away from the school.  Units is in units of spatial ref (e.g. meters, "
"feet, degrees)\n"
"SELECT s.gid, s.school_name\n"
"  FROM schools s\n"
"    LEFT JOIN hospitals h ON ST_DWithin(s.geom, h.geom, 3000)\n"
"  WHERE h.gid IS NULL;\n"
"\n"
"-- Find broadcasting towers that receiver with limited range can receive.\n"
"-- Data is geometry in Spherical Mercator (SRID=3857), ranges are "
"approximate.\n"
"\n"
"-- Create geometry index that will check proximity limit of user to tower\n"
"CREATE INDEX ON broadcasting_towers using gist (geom);\n"
"\n"
"-- Create geometry index that will check proximity limit of tower to user\n"
"CREATE INDEX ON broadcasting_towers using gist (ST_Expand(geom, "
"sending_range));\n"
"\n"
"-- Query towers that 4-kilometer receiver in Minsk Hackerspace can get\n"
"-- Note: two conditions, because shorter LEAST(b.sending_range, 4000) will "
"not use index.\n"
"SELECT b.tower_id, b.geom\n"
"  FROM broadcasting_towers b\n"
"  WHERE ST_DWithin(b.geom, 'SRID=3857;POINT(3072163.4 7159374.1)', 4000)\n"
"    AND ST_DWithin(b.geom, 'SRID=3857;POINT(3072163.4 7159374.1)', b."
"sending_range);"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1851
#, no-c-format
msgid ", <xref linkend=\"ST_3DDWithin\"/>"
msgstr ""

#. Tag: refname
#: reference_relationship.xml:1857
#, no-c-format
msgid "ST_PointInsideCircle"
msgstr ""

#. Tag: refpurpose
#: reference_relationship.xml:1859
#, no-c-format
msgid ""
"Tests if a point geometry is inside a circle defined by a center and radius"
msgstr ""

#. Tag: funcprototype
#: reference_relationship.xml:1864
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_PointInsideCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_point</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>center_x</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>center_y</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>radius</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1877
#, no-c-format
msgid ""
"Returns true if the geometry is a point and is inside the circle with center "
"<varname>center_x</varname>,<varname>center_y</varname> and radius "
"<varname>radius</varname>."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1881
#, no-c-format
msgid ""
"Does not use spatial indexes. Use <xref linkend=\"ST_DWithin\"/> instead."
msgstr ""

#. Tag: para
#: reference_relationship.xml:1883
#, no-c-format
msgid "Availability: 1.2"
msgstr ""

#. Tag: para
#: reference_relationship.xml:1884
#, no-c-format
msgid "Changed: 2.2.0 In prior versions this was called ST_Point_Inside_Circle"
msgstr ""

#. Tag: programlisting
#: reference_relationship.xml:1891
#, no-c-format
msgid ""
"SELECT ST_PointInsideCircle(ST_Point(1,2), 0.5, 2, 3);\n"
" st_pointinsidecircle\n"
"------------------------\n"
" t"
msgstr ""

#, no-c-format
#~ msgid "&sqlmm_compliant; SQL-MM 3: ?"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: ?"
