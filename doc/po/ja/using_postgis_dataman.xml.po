# SOME DESCRIPTIVE TITLE.
#
# Translators:
# TERAMOTO Ikuhiro <yellow@affrc.go.jp>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-01-10 14:13+0000\n"
"PO-Revision-Date: 2020-12-24 07:57+0000\n"
"Last-Translator: TERAMOTO Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese (http://www.transifex.com/postgis/postgis/language/"
"ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: using_postgis_dataman.xml:3
#, no-c-format
msgid "Data Management"
msgstr "データ管理"

#. Tag: title
#: using_postgis_dataman.xml:6
#, fuzzy, no-c-format
msgid "Spatial Data Model"
msgstr "空間データのロード"

#. Tag: title
#: using_postgis_dataman.xml:9
#, no-c-format
msgid "OGC Geometry"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:11
#, no-c-format
msgid ""
"The Open Geospatial Consortium (OGC) developed the <ulink url=\"https://www."
"ogc.org/standards/sfa\"><emphasis>Simple Features Access</emphasis></ulink> "
"standard (SFA) to provide a model for geospatial data. It defines the "
"fundamental spatial type of <emphasis role=\"bold\">Geometry</emphasis>, "
"along with operations which manipulate and transform geometry values to "
"perform spatial analysis tasks. PostGIS implements the OGC Geometry model as "
"the PostgreSQL data types <link linkend=\"PostGIS_Geometry\">geometry</link> "
"and <link linkend=\"PostGIS_Geography\">geography</link>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:21
#, no-c-format
msgid ""
"Geometry is an <emphasis>abstract</emphasis> type. Geometry values belong to "
"one of its <emphasis>concrete</emphasis> subtypes which represent various "
"kinds and dimensions of geometric shapes. These include the <emphasis role="
"\"bold\">atomic</emphasis> types <link linkend=\"Point\">Point</link>, <link "
"linkend=\"LineString\">LineString</link>, <link linkend=\"LinearRing"
"\">LinearRing</link> and <link linkend=\"Polygon\">Polygon</link>, and the "
"<emphasis role=\"bold\">collection</emphasis> types <link linkend="
"\"MultiPoint\">MultiPoint</link>, <link linkend=\"MultiLineString"
"\">MultiLineString</link>, <link linkend=\"MultiPolygon\">MultiPolygon</"
"link> and <link linkend=\"GeometryCollection\">GeometryCollection</link>. "
"The <ulink url=\"https://portal.ogc.org/files/?"
"artifact_id=25355\"><emphasis>Simple Features Access - Part 1: Common "
"architecture v1.2.1</emphasis></ulink> adds subtypes for the structures "
"<link linkend=\"PolyhedralSurface\">PolyhedralSurface</link>, <link linkend="
"\"Triangle\">Triangle</link> and <link linkend=\"TIN\">TIN</link>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:42
#, no-c-format
msgid ""
"Geometry models shapes in the 2-dimensional Cartesian plane. The "
"PolyhedralSurface, Triangle, and TIN types can also represent shapes in 3-"
"dimensional space. The size and location of shapes are specified by their "
"<emphasis role=\"bold\">coordinates</emphasis>. Each coordinate has a X and "
"Y <emphasis role=\"bold\">ordinate</emphasis> value determining its location "
"in the plane. Shapes are constructed from points or line segments, with "
"points specified by a single coordinate, and line segments by two "
"coordinates."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:50
#, no-c-format
msgid ""
"Coordinates may contain optional Z and M ordinate values. The Z ordinate is "
"often used to represent elevation. The M ordinate contains a measure value, "
"which may represent time or distance. If Z or M values are present in a "
"geometry value, they must be defined for each point in the geometry. If a "
"geometry has Z or M ordinates the <emphasis role=\"bold\">coordinate "
"dimension</emphasis> is 3D; if it has both Z and M the coordinate dimension "
"is 4D."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:58
#, no-c-format
msgid ""
"Geometry values are associated with a <emphasis role=\"bold\">spatial "
"reference system</emphasis> indicating the coordinate system in which it is "
"embedded. The spatial reference system is identified by the geometry SRID "
"number. The units of the X and Y axes are determined by the spatial "
"reference system. In <emphasis role=\"bold\">planar</emphasis> reference "
"systems the X and Y coordinates typically represent easting and northing, "
"while in <emphasis role=\"bold\">geodetic</emphasis> systems they represent "
"longitude and latitude. SRID 0 represents an infinite Cartesian plane with "
"no units assigned to its axes. See <xref linkend=\"spatial_ref_sys\"/>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:71
#, no-c-format
msgid ""
"The geometry <emphasis role=\"bold\">dimension</emphasis> is a property of "
"geometry types. Point types have dimension 0, linear types have dimension 1, "
"and polygonal types have dimension 2. Collections have the dimension of the "
"maximum element dimension."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:77
#, no-c-format
msgid ""
"A geometry value may be <emphasis role=\"bold\">empty</emphasis>. Empty "
"values contain no vertices (for atomic geometry types) or no elements (for "
"collections)."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:82
#, no-c-format
msgid ""
"An important property of geometry values is their spatial <emphasis role="
"\"bold\">extent</emphasis> or <emphasis role=\"bold\">bounding box</"
"emphasis>, which the OGC model calls <emphasis role=\"bold\">envelope</"
"emphasis>. This is the 2 or 3-dimensional box which encloses the coordinates "
"of a geometry. It is an efficient way to represent a geometry's extent in "
"coordinate space and to check whether two geometries interact."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:90
#, no-c-format
msgid ""
"The geometry model allows evaluating topological spatial relationships as "
"described in <xref linkend=\"DE-9IM\"/>. To support this the concepts of "
"<emphasis role=\"bold\">interior</emphasis>, <emphasis role=\"bold"
"\">boundary</emphasis> and <emphasis role=\"bold\">exterior</emphasis> are "
"defined for each geometry type. Geometries are topologically closed, so they "
"always contain their boundary. The boundary is a geometry of dimension one "
"less than that of the geometry itself."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:101
#, no-c-format
msgid ""
"The OGC geometry model defines validity rules for each geometry type. These "
"rules ensure that geometry values represents realistic situations (e.g. it "
"is possible to specify a polygon with a hole lying outside the shell, but "
"this makes no sense geometrically and is thus invalid). PostGIS also allows "
"storing and manipulating invalid geometry values. This allows detecting and "
"fixing them if needed. See <xref linkend=\"OGC_Validity\"/>"
msgstr ""

#. Tag: title
#: using_postgis_dataman.xml:112
#, no-c-format
msgid "Point"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:113
#, no-c-format
msgid ""
"A Point is a 0-dimensional geometry that represents a single location in "
"coordinate space."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:114
#, no-c-format
msgid ""
"POINT (1 2)\n"
"POINT Z (1 2 3)\n"
"POINT ZM (1 2 3 4)"
msgstr ""

#. Tag: title
#: using_postgis_dataman.xml:118
#, no-c-format
msgid "LineString"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:119
#, no-c-format
msgid ""
"A LineString is a 1-dimensional line formed by a contiguous sequence of line "
"segments. Each line segment is defined by two points, with the end point of "
"one segment forming the start point of the next segment. An OGC-valid "
"LineString has either zero or two or more points, but PostGIS also allows "
"single-point LineStrings. LineStrings may cross themselves (self-intersect). "
"A LineString is <emphasis role=\"bold\">closed</emphasis> if the start and "
"end points are the same. A LineString is <emphasis role=\"bold\">simple</"
"emphasis> if it does not self-intersect."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:128
#, fuzzy, no-c-format
msgid "LINESTRING (1 2, 3 4, 5 6)"
msgstr "LINESTRING(0 0,1 1,1 2)"

#. Tag: title
#: using_postgis_dataman.xml:132
#, no-c-format
msgid "LinearRing"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:133
#, no-c-format
msgid ""
"A LinearRing is a LineString which is both closed and simple. The first and "
"last points must be equal, and the line must not self-intersect."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:135
#, fuzzy, no-c-format
msgid "LINEARRING (0 0 0, 4 0 0, 4 4 0, 0 4 0, 0 0 0)"
msgstr "CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0)"

#. Tag: title
#: using_postgis_dataman.xml:139
#, no-c-format
msgid "Polygon"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:140
#, no-c-format
msgid ""
"A Polygon is a 2-dimensional planar region, delimited by an exterior "
"boundary (the shell) and zero or more interior boundaries (holes). Each "
"boundary is a <link linkend=\"LinearRing\">LinearRing</link>."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:145
#, fuzzy, no-c-format
msgid ""
"POLYGON ((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 0))"
msgstr ""
"POLYGON((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 0))"

#. Tag: title
#: using_postgis_dataman.xml:149
#, no-c-format
msgid "MultiPoint"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:150
#, no-c-format
msgid "A MultiPoint is a collection of Points."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:151
#, fuzzy, no-c-format
msgid "MULTIPOINT ( (0 0), (1 2) )"
msgstr "MULTIPOINT((0 0),(1 2))"

#. Tag: title
#: using_postgis_dataman.xml:155
#, no-c-format
msgid "MultiLineString"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:156
#, no-c-format
msgid ""
"A MultiLineString is a collection of LineStrings. A MultiLineString is "
"closed if each of its elements is closed."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:159
#, fuzzy, no-c-format
msgid "MULTILINESTRING ( (0 0,1 1,1 2), (2 3,3 2,5 4) )"
msgstr "MULTILINESTRING((0 0,1 1,1 2),(2 3,3 2,5 4))"

#. Tag: title
#: using_postgis_dataman.xml:163
#, no-c-format
msgid "MultiPolygon"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:164
#, no-c-format
msgid ""
"A MultiPolygon is a collection of non-overlapping, non-adjacent Polygons. "
"Polygons in the collection may touch only at a finite number of points."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:167
#, fuzzy, no-c-format
msgid "MULTIPOLYGON (((1 5, 5 5, 5 1, 1 1, 1 5)), ((6 5, 9 1, 6 1, 6 5)))"
msgstr ""
"MULTIPOLYGON(((0 0,4 0,4 4,0 4,0 0),(1 1,2 1,2 2,1 2,1 1)), ((-1 -1,-1 -2,-2 "
"-2,-2 -1,-1 -1)))"

#. Tag: title
#: using_postgis_dataman.xml:171
#, fuzzy, no-c-format
msgid "GeometryCollection"
msgstr "ジオメトリ検証"

#. Tag: para
#: using_postgis_dataman.xml:172
#, no-c-format
msgid ""
"A GeometryCollection is a heterogeneous (mixed) collection of geometries."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:173
#, fuzzy, no-c-format
msgid "GEOMETRYCOLLECTION ( POINT(2 3), LINESTRING(2 3, 3 4))"
msgstr "GEOMETRYCOLLECTION(POINT(2 3),LINESTRING(2 3,3 4))"

#. Tag: title
#: using_postgis_dataman.xml:177
#, no-c-format
msgid "PolyhedralSurface"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:178
#, no-c-format
msgid ""
"A PolyhedralSurface is a contiguous collection of patches or facets which "
"share some edges. Each patch is a planar Polygon. If the Polygon coordinates "
"have Z ordinates then the surface is 3-dimensional."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:181
#, fuzzy, no-c-format
msgid ""
"POLYHEDRALSURFACE Z (\n"
"  ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"  ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)),\n"
"  ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"  ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"  ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)),\n"
"  ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )"
msgstr ""
"POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 "
"1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)), ((1 1 0, 1 1 1, "
"1 0 1, 1 0 0, 1 1 0)), ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 "
"1, 1 1 1, 0 1 1, 0 0 1)) )"

#. Tag: title
#: using_postgis_dataman.xml:185
#, no-c-format
msgid "Triangle"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:186
#, no-c-format
msgid ""
"A Triangle is a polygon defined by three distinct non-collinear vertices. "
"Because a Triangle is a polygon it is specified by four coordinates, with "
"the first and fourth being equal."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:190
#, no-c-format
msgid "TRIANGLE ((0 0, 0 9, 9 0, 0 0))"
msgstr "TRIANGLE ((0 0, 0 9, 9 0, 0 0))"

#. Tag: title
#: using_postgis_dataman.xml:194
#, no-c-format
msgid "<title>TIN</title>"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:195
#, no-c-format
msgid ""
"A TIN is a collection of non-overlapping <link linkend=\"Triangle"
"\">Triangle</link>s representing a <ulink url=\"https://en.wikipedia.org/"
"wiki/Triangulated_irregular_network\">Triangulated Irregular Network</ulink>."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:199
#, fuzzy, no-c-format
msgid ""
"TIN Z ( ((0 0 0, 0 0 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 1 0, 0 0 0)) )"
msgstr "TIN( ((0 0 0, 0 0 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 1 0, 0 0 0)) )"

#. Tag: title
#: using_postgis_dataman.xml:206
#, fuzzy, no-c-format
msgid "SQL/MM Part 3 - Curves"
msgstr "SQL-MM第3部"

#. Tag: para
#: using_postgis_dataman.xml:208
#, no-c-format
msgid ""
"The <ulink url=\"https://www.iso.org/obp/ui/#iso:std:iso-iec:13249:-3:ed-5:"
"v1:en\"><emphasis>ISO/IEC 13249-3 SQL Multimedia - Spatial</emphasis></"
"ulink> standard (SQL/MM) extends the OGC SFA to define Geometry subtypes "
"containing curves with circular arcs. The SQL/MM types support 3DM, 3DZ and "
"4D coordinates."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:215
#, no-c-format
msgid ""
"All floating point comparisons within the SQL-MM implementation are "
"performed to a specified tolerance, currently 1E-8."
msgstr ""
"SQL-MM実装での全ての浮動小数点数の比較では、所定の丸め誤差があります。現在は"
"1E-8です。"

#. Tag: title
#: using_postgis_dataman.xml:220
#, no-c-format
msgid "CircularString"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:222
#, fuzzy, no-c-format
msgid ""
"CircularString is the basic curve type, similar to a LineString in the "
"linear world. A single arc segment is specified by three points: the start "
"and end points (first and third) and some other point on the arc. To specify "
"a closed circle the start and end points are the same and the middle point "
"is the opposite point on the circle diameter (which is the center of the "
"arc). In a sequence of arcs the end point of the previous arc is the start "
"point of the next arc, just like the segments of a LineString. This means "
"that a CircularString must have an odd number of points greater than 1."
msgstr ""
"CIRCULARSTRINGは基本的な曲線型で、線型のLINESTRINGに似ています。一つの辺で、"
"始点、終点 (一つめと三つめ)と弧上の任意の点、の3点が必要です。例外として、始"
"点と終点が同じとなる閉曲線があります。閉曲線では二つ目の点が弧の中心、すなわ"
"ち円の反対側にならなければなりません。弧の連結では、LINESTRINGと同じように、"
"前の弧の最後の点が次の弧の最初の点となります。よって、妥当なCIRCULARSTRINGは1"
"以上の奇数になります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:234
#, fuzzy, no-c-format
msgid ""
"CIRCULARSTRING(0 0, 1 1, 1 0)\n"
"\n"
"CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0)"
msgstr "CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0)"

#. Tag: title
#: using_postgis_dataman.xml:237
#, no-c-format
msgid "CompoundCurve"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:238
#, fuzzy, no-c-format
msgid ""
"A CompoundCurve is a single continuous curve that may contain both circular "
"arc segments and linear segments. That means that in addition to having well-"
"formed components, the end point of every component (except the last) must "
"be coincident with the start point of the following component."
msgstr ""
"複合曲線は、曲線 (円弧)セグメントと線型セグメントの両方を持つ、単一の連続した"
"曲線です。 よって、要素が的確である必要があることに加え、各要素 (最終要素は除"
"く)の終点は次の要素の始点と同じになる必要があります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:244
#, fuzzy, no-c-format
msgid "COMPOUNDCURVE( CIRCULARSTRING(0 0, 1 1, 1 0),(1 0, 0 1))"
msgstr "COMPOUNDCURVE(CIRCULARSTRING(0 0, 1 1, 1 0),(1 0, 0 1))"

#. Tag: title
#: using_postgis_dataman.xml:247
#, no-c-format
msgid "CurvePolygon"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:248
#, fuzzy, no-c-format
msgid ""
"A CurvePolygon is like a polygon, with an outer ring and zero or more inner "
"rings. The difference is that a ring can be a CircularString or "
"CompoundCurve as well as a LineString."
msgstr ""
"CURVEPOLYGONは外環と0以上の内環とを持つ点でPOLYGONと似ています。 異なる点は、"
"環に曲線ストリング、線型ストリング、複合ストリングのいずれも取れる点です。"

#. Tag: para
#: using_postgis_dataman.xml:252
#, no-c-format
msgid "As of PostGIS 1.4 PostGIS supports compound curves in a curve polygon."
msgstr ""
"PostGIS 1.4から、PostGISで曲線ポリゴンで複合曲線をサポートするようになりまし"
"た。"

#. Tag: programlisting
#: using_postgis_dataman.xml:254
#, fuzzy, no-c-format
msgid ""
"CURVEPOLYGON(\n"
"  CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0),\n"
"  (1 1, 3 3, 3 1, 1 1) )"
msgstr ""
"CURVEPOLYGON(CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0),(1 1, 3 3, 3 1, 1 1))"

#. Tag: para
#: using_postgis_dataman.xml:256
#, no-c-format
msgid ""
"Example: A CurvePolygon with the shell defined by a CompoundCurve containing "
"a CircularString and a LineString, and a hole defined by a CircularString"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:259
#, fuzzy, no-c-format
msgid ""
"CURVEPOLYGON(\n"
"  COMPOUNDCURVE( CIRCULARSTRING(0 0,2 0, 2 1, 2 3, 4 3),\n"
"                 (4 3, 4 5, 1 4, 0 0)),\n"
"  CIRCULARSTRING(1.7 1, 1.4 0.4, 1.6 0.4, 1.6 0.5, 1.7 1) )"
msgstr ""
"曲線ポリゴンの中に複合ポリゴンがある例は次の通りです。 "
"CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(0 0,2 0, 2 1, 2 3, 4 3),(4 3, 4 5, "
"1 4, 0 0)), CIRCULARSTRING(1.7 1, 1.4 0.4, 1.6 0.4, 1.6 0.5, 1.7 1) )"

#. Tag: title
#: using_postgis_dataman.xml:263
#, no-c-format
msgid "MultiCurve"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:264
#, fuzzy, no-c-format
msgid ""
"A MultiCurve is a collection of curves which can include LineStrings, "
"CircularStrings or CompoundCurves."
msgstr ""
"MULTICURVEは曲線のコレクションで、線型ストリング、曲線ストリング、複合ストリ"
"ングを取れます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:267
#, fuzzy, no-c-format
msgid "MULTICURVE( (0 0, 5 5), CIRCULARSTRING(4 0, 4 4, 8 4))"
msgstr "MULTICURVE( (0 0, 5 5), CIRCULARSTRING(4 0, 4 4, 8 4) )"

#. Tag: title
#: using_postgis_dataman.xml:270
#, no-c-format
msgid "MultiSurface"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:271
#, fuzzy, no-c-format
msgid ""
"A MultiSurface is a collection of surfaces, which can be (linear) Polygons "
"or CurvePolygons."
msgstr "サーフェスのコレクションです。(線型)ポリゴンか曲線ポリゴンを取れます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:274
#, fuzzy, no-c-format
msgid ""
"MULTISURFACE(\n"
"  CURVEPOLYGON(\n"
"    CIRCULARSTRING( 0 0, 4 0, 4 4, 0 4, 0 0),\n"
"    (1 1, 3 3, 3 1, 1 1)),\n"
"  ((10 10, 14 12, 11 10, 10 10), (11 11, 11.5 11, 11 11.5, 11 11)))"
msgstr ""
"MULTISURFACE(CURVEPOLYGON(CIRCULARSTRING(0 0, 4 0, 4 4, 0 4, 0 0),(1 1, 3 3, "
"3 1, 1 1)),((10 10, 14 12, 11 10, 10 10),(11 11, 11.5 11, 11 11.5, 11 11)))"

#. Tag: title
#: using_postgis_dataman.xml:281
#, fuzzy, no-c-format
msgid "WKT and WKB"
msgstr "OpenGIS WKBとWKT"

#. Tag: para
#: using_postgis_dataman.xml:283
#, fuzzy, no-c-format
msgid ""
"The OGC SFA specification defines two formats for representing geometry "
"values for external use: Well-Known Text (WKT) and Well-Known Binary (WKB). "
"Both WKT and WKB include information about the type of the object and the "
"coordinates which define it."
msgstr ""
"OpenGIS仕様は空間オブジェクトの表現について二つの標準を定義しています。Well-"
"Knownテキスト (WKT)形式とWell-Knownバイナリ (WKB)形式です。WKTもWKBも、オブ"
"ジェクトの型とオブジェクトを形成する座標に関する情報を持っています。"

#. Tag: para
#: using_postgis_dataman.xml:288
#, fuzzy, no-c-format
msgid ""
"Well-Known Text (WKT) provides a standard textual representation of spatial "
"data. Examples of WKT representations of spatial objects are:"
msgstr ""
"空間参照系のWell-Knownテキスト表現です。たとえば、WKT SRSの表現は、次のように"
"なります。"

#. Tag: para
#: using_postgis_dataman.xml:293
#, no-c-format
msgid "POINT(0 0)"
msgstr "POINT(0 0)"

#. Tag: para
#: using_postgis_dataman.xml:297
#, no-c-format
msgid "POINT Z (0 0 0)"
msgstr "POINT Z (0 0 0)"

#. Tag: para
#: using_postgis_dataman.xml:301
#, no-c-format
msgid "POINT ZM (0 0 0 0)"
msgstr "POINT ZM (0 0 0 0)"

#. Tag: para
#: using_postgis_dataman.xml:305
#, no-c-format
msgid "POINT EMPTY"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:309
#, no-c-format
msgid "LINESTRING(0 0,1 1,1 2)"
msgstr "LINESTRING(0 0,1 1,1 2)"

#. Tag: para
#: using_postgis_dataman.xml:313
#, fuzzy, no-c-format
msgid "LINESTRING EMPTY"
msgstr "LINESTRING"

#. Tag: para
#: using_postgis_dataman.xml:317
#, no-c-format
msgid "POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1))"
msgstr "POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1))"

#. Tag: para
#: using_postgis_dataman.xml:321
#, no-c-format
msgid "MULTIPOINT((0 0),(1 2))"
msgstr "MULTIPOINT((0 0),(1 2))"

#. Tag: para
#: using_postgis_dataman.xml:325
#, no-c-format
msgid "MULTIPOINT Z ((0 0 0),(1 2 3))"
msgstr "MULTIPOINT Z ((0 0 0),(1 2 3))"

#. Tag: para
#: using_postgis_dataman.xml:329
#, fuzzy, no-c-format
msgid "MULTIPOINT EMPTY"
msgstr "MULTIPOINT"

#. Tag: para
#: using_postgis_dataman.xml:333
#, no-c-format
msgid "MULTILINESTRING((0 0,1 1,1 2),(2 3,3 2,5 4))"
msgstr "MULTILINESTRING((0 0,1 1,1 2),(2 3,3 2,5 4))"

#. Tag: para
#: using_postgis_dataman.xml:337
#, no-c-format
msgid ""
"MULTIPOLYGON(((0 0,4 0,4 4,0 4,0 0),(1 1,2 1,2 2,1 2,1 1)), ((-1 -1,-1 -2,-2 "
"-2,-2 -1,-1 -1)))"
msgstr ""
"MULTIPOLYGON(((0 0,4 0,4 4,0 4,0 0),(1 1,2 1,2 2,1 2,1 1)), ((-1 -1,-1 -2,-2 "
"-2,-2 -1,-1 -1)))"

#. Tag: para
#: using_postgis_dataman.xml:342
#, no-c-format
msgid "GEOMETRYCOLLECTION(POINT(2 3),LINESTRING(2 3,3 4))"
msgstr "GEOMETRYCOLLECTION(POINT(2 3),LINESTRING(2 3,3 4))"

#. Tag: para
#: using_postgis_dataman.xml:346
#, fuzzy, no-c-format
msgid "GEOMETRYCOLLECTION EMPTY"
msgstr "GEOMETRYCOLLECTION"

#. Tag: para
#: using_postgis_dataman.xml:350
#, no-c-format
msgid ""
"Input and output of WKT is provided by the functions <xref linkend="
"\"ST_AsText\"/> and <xref linkend=\"ST_GeomFromText\"/>:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:353
#, fuzzy, no-c-format
msgid ""
"text WKT = ST_AsText(geometry);\n"
"geometry = ST_GeomFromText(text WKT, SRID);"
msgstr ""
"バイト配列 WKB = ST_AsBinary(geometry);\n"
"テキスト WKT = ST_AsText(geometry);\n"
"ジオメトリ = ST_GeomFromWKB (bytea WKB、SRID);\n"
"ジオメトリ = ST_GeometryFromText (テキスト WKT、SRID);"

#. Tag: para
#: using_postgis_dataman.xml:355
#, fuzzy, no-c-format
msgid ""
"For example, a statement to create and insert a spatial object from WKT and "
"a SRID is:"
msgstr ""
"たとえば、OGC空間オブジェクトを生成して挿入する妥当なINSERTステートメントは次"
"の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:357
#, fuzzy, no-c-format
msgid ""
"INSERT INTO geotable ( geom, name )\n"
"  VALUES ( ST_GeomFromText('POINT(-126.4 45.32)', 312), 'A Place');"
msgstr ""
"INSERT INTO geotable ( the_geom, the_name )\n"
"  VALUES ( ST_GeomFromText('POINT(-126.4 45.32)', 312), 'A Place');"

#. Tag: para
#: using_postgis_dataman.xml:359
#, no-c-format
msgid ""
"Well-Known Binary (WKB) provides a portable, full-precision representation "
"of spatial data as binary data (arrays of bytes). Examples of the WKB "
"representations of spatial objects are:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:365
#, fuzzy, no-c-format
msgid "WKT: POINT(1 1)"
msgstr "EWKB/EWKT: POINT(1 2 3)"

#. Tag: para
#: using_postgis_dataman.xml:366
#, no-c-format
msgid "WKB: 0101000000000000000000F03F000000000000F03"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:370
#, fuzzy, no-c-format
msgid "WKT: LINESTRING (2 2, 9 9)"
msgstr "LINESTRING(0 0,1 1,1 2)"

#. Tag: para
#: using_postgis_dataman.xml:371
#, no-c-format
msgid ""
"WKB: "
"0102000000020000000000000000000040000000000000004000000000000022400000000000002240"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:375
#, no-c-format
msgid ""
"Input and output of WKB is provided by the functions <xref linkend="
"\"ST_AsBinary\"/> and <xref linkend=\"ST_GeomFromWKB\"/>:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:378
#, fuzzy, no-c-format
msgid ""
"bytea WKB = ST_AsBinary(geometry);\n"
"geometry = ST_GeomFromWKB(bytea WKB, SRID);"
msgstr ""
"バイト配列 WKB = ST_AsBinary(geometry);\n"
"テキスト WKT = ST_AsText(geometry);\n"
"ジオメトリ = ST_GeomFromWKB (bytea WKB、SRID);\n"
"ジオメトリ = ST_GeometryFromText (テキスト WKT、SRID);"

#. Tag: para
#: using_postgis_dataman.xml:380
#, fuzzy, no-c-format
msgid ""
"For example, a statement to create and insert a spatial object from WKB is:"
msgstr ""
"たとえば、OGC空間オブジェクトを生成して挿入する妥当なINSERTステートメントは次"
"の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:383
#, fuzzy, no-c-format
msgid ""
"INSERT INTO geotable ( geom, name )\n"
"  VALUES ( ST_GeomFromWKB('\\x0101000000000000000000f03f000000000000f03f', "
"312), 'A Place');"
msgstr ""
"INSERT INTO geotable ( the_geom, the_name )\n"
"  VALUES ( ST_GeomFromText('POINT(-126.4 45.32)', 312), 'A Place');"

#. Tag: title
#: using_postgis_dataman.xml:389
#, no-c-format
msgid "Geometry Data Type"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:391
#, no-c-format
msgid ""
"PostGIS implements the OGC Simple Features model by defining a PostgreSQL "
"data type called <varname>geometry</varname>. It represents all of the "
"geometry subtypes by using an internal type code (see <xref linkend="
"\"GeometryType\"/> and <xref linkend=\"ST_GeometryType\"/>). This allows "
"modelling spatial features as rows of tables defined with a column of type "
"<varname>geometry</varname>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:399
#, no-c-format
msgid ""
"The <varname>geometry</varname> data type is <emphasis>opaque</emphasis>, "
"which means that all access is done via invoking functions on geometry "
"values. Functions allow creating geometry objects, accessing or updating all "
"internal fields, and compute new geometry values. PostGIS supports all the "
"functions specified in the OGC <ulink url=\"https://portal.ogc.org/files/?"
"artifact_id=25354\"><emphasis>Simple feature access - Part 2: SQL option</"
"emphasis></ulink> (SFS) specification, as well many others. See <xref "
"linkend=\"reference\"/> for the full list of functions."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:410
#, no-c-format
msgid ""
"PostGIS follows the SFA standard by prefixing spatial functions with \"ST_"
"\". This was intended to stand for \"Spatial and Temporal\", but the "
"temporal part of the standard was never developed. Instead it can be "
"interpreted as \"Spatial Type\"."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:417
#, fuzzy, no-c-format
msgid ""
"The SFA standard specifies that spatial objects include a Spatial Reference "
"System identifier (SRID). The SRID is required when creating spatial objects "
"for insertion into the database (it may be defaulted to 0). See <xref "
"linkend=\"ST_SRID\"/> and <xref linkend=\"spatial_ref_sys\"/>"
msgstr ""
"OpenGIS仕様では、空間オブジェクトの内部保存書式は空間参照系識別子 (Spatial "
"Referencing System IDentifier, SRID)を含むことも求められます。SRIDはデータ"
"ベースへの挿入のために空間オブジェクトが生成される時に求められます。"

#. Tag: para
#: using_postgis_dataman.xml:422
#, no-c-format
msgid ""
"To make querying geometry efficient PostGIS defines various kinds of spatial "
"indexes, and spatial operators to use them. See <xref linkend=\"build-indexes"
"\"/> and <xref linkend=\"using-query-indexes\"/> for details."
msgstr ""

#. Tag: title
#: using_postgis_dataman.xml:428
#, fuzzy, no-c-format
msgid "PostGIS EWKB and EWKT"
msgstr "OpenGIS WKBとWKT"

#. Tag: para
#: using_postgis_dataman.xml:430
#, no-c-format
msgid ""
"OGC SFA specifications initially supported only 2D geometries, and the "
"geometry SRID is not included in the input/output representations. The OGC "
"SFA specification 1.2.1 (which aligns with the ISO 19125 standard) adds "
"support for 3D (ZYZ) and measured (XYM and XYZM) coordinates, but still does "
"not include the SRID value."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:436
#, no-c-format
msgid ""
"Because of these limitations PostGIS defined extended EWKB and EWKT formats. "
"They provide 3D (XYZ and XYM) and 4D (XYZM) coordinate support and include "
"SRID information. Including all geometry information allows PostGIS to use "
"EWKB as the format of record (e.g. in DUMP files)."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:442
#, no-c-format
msgid ""
"EWKB and EWKT are used for the \"canonical forms\" of PostGIS data objects. "
"For input, the canonical form for binary data is EWKB, and for text data "
"either EWKB or EWKT is accepted. This allows geometry values to be created "
"by casting a text value in either HEXEWKB or EWKT to a geometry value using "
"<varname>::geometry</varname>. For output, the canonical form for binary is "
"EWKB, and for text it is HEXEWKB (hex-encoded EWKB)."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:451
#, no-c-format
msgid ""
"For example this statement creates a geometry by casting from an EWKT text "
"value, and outputs it using the canonical form of HEXEWKB:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:454
#, fuzzy, no-c-format
msgid ""
"SELECT 'SRID=4;POINT(0 0)'::geometry;\n"
"  geometry\n"
"  ----------------------------------------------------\n"
"  01010000200400000000000000000000000000000000000000"
msgstr ""
"=# SELECT 'SRID=4;POINT(0 0)'::geometry;\n"
"\n"
"geometry\n"
"----------------------------------------------------\n"
"01010000200400000000000000000000000000000000000000\n"
"(1 row)"

#. Tag: para
#: using_postgis_dataman.xml:456
#, no-c-format
msgid "PostGIS EWKT output has a few differences to OGC WKT:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:460
#, fuzzy, no-c-format
msgid "For 3DZ geometries the Z qualifier is omitted:"
msgstr "XYZジオメトリの場合、Z修飾子は削除されます。"

#. Tag: para
#: using_postgis_dataman.xml:461
#, fuzzy, no-c-format
msgid "OGC: POINT Z (1 2 3)"
msgstr "OpenGIS: POINT Z (1 2 3)"

#. Tag: para
#: using_postgis_dataman.xml:462
#, fuzzy, no-c-format
msgid "EWKT: POINT (1 2 3)"
msgstr "EWKB/EWKT: POINT(1 2 3)"

#. Tag: para
#: using_postgis_dataman.xml:465
#, fuzzy, no-c-format
msgid "For 3DM geometries the M qualifier is included:"
msgstr "XYMジオメトリはM修飾子を保持します。"

#. Tag: para
#: using_postgis_dataman.xml:466
#, fuzzy, no-c-format
msgid "OGC: POINT M (1 2 3)"
msgstr "OpenGIS: POINT M (1 2 3)"

#. Tag: para
#: using_postgis_dataman.xml:467
#, fuzzy, no-c-format
msgid "EWKT: POINTM (1 2 3)"
msgstr "EWKB/EWKT: POINTM(1 2 3)"

#. Tag: para
#: using_postgis_dataman.xml:470
#, fuzzy, no-c-format
msgid "For 4D geometries the ZM qualifier is omitted:"
msgstr "XYZMジオメトリではZM修飾子が削除されます。"

#. Tag: para
#: using_postgis_dataman.xml:471
#, fuzzy, no-c-format
msgid "OGC: POINT ZM (1 2 3 4)"
msgstr "OpenGIS: POINT ZM (1 2 3 4)"

#. Tag: para
#: using_postgis_dataman.xml:472
#, fuzzy, no-c-format
msgid "EWKT: POINT (1 2 3 4)"
msgstr "EWKB/EWKT: POINT(1 2 3 4)"

#. Tag: para
#: using_postgis_dataman.xml:476
#, fuzzy, no-c-format
msgid ""
"EWKT avoids over-specifying dimensionality and the inconsistencies that can "
"occur with the OGC/ISO format, such as:"
msgstr ""
"こうすることで、EWKB/EWKTは次元を過度に指定することや、次に示すようなISOが認"
"める潜在的エラーの種別全体を回避しています。"

#. Tag: para
#: using_postgis_dataman.xml:482
#, no-c-format
msgid "POINT ZM (1 1)"
msgstr "POINT ZM (1 1)"

#. Tag: para
#: using_postgis_dataman.xml:485
#, no-c-format
msgid "POINT ZM (1 1 1)"
msgstr "POINT ZM (1 1 1)"

#. Tag: para
#: using_postgis_dataman.xml:488
#, no-c-format
msgid "POINT (1 1 1 1)"
msgstr "POINT (1 1 1 1)"

#. Tag: para
#: using_postgis_dataman.xml:493
#, fuzzy, no-c-format
msgid ""
"PostGIS extended formats are currently a superset of the OGC ones, so that "
"every valid OGC WKB/WKT is also valid EWKB/EWKT. However, this might vary in "
"the future, if the OGC extends a format in a way that conflicts with the "
"PosGIS definition. Thus you SHOULD NOT rely on this compatibility!"
msgstr ""
"PostGIS拡張書式は現在のところOGC書式のスーパーセットとなっています (全ての妥"
"当なWKB/WKTは妥当なEWKB/EWKTです)。しかし、特にもしOGCがPostGIS拡張と矛盾する"
"新しい書式を出すことがあるなら、これは将来変更されるかも知れません。ゆえにこ"
"の機能に頼るべきではありません。"

#. Tag: para
#: using_postgis_dataman.xml:500
#, fuzzy, no-c-format
msgid "Examples of the EWKT text representation of spatial objects are:"
msgstr ""
"フィーチャーの空間オブジェクトのテキスト表現 (WKT)の例は、次の通りです。"

#. Tag: para
#: using_postgis_dataman.xml:504
#, no-c-format
msgid "POINT(0 0 0) -- XYZ"
msgstr "POINT(0 0 0) -- XYZ"

#. Tag: para
#: using_postgis_dataman.xml:508
#, no-c-format
msgid "SRID=32632;POINT(0 0) -- XY with SRID"
msgstr "SRID=32632;POINT(0 0) -- SRID付きXY"

#. Tag: para
#: using_postgis_dataman.xml:512
#, no-c-format
msgid "POINTM(0 0 0) -- XYM"
msgstr "POINTM(0 0 0) -- XYM"

#. Tag: para
#: using_postgis_dataman.xml:516
#, no-c-format
msgid "POINT(0 0 0 0) -- XYZM"
msgstr "POINT(0 0 0 0) -- XYZM"

#. Tag: para
#: using_postgis_dataman.xml:520
#, no-c-format
msgid "SRID=4326;MULTIPOINTM(0 0 0,1 2 1) -- XYM with SRID"
msgstr "SRID=4326;MULTIPOINTM(0 0 0,1 2 1) -- SRID付きXYM"

#. Tag: para
#: using_postgis_dataman.xml:524
#, no-c-format
msgid "MULTILINESTRING((0 0 0,1 1 0,1 2 1),(2 3 1,3 2 1,5 4 1))"
msgstr "MULTILINESTRING((0 0 0,1 1 0,1 2 1),(2 3 1,3 2 1,5 4 1))"

#. Tag: para
#: using_postgis_dataman.xml:529
#, no-c-format
msgid ""
"POLYGON((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 0))"
msgstr ""
"POLYGON((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 0))"

#. Tag: para
#: using_postgis_dataman.xml:534
#, no-c-format
msgid ""
"MULTIPOLYGON(((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 "
"0)),((-1 -1 0,-1 -2 0,-2 -2 0,-2 -1 0,-1 -1 0)))"
msgstr ""
"MULTIPOLYGON(((0 0 0,4 0 0,4 4 0,0 4 0,0 0 0),(1 1 0,2 1 0,2 2 0,1 2 0,1 1 "
"0)),((-1 -1 0,-1 -2 0,-2 -2 0,-2 -1 0,-1 -1 0)))"

#. Tag: para
#: using_postgis_dataman.xml:539
#, no-c-format
msgid "GEOMETRYCOLLECTIONM( POINTM(2 3 9), LINESTRINGM(2 3 4, 3 4 5) )"
msgstr "GEOMETRYCOLLECTIONM( POINTM(2 3 9), LINESTRINGM(2 3 4, 3 4 5) )"

#. Tag: para
#: using_postgis_dataman.xml:543
#, no-c-format
msgid "MULTICURVE( (0 0, 5 5), CIRCULARSTRING(4 0, 4 4, 8 4) )"
msgstr "MULTICURVE( (0 0, 5 5), CIRCULARSTRING(4 0, 4 4, 8 4) )"

#. Tag: para
#: using_postgis_dataman.xml:547
#, no-c-format
msgid ""
"POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 "
"1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)), ((1 1 0, 1 1 1, "
"1 0 1, 1 0 0, 1 1 0)), ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 "
"1, 1 1 1, 0 1 1, 0 0 1)) )"
msgstr ""
"POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 "
"1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)), ((1 1 0, 1 1 1, "
"1 0 1, 1 0 0, 1 1 0)), ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 "
"1, 1 1 1, 0 1 1, 0 0 1)) )"

#. Tag: para
#: using_postgis_dataman.xml:553
#, fuzzy, no-c-format
msgid "TRIANGLE ((0 0, 0 10, 10 0, 0 0))"
msgstr "TRIANGLE ((0 0, 0 10, 10 0, 0 0))"

#. Tag: para
#: using_postgis_dataman.xml:557
#, no-c-format
msgid "TIN( ((0 0 0, 0 0 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 1 0, 0 0 0)) )"
msgstr "TIN( ((0 0 0, 0 0 1, 0 1 0, 0 0 0)), ((0 0 0, 0 1 0, 1 1 0, 0 0 0)) )"

#. Tag: para
#: using_postgis_dataman.xml:562
#, fuzzy, no-c-format
msgid ""
"Input and output using these formats is available using the following "
"functions:"
msgstr "これらの書式の入出力は次のインタフェースを用いて実現できます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:564
#, no-c-format
msgid ""
"bytea EWKB = ST_AsEWKB(geometry);\n"
"text EWKT = ST_AsEWKT(geometry);\n"
"geometry = ST_GeomFromEWKB(bytea EWKB);\n"
"geometry = ST_GeomFromEWKT(text EWKT);"
msgstr ""
"バイト配列 EWKB = ST_AsEWKB(geometry);\n"
"テキスト EWKT = ST_AsEWKT(geometry);\n"
"ジオメトリ = ST_GeomFromEWKB(bytea EWKB);\n"
"ジオメトリ = ST_GeomFromEWKT(text EWKT);"

#. Tag: para
#: using_postgis_dataman.xml:566
#, fuzzy, no-c-format
msgid ""
"For example, a statement to create and insert a PostGIS spatial object using "
"EWKT is:"
msgstr ""
"たとえば、PostGISの空間オブジェクトを作成し挿入する妥当なINSERTステートメント"
"は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:568
#, fuzzy, no-c-format
msgid ""
"INSERT INTO geotable ( geom, name )\n"
"  VALUES ( ST_GeomFromEWKT('SRID=312;POINTM(-126.4 45.32 15)'), 'A Place' )"
msgstr ""
"INSERT INTO geotable ( the_geom, the_name )\n"
"  VALUES ( ST_GeomFromEWKT('SRID=312;POINTM(-126.4 45.32 15)'), 'A Place' )"

#. Tag: title
#: using_postgis_dataman.xml:575
#, fuzzy, no-c-format
msgid "Geography Data Type"
msgstr "PostGISジオグラフィ型"

#. Tag: para
#: using_postgis_dataman.xml:577
#, fuzzy, no-c-format
msgid ""
"The PostGIS <varname>geography</varname> data type provides native support "
"for spatial features represented on \"geographic\" coordinates (sometimes "
"called \"geodetic\" coordinates, or \"lat/lon\", or \"lon/lat\"). Geographic "
"coordinates are spherical coordinates expressed in angular units (degrees)."
msgstr ""
"ジオグラフィ型は、「地理」座標 (しばしば「測地」座標、\"lat/lon\"、\"lon/lat"
"\"、緯度経度, 経度緯度などとも呼ばれます)上で表現された空間フィーチャーのネイ"
"ティブサポートするためのものです。地理座標は角度の単位 (度)で表現される球面座"
"標です。"

#. Tag: para
#: using_postgis_dataman.xml:579
#, fuzzy, no-c-format
msgid ""
"The basis for the PostGIS geometry data type is a plane. The shortest path "
"between two points on the plane is a straight line. That means functions on "
"geometries (areas, distances, lengths, intersections, etc) are calculated "
"using straight line vectors and cartesian mathematics. This makes them "
"simpler to implement and faster to execute, but also makes them inaccurate "
"for data on the spheroidal surface of the earth."
msgstr ""
"PostGISジオメトリ型の基礎は平面です。平面上の二点間の最短コースは直線になりま"
"す。よって、ジオメトリ上の計算 (面積、距離、長さ、インタセクション等)は、デカ"
"ルト座標と線型ベクトルを使用することができます。"

#. Tag: para
#: using_postgis_dataman.xml:587
#, fuzzy, no-c-format
msgid ""
"The PostGIS geography data type is based on a spherical model. The shortest "
"path between two points on the sphere is a great circle arc. Functions on "
"geographies (areas, distances, lengths, intersections, etc) are calculated "
"using arcs on the sphere. By taking the spheroidal shape of the world into "
"account, the functions provide more accurate results."
msgstr ""
"PostGISのジオグラフィ型の基礎は球面です。球面上での二点間の最短距離は大圏の弧"
"です。よって、ジオグラフィ上の計算 (面積、距離、長さ、インタセクション等)は、"
"球面上で計算しなければならず、複雑な計算が必要となります。より正確な計測のた"
"めには、世界の実際の回転楕円体の形を考慮に入れなければならず、非常に複雑で"
"す。"

#. Tag: para
#: using_postgis_dataman.xml:592
#, fuzzy, no-c-format
msgid ""
"Because the underlying mathematics is more complicated, there are fewer "
"functions defined for the geography type than for the geometry type. Over "
"time, as new algorithms are added the capabilities of the geography type "
"will expand. As a workaround one can convert back and forth between geometry "
"and geography types."
msgstr ""
"基礎となる数学が大変に複雑なので、ジオグラフィ型用に定義された関数は、ジオメ"
"トリ型よりも少ないです。時間とともに、新しいアルゴリズムが追加されて、ジオグ"
"ラフィ型の能力は拡大していくでしょう。"

#. Tag: para
#: using_postgis_dataman.xml:596
#, no-c-format
msgid ""
"Like the geometry data type, geography data is associated with a spatial "
"reference system via a spatial reference system identifier (SRID). Any "
"geodetic (long/lat based) spatial reference system defined in the "
"<varname>spatial_ref_sys</varname> table can be used. (Prior to PostGIS 2.2, "
"the geography type supported only WGS 84 geodetic (SRID:4326)). You can add "
"your own custom geodetic spatial reference system as described in <xref "
"linkend=\"user-spatial-ref-sys\"/>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:602
#, fuzzy, no-c-format
msgid ""
"For all spatial reference systems the units returned by measurement "
"functions (e.g. <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_Length\"/"
">, <xref linkend=\"ST_Perimeter\"/>, <xref linkend=\"ST_Area\"/>) and for "
"the distance argument of <xref linkend=\"ST_DWithin\"/> are in meters."
msgstr ""
"どの空間参照系を使用しても、計測関数 (<xref linkend=\"ST_Distance\"/>, <xref "
"linkend=\"ST_Length\"/>, <xref linkend=\"ST_Perimeter\"/>, <xref linkend="
"\"ST_Area\"/>)の返り値の単位と、<xref linkend=\"ST_DWithin\"/>の入力の単位は"
"メートルです。"

#. Tag: title
#: using_postgis_dataman.xml:607
#, fuzzy, no-c-format
msgid "Creating Geography Tables"
msgstr "空間テーブルを作る"

#. Tag: para
#: using_postgis_dataman.xml:609
#, no-c-format
msgid ""
"You can create a table to store geography data using the <ulink url="
"\"https://www.postgresql.org/docs/current/sql-createtable.html\">CREATE "
"TABLE</ulink> SQL statement with a column of type <varname>geography</"
"varname>. The following example creates a table with a geography column "
"storing 2D LineStrings in the WGS84 geodetic coordinate system (SRID 4326):"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:615
#, fuzzy, no-c-format
msgid ""
"CREATE TABLE global_points (\n"
"    id SERIAL PRIMARY KEY,\n"
"    name VARCHAR(64),\n"
"    location geography(POINT,4326)\n"
"  );"
msgstr ""
"CREATE TABLE global_points (\n"
"    id SERIAL PRIMARY KEY,\n"
"    name VARCHAR(64),\n"
"    location GEOGRAPHY(POINT,4326)\n"
"  );"

#. Tag: para
#: using_postgis_dataman.xml:617
#, no-c-format
msgid "The geography type supports two optional type modifiers:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:621
#, fuzzy, no-c-format
msgid ""
"the spatial type modifier restricts the kind of shapes and dimensions "
"allowed in the column. Values allowed for the spatial type are: POINT, "
"LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON, "
"GEOMETRYCOLLECTION. The geography type does not support curves, TINS, or "
"POLYHEDRALSURFACEs. The modifier supports coordinate dimensionality "
"restrictions by adding suffixes: Z, M and ZM. For example, a modifier of "
"'LINESTRINGM' only allows linestrings with three dimensions, and treats the "
"third dimension as a measure. Similarly, 'POINTZM' requires four dimensional "
"(XYZM) data."
msgstr ""
"型修飾子として受け付ける値は、POINT, LINESTRING, POLYGON, MULTIPOINT, "
"MULTILINESTRING, MULTIPOLYGONです。型修飾子は、Z, M, ZMの後置子を付けることで"
"次元制限にも対応します。たとえば、'LINESTRINGM'という型修飾子で、三つ目の次元"
"をMとする3次元のラインストリングのみ受け付けることになります。同じよう"
"に'POINTZM'で、4次元データを期待します。"

#. Tag: para
#: using_postgis_dataman.xml:630
#, no-c-format
msgid ""
"the SRID modifier restricts the spatial reference system SRID to a "
"particular number. If omitted, the SRID defaults to 4326 (WGS84 geodetic), "
"and all calculations are performed using WGS84."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:638
#, no-c-format
msgid "Examples of creating tables with geography columns:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:641
#, fuzzy, no-c-format
msgid ""
"Create a table with 2D POINT geography with the default SRID 4326 (WGS84 "
"long/lat):"
msgstr ""
"POINT: SRID指定なしでの2次元ポイントジオグラフィのテーブル生成は次の通りで"
"す。デフォルトは4326 WGS84経度緯度となります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:642
#, no-c-format
msgid "CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );"
msgstr ""
"CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );"

#. Tag: para
#: using_postgis_dataman.xml:645
#, fuzzy, no-c-format
msgid "Create a table with 2D POINT geography in NAD83 longlat:"
msgstr ""
"POINT: NAD83経度緯度での2次元ポイントジオグラフィのテーブル生成は次の通りで"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:646
#, no-c-format
msgid ""
"CREATE TABLE ptgeognad83(gid serial PRIMARY KEY, geog "
"geography(POINT,4269) );"
msgstr ""
"CREATE TABLE ptgeognad83(gid serial PRIMARY KEY, geog "
"geography(POINT,4269) );"

#. Tag: para
#: using_postgis_dataman.xml:649
#, no-c-format
msgid "Create a table with 3D (XYZ) POINTs and an explicit SRID of 4326:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:650
#, no-c-format
msgid ""
"CREATE TABLE ptzgeogwgs84(gid serial PRIMARY KEY, geog "
"geography(POINTZ,4326) );"
msgstr ""
"CREATE TABLE ptzgeogwgs84(gid serial PRIMARY KEY, geog "
"geography(POINTZ,4326) );"

#. Tag: para
#: using_postgis_dataman.xml:653
#, no-c-format
msgid "Create a table with 2D LINESTRING geography with the default SRID 4326:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:654
#, no-c-format
msgid ""
"CREATE TABLE lgeog(gid serial PRIMARY KEY, geog geography(LINESTRING) );"
msgstr ""
"CREATE TABLE lgeog(gid serial PRIMARY KEY, geog geography(LINESTRING) );"

#. Tag: para
#: using_postgis_dataman.xml:657
#, fuzzy, no-c-format
msgid ""
"Create a table with 2D POLYGON geography with the SRID 4267 (NAD 1927 long "
"lat):"
msgstr ""
"POINT: NAD83経度緯度での2次元ポイントジオグラフィのテーブル生成は次の通りで"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:658
#, fuzzy, no-c-format
msgid ""
"CREATE TABLE lgeognad27(gid serial PRIMARY KEY, geog "
"geography(POLYGON,4267) );"
msgstr ""
"CREATE TABLE ptgeognad83(gid serial PRIMARY KEY, geog "
"geography(POINT,4269) );"

#. Tag: para
#: using_postgis_dataman.xml:676
#, fuzzy, no-c-format
msgid ""
"Geography fields are registered in the <varname>geography_columns</varname> "
"system view. You can query the <varname>geography_columns</varname> view and "
"see that the table is listed:"
msgstr ""
"ジオグラフィ型のフィールドは<varname>geography_columns</varname>システム"
"ビューに登録されます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:679
#, fuzzy, no-c-format
msgid "SELECT * FROM geography_columns;"
msgstr ""
"-- メタデータビューの中身を見る\n"
"SELECT * FROM geography_columns;"

#. Tag: para
#: using_postgis_dataman.xml:681
#, fuzzy, no-c-format
msgid ""
"Creating a spatial index works the same as for geometry columns. PostGIS "
"will note that the column type is GEOGRAPHY and create an appropriate sphere-"
"based index instead of the usual planar index used for GEOMETRY."
msgstr ""
"ジオメトリと同じ操作でインデックスを作成します。PostGISは、カラム型がジオグラ"
"フィであるかを見て、ジオメトリで使われる平面用インデックスの代わりに球面ベー"
"スのインデックスを作成します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:684
#, fuzzy, no-c-format
msgid ""
"-- Index the test table with a spherical index\n"
"CREATE INDEX global_points_gix ON global_points USING GIST ( location );"
msgstr ""
"-- testテーブルに球面インデックスを作成\n"
"  CREATE INDEX global_points_gix ON global_points USING GIST ( location );"

#. Tag: title
#: using_postgis_dataman.xml:689
#, fuzzy, no-c-format
msgid "Using Geography Tables"
msgstr "PostGISジオグラフィ型"

#. Tag: para
#: using_postgis_dataman.xml:691
#, no-c-format
msgid ""
"You can insert data into geography tables in the same way as geometry. "
"Geometry data will autocast to the geography type if it has SRID 4326. The "
"<link linkend=\"EWKB_EWKT\">EWKT and EWKB</link> formats can also be used to "
"specify geography values."
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:696
#, no-c-format
msgid ""
"-- Add some data into the test table\n"
"INSERT INTO global_points (name, location) VALUES ('Town', 'SRID=4326;"
"POINT(-110 30)');\n"
"INSERT INTO global_points (name, location) VALUES ('Forest', 'SRID=4326;"
"POINT(-109 29)');\n"
"INSERT INTO global_points (name, location) VALUES ('London', 'SRID=4326;"
"POINT(0 49)');"
msgstr ""
"-- testテーブルにデータを追加する\n"
"INSERT INTO global_points (name, location) VALUES ('Town', 'SRID=4326;"
"POINT(-110 30)');\n"
"INSERT INTO global_points (name, location) VALUES ('Forest', 'SRID=4326;"
"POINT(-109 29)');\n"
"INSERT INTO global_points (name, location) VALUES ('London', 'SRID=4326;"
"POINT(0 49)');"

#. Tag: para
#: using_postgis_dataman.xml:698
#, fuzzy, no-c-format
msgid ""
"Any geodetic (long/lat) spatial reference system listed in "
"<varname>spatial_ref_sys</varname> table may be specified as a geography "
"SRID. Non-geodetic coordinate systems raise an error if used."
msgstr ""
"異なる経度緯度座標系を試します。<varname>spatial_ref_sys</varname>テーブルで"
"挙げられている経度緯度の空間参照系なら全て可能です。"

#. Tag: programlisting
#: using_postgis_dataman.xml:703
#, fuzzy, no-c-format
msgid ""
"-- NAD 83 lon/lat\n"
"SELECT 'SRID=4269;POINT(-123 34)'::geography;\n"
"                    geography\n"
"----------------------------------------------------\n"
" 0101000020AD1000000000000000C05EC00000000000004140"
msgstr ""
"-- NAD83経度緯度\n"
"SELECT 'SRID=4269;POINT(-123 34)'::geography;\n"
"                    geography\n"
"----------------------------------------------------\n"
" 0101000020AD1000000000000000C05EC00000000000004140\n"
"(1 row)"

#. Tag: programlisting
#: using_postgis_dataman.xml:705
#, fuzzy, no-c-format
msgid ""
"-- NAD27 lon/lat\n"
"SELECT 'SRID=4267;POINT(-123 34)'::geography;\n"
"                    geography\n"
"----------------------------------------------------\n"
" 0101000020AB1000000000000000C05EC00000000000004140"
msgstr ""
"-- NAD27経度緯度\n"
"SELECT 'SRID=4267;POINT(-123 34)'::geography;\n"
"\n"
"                    geography\n"
"----------------------------------------------------\n"
" 0101000020AB1000000000000000C05EC00000000000004140\n"
"(1 row)"

#. Tag: programlisting
#: using_postgis_dataman.xml:707
#, fuzzy, no-c-format
msgid ""
"-- NAD83 UTM zone meters - gives an error since it is a meter-based planar "
"projection\n"
"SELECT 'SRID=26910;POINT(-123 34)'::geography;\n"
"\n"
"ERROR:  Only lon/lat coordinate systems are supported in geography."
msgstr ""
"-- メートル単位のNAD83 UTM、メートル単位の投影法ですのでエラーが出ます\n"
"SELECT 'SRID=26910;POINT(-123 34)'::geography;\n"
"\n"
"ERROR:  Only lon/lat coordinate systems are supported in geography.\n"
"LINE 1: SELECT 'SRID=26910;POINT(-123 34)'::geography;"

#. Tag: para
#: using_postgis_dataman.xml:709
#, no-c-format
msgid ""
"Query and measurement functions use units of meters. So distance parameters "
"should be expressed in meters, and return values should be expected in "
"meters (or square meters for areas)."
msgstr ""
"クエリと計測関数はメートル単位となります。そのため距離パラメータはメートル "
"(面積の場合は平方メートル)単位となります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:711
#, fuzzy, no-c-format
msgid ""
"-- A distance query using a 1000km tolerance\n"
"SELECT name FROM global_points WHERE ST_DWithin(location, 'SRID=4326;"
"POINT(-110 29)'::geography, 1000000);"
msgstr ""
"-- 距離クエリの表示。ロンドンは1000km範囲外です\n"
"  SELECT name FROM global_points WHERE ST_DWithin(location, 'SRID=4326;"
"POINT(-110 29)'::geography, 1000000);"

#. Tag: para
#: using_postgis_dataman.xml:714
#, fuzzy, no-c-format
msgid ""
"You can see the power of geography in action by calculating how close a "
"plane flying a great circle route from Seattle to London (LINESTRING(-122.33 "
"47.606, 0.0 51.5)) comes to Reykjavik (POINT(-21.96 64.15)) (<ulink url="
"\"http://gc.kls2.com/cgi-bin/gc?PATH=SEA-LHR\">map the route</ulink>)."
msgstr ""
"ジオグラフィの威力については、シアトルからロンドンまで (LINESTRING(-122.33 "
"47.606, 0.0 51.5))の飛行機がレイキャビク (POINT(-21.96 64.15))に最も近くなる"
"ときの距離を求めてみると分かります。"

#. Tag: para
#: using_postgis_dataman.xml:720
#, fuzzy, no-c-format
msgid ""
"The geography type calculates the true shortest distance of 122.235 km over "
"the sphere between Reykjavik and the great circle flight path between "
"Seattle and London."
msgstr ""
"ジオグラフィ型は、レイキャビクとシアトル-ロンドン間の飛行機の大圏コースとの間"
"の、球面上での本当に最も近い距離を計算します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:723
#, fuzzy, no-c-format
msgid ""
"-- Distance calculation using GEOGRAPHY\n"
"SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geography, "
"'POINT(-21.96 64.15)'::geography);\n"
"   st_distance\n"
"-----------------\n"
" 122235.23815667"
msgstr ""
"-- ジオグラフィを使った距離計算 (122.2km)\n"
"  SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geography, "
"'POINT(-21.96 64.15)'::geography);"

#. Tag: para
#: using_postgis_dataman.xml:725
#, fuzzy, no-c-format
msgid ""
"The geometry type calculates a meaningless cartesian distance between "
"Reykjavik and the straight line path from Seattle to London plotted on a "
"flat map of the world. The nominal units of the result is \"degrees\", but "
"the result doesn't correspond to any true angular difference between the "
"points, so even calling them \"degrees\" is inaccurate."
msgstr ""
"<ulink url=\"http://gc.kls2.com/cgi-bin/gc?PATH=SEA-LHR\">大圏コースマップ</"
"ulink> ジオメトリ型は、平面の世界地図上にプロットされたレイキャビクとシアト"
"ル-ロンドン間の直線とのデカルト距離という意味のない値を出します。結果の名目上"
"の単位は「度」ですが、点間の本当の角度差にあっていませんので、「度」と言うこ"
"と自体不正確です。"

#. Tag: programlisting
#: using_postgis_dataman.xml:732
#, fuzzy, no-c-format
msgid ""
"-- Distance calculation using GEOMETRY\n"
"SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geometry, "
"'POINT(-21.96 64.15)'::geometry);\n"
"      st_distance\n"
"--------------------\n"
" 13.342271221453624"
msgstr ""
"-- ジオメトリを使った計算 (13.3 \"度\")\n"
"  SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geometry, "
"'POINT(-21.96 64.15)'::geometry);"

#. Tag: title
#: using_postgis_dataman.xml:737
#, fuzzy, no-c-format
msgid "When to use the Geography data type"
msgstr "ジオグラフィ型をジオメトリ型にして使用すべき時"

#. Tag: para
#: using_postgis_dataman.xml:738
#, fuzzy, no-c-format
msgid ""
"The geography data type allows you to store data in longitude/latitude "
"coordinates, but at a cost: there are fewer functions defined on GEOGRAPHY "
"than there are on GEOMETRY; those functions that are defined take more CPU "
"time to execute."
msgstr ""
"ジオグラフィ型によって、経度緯度座標でデータを格納できるようになりましたが、"
"ジオグラフィで定義されている関数が、ジオメトリより少ないのと、実行にCPU時間が"
"かかる、というところが犠牲になっています。"

#. Tag: para
#: using_postgis_dataman.xml:739
#, fuzzy, no-c-format
msgid ""
"The data type you choose should be determined by the expected working area "
"of the application you are building. Will your data span the globe or a "
"large continental area, or is it local to a state, county or municipality?"
msgstr ""
"選択した型が、期待する領域から出ないことを、ジオメトリ型にして使用する条件と"
"すべきです。使用するデータは地球全体か、大陸か、州か、自治体か?"

#. Tag: para
#: using_postgis_dataman.xml:741
#, no-c-format
msgid ""
"If your data is contained in a small area, you might find that choosing an "
"appropriate projection and using GEOMETRY is the best solution, in terms of "
"performance and functionality available."
msgstr ""
"データが小さいエリア内におさまるなら、適切な投影を選択してジオメトリを使うの"
"が、効率面でも機能面でも最も良い方法です。"

#. Tag: para
#: using_postgis_dataman.xml:742
#, no-c-format
msgid ""
"If your data is global or covers a continental region, you may find that "
"GEOGRAPHY allows you to build a system without having to worry about "
"projection details. You store your data in longitude/latitude, and use the "
"functions that have been defined on GEOGRAPHY."
msgstr ""
"データが地球全体か大陸なら、ジオグラフィで投影法の細かい問題を気にせずにシス"
"テムを構築できるでしょう。経度/緯度のデータを保存して、ジオグラフィで定義され"
"た関数使います。"

#. Tag: para
#: using_postgis_dataman.xml:744
#, no-c-format
msgid ""
"If you don't understand projections, and you don't want to learn about them, "
"and you're prepared to accept the limitations in functionality available in "
"GEOGRAPHY, then it might be easier for you to use GEOGRAPHY than GEOMETRY. "
"Simply load your data up as longitude/latitude and go from there."
msgstr ""
"投影法を理解していなくて、学習したくもなくて、かつ、ジオグラフィで使える関数"
"が限られていることを受け入れるのなら、ジオグラフィを使った方が簡単です。単純"
"にデータを経度/緯度でロードして、そこから進めて下さい。"

#. Tag: para
#: using_postgis_dataman.xml:747
#, no-c-format
msgid ""
"Refer to <xref linkend=\"PostGIS_TypeFunctionMatrix\"/> for compare between "
"what is supported for Geography vs. Geometry. For a brief listing and "
"description of Geography functions, refer to <xref linkend="
"\"PostGIS_GeographyFunctions\"/>"
msgstr ""
"ジオグラフィとジオメトリ間のサポート状況の比較については<xref linkend="
"\"PostGIS_TypeFunctionMatrix\"/>をご覧下さい。ジオグラフィ関数の簡潔なリスト"
"と説明については<xref linkend=\"PostGIS_GeographyFunctions\"/>をご覧下さい。"

#. Tag: title
#: using_postgis_dataman.xml:753
#, no-c-format
msgid "Geography Advanced FAQ"
msgstr "ジオグラフィに関する高度なよくある質問"

#. Tag: para
#: using_postgis_dataman.xml:757
#, no-c-format
msgid "Do you calculate on the sphere or the spheroid?"
msgstr "球または回転楕円体のどちらで計算するのでしょうか?"

#. Tag: para
#: using_postgis_dataman.xml:761
#, no-c-format
msgid ""
"By default, all distance and area calculations are done on the spheroid. You "
"should find that the results of calculations in local areas match up will "
"with local planar results in good local projections. Over larger areas, the "
"spheroidal calculations will be more accurate than any calculation done on a "
"projected plane."
msgstr ""
"デフォルトでは、全ての距離と面積の計算は回転楕円体で行います。局所的なエリア"
"での計算結果と良好な投影を施した平面での結果と比較して下さい。大きなエリアの"
"場合は、回転楕円体計算は、投影平面上でのどの計算よりも精度が高くなります。"

#. Tag: para
#: using_postgis_dataman.xml:764
#, no-c-format
msgid ""
"All the geography functions have the option of using a sphere calculation, "
"by setting a final boolean parameter to 'FALSE'. This will somewhat speed up "
"calculations, particularly for cases where the geometries are very simple."
msgstr ""
"全てのジオグラフィ関数には、最後の真偽パラメータを'FALSE'にすると球面を使った"
"計算を行うというオプションがあります。これは、特にジオメトリが非常に単純であ"
"る場合に計算を速くするためのものです。"

#. Tag: para
#: using_postgis_dataman.xml:770
#, no-c-format
msgid "What about the date-line and the poles?"
msgstr "日付変更線や極に関してはどうなっていますか?"

#. Tag: para
#: using_postgis_dataman.xml:774
#, no-c-format
msgid ""
"All the calculations have no conception of date-line or poles, the "
"coordinates are spherical (longitude/latitude) so a shape that crosses the "
"dateline is, from a calculation point of view, no different from any other "
"shape."
msgstr ""
"全ての計算に日付変更線や極の概念がありません。座標は球 (経度/緯度)であるの"
"で、日付変更線とクロスする形状は、計算の観点からは、他のものと変わりありませ"
"ん。"

#. Tag: para
#: using_postgis_dataman.xml:782
#, no-c-format
msgid "What is the longest arc you can process?"
msgstr "処理できる最も長い弧はどうなりますか?"

#. Tag: para
#: using_postgis_dataman.xml:786
#, no-c-format
msgid ""
"We use great circle arcs as the \"interpolation line\" between two points. "
"That means any two points are actually joined up two ways, depending on "
"which direction you travel along the great circle. All our code assumes that "
"the points are joined by the *shorter* of the two paths along the great "
"circle. As a consequence, shapes that have arcs of more than 180 degrees "
"will not be correctly modelled."
msgstr ""
"大圏の弧を2点の「補完線」として使用しています。任意の2点は、実際には2方向につ"
"ながっていて、どちらの方向に行くかに依存します。PostGISの全てのコードは、大圏"
"コースの2コースのうち*短い*方でつながっていると仮定しています。結果として、"
"180度以上の弧を持つ形状は正しくモデル化されません。"

#. Tag: para
#: using_postgis_dataman.xml:793
#, no-c-format
msgid ""
"Why is it so slow to calculate the area of Europe / Russia / insert big "
"geographic region here ?"
msgstr ""
"なぜヨーロッパやロシアといった大きな範囲の面積計算はとても遅いのですか?"

#. Tag: para
#: using_postgis_dataman.xml:797
#, no-c-format
msgid ""
"Because the polygon is so darned huge! Big areas are bad for two reasons: "
"their bounds are huge, so the index tends to pull the feature no matter what "
"query you run; the number of vertices is huge, and tests (distance, "
"containment) have to traverse the vertex list at least once and sometimes N "
"times (with N being the number of vertices in the other candidate feature)."
msgstr ""
"ポリゴンがとんでもなく大きいからです。二つの理由から、大きなエリアは悪いで"
"す。一つは、バウンダリボックスが大きいため、どのようなクエリを走らせても、イ"
"ンデックスがフィーチャーを引っ張ってくる傾向にあるためです。もう一つは、頂点"
"数が巨大で、テスト (距離、包含)関数では、少なくとも1回、通常はN (Nは、もう一"
"方のフィーチャーの頂点数)回、頂点を横断しなければならないためです。"

#. Tag: para
#: using_postgis_dataman.xml:802
#, no-c-format
msgid ""
"As with GEOMETRY, we recommend that when you have very large polygons, but "
"are doing queries in small areas, you \"denormalize\" your geometric data "
"into smaller chunks so that the index can effectively subquery parts of the "
"object and so queries don't have to pull out the whole object every time. "
"Please consult <xref linkend=\"ST_Subdivide\"/> function documentation. Just "
"because you *can* store all of Europe in one polygon doesn't mean you "
"*should*."
msgstr ""
"ジオメトリでは、大きなポリゴンを持っているけれども小さな範囲のクエリを実行す"
"る時、ジオメトリデータ情報を小片に「非正規化」します。これにより、インデック"
"スが効果的にオブジェクトの一部を問い合わせるようになり、またクエリが常にオブ"
"ジェクト全体を引っ張りこむようなことがないようになります。<xref linkend="
"\"ST_Subdivide\"/>を参照して下さい。ヨーロッパ全体を一つのポリゴンに*格納でき"
"る*からといって、*そうすべき*だというわけではありません。"

#. Tag: title
#: using_postgis_dataman.xml:811
#, no-c-format
msgid "Spatial Tables"
msgstr "空間テーブル"

#. Tag: title
#: using_postgis_dataman.xml:814
#, no-c-format
msgid "Creating a Spatial Table"
msgstr "空間テーブルを作る"

#. Tag: para
#: using_postgis_dataman.xml:816
#, no-c-format
msgid ""
"You can create a table to store geometry data using the <ulink url=\"https://"
"www.postgresql.org/docs/current/sql-createtable.html\">CREATE TABLE</ulink> "
"SQL statement with a column of type <varname>geometry</varname>. The "
"following example creates a table with a geometry column storing 2D (XY) "
"LineStrings in the BC-Albers coordinate system (SRID 3005):"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:822
#, fuzzy, no-c-format
msgid ""
"CREATE TABLE roads (\n"
"    id SERIAL PRIMARY KEY,\n"
"    name VARCHAR(64),\n"
"    geom geometry(LINESTRING,3005)\n"
"  );"
msgstr ""
"CREATE TABLE global_points (\n"
"    id SERIAL PRIMARY KEY,\n"
"    name VARCHAR(64),\n"
"    location GEOGRAPHY(POINT,4326)\n"
"  );"

#. Tag: para
#: using_postgis_dataman.xml:824
#, no-c-format
msgid ""
"The <varname>geometry</varname> type supports two optional <emphasis role="
"\"bold\">type modifiers</emphasis>:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:828
#, fuzzy, no-c-format
msgid ""
"the <emphasis role=\"bold\">spatial type modifier</emphasis> restricts the "
"kind of shapes and dimensions allowed in the column. The value can be any of "
"the supported <link linkend=\"RefObject\">geometry subtypes</link> (e.g. "
"POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON, "
"GEOMETRYCOLLECTION, etc). The modifier supports coordinate dimensionality "
"restrictions by adding suffixes: Z, M and ZM. For example, a modifier of "
"'LINESTRINGM' allows only linestrings with three dimensions, and treats the "
"third dimension as a measure. Similarly, 'POINTZM' requires four dimensional "
"(XYZM) data."
msgstr ""
"型修飾子として受け付ける値は、POINT, LINESTRING, POLYGON, MULTIPOINT, "
"MULTILINESTRING, MULTIPOLYGONです。型修飾子は、Z, M, ZMの後置子を付けることで"
"次元制限にも対応します。たとえば、'LINESTRINGM'という型修飾子で、三つ目の次元"
"をMとする3次元のラインストリングのみ受け付けることになります。同じよう"
"に'POINTZM'で、4次元データを期待します。"

#. Tag: para
#: using_postgis_dataman.xml:839
#, no-c-format
msgid ""
"the <emphasis role=\"bold\">SRID modifier</emphasis> restricts the <link "
"linkend=\"spatial_ref_sys\">spatial reference system</link> SRID to a "
"particular number. If omitted, the SRID defaults to 0."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:848
#, no-c-format
msgid "Examples of creating tables with geometry columns:"
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:851
#, no-c-format
msgid "Create a table holding any kind of geometry with the default SRID:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:852
#, fuzzy, no-c-format
msgid "CREATE TABLE geoms(gid serial PRIMARY KEY, geom geometry );"
msgstr ""
"CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );"

#. Tag: para
#: using_postgis_dataman.xml:855
#, no-c-format
msgid "Create a table with 2D POINT geometry with the default SRID:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:856
#, fuzzy, no-c-format
msgid "CREATE TABLE pts(gid serial PRIMARY KEY, geom geometry(POINT) );"
msgstr ""
"CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );"

#. Tag: para
#: using_postgis_dataman.xml:859
#, no-c-format
msgid "Create a table with 3D (XYZ) POINTs and an explicit SRID of 3005:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:860
#, fuzzy, no-c-format
msgid "CREATE TABLE pts(gid serial PRIMARY KEY, geom geometry(POINTZ,3005) );"
msgstr ""
"CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );"

#. Tag: para
#: using_postgis_dataman.xml:863
#, no-c-format
msgid ""
"Create a table with 4D (XYZM) LINESTRING geometry with the default SRID:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:864
#, fuzzy, no-c-format
msgid ""
"CREATE TABLE lines(gid serial PRIMARY KEY, geom geometry(LINESTRINGZM) );"
msgstr ""
"CREATE TABLE lgeog(gid serial PRIMARY KEY, geog geography(LINESTRING) );"

#. Tag: para
#: using_postgis_dataman.xml:867
#, no-c-format
msgid ""
"Create a table with 2D POLYGON geometry with the SRID 4267 (NAD 1927 long "
"lat):"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:868
#, fuzzy, no-c-format
msgid ""
"CREATE TABLE polys(gid serial PRIMARY KEY, geom geometry(POLYGON,4267) );"
msgstr ""
"CREATE TABLE ptzgeogwgs84(gid serial PRIMARY KEY, geog "
"geography(POINTZ,4326) );"

#. Tag: para
#: using_postgis_dataman.xml:872
#, no-c-format
msgid ""
"It is possible to have more than one geometry column in a table. This can be "
"specified when the table is created, or a column can be added using the "
"<ulink url=\"https://www.postgresql.org/docs/current/sql-altertable.html"
"\">ALTER TABLE</ulink> SQL statement. This example adds a column that can "
"hold 3D LineStrings:"
msgstr ""

#. Tag: programlisting
#: using_postgis_dataman.xml:878
#, no-c-format
msgid "ALTER TABLE roads ADD COLUMN geom2 geometry(LINESTRINGZ,4326);"
msgstr "ALTER TABLE roads ADD COLUMN geom2 geometry(LINESTRINGZ,4326);"

#. Tag: title
#: using_postgis_dataman.xml:882
#, fuzzy, no-c-format
msgid "GEOMETRY_COLUMNS View"
msgstr "GEOMETRY_COLUMNSビュー"

#. Tag: para
#: using_postgis_dataman.xml:884
#, fuzzy, no-c-format
msgid ""
"The OGC <emphasis>Simple Features Specification for SQL</emphasis> defines "
"the <varname>GEOMETRY_COLUMNS</varname> metadata table to describe geometry "
"table structure. In PostGIS <varname>geometry_columns</varname> is a view "
"reading from database system catalog tables. This ensures that the spatial "
"metadata information is always consistent with the currently defined tables "
"and views. The view structure is:"
msgstr ""
"OpenGIS \"Simple Features Specification for SQL\"では、ジオメトリテーブル構造"
"を記述するために<varname>GEOMETRY_COLUMNS</varname>メタデータテーブルが定義さ"
"れています。メタデータの一貫性を保つために、空間カラムの生成や削除のような操"
"作は、OpenGISが定義する空間プロシージャを通して実行されます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:890
#, no-c-format
msgid "\\d geometry_columns"
msgstr "\\d geometry_columns"

#. Tag: screen
#: using_postgis_dataman.xml:891
#, no-c-format
msgid ""
"View \"public.geometry_columns\"\n"
"      Column       |          Type          | Modifiers\n"
"-------------------+------------------------+-----------\n"
" f_table_catalog   | character varying(256) |\n"
" f_table_schema    | character varying(256) |\n"
" f_table_name      | character varying(256) |\n"
" f_geometry_column | character varying(256) |\n"
" coord_dimension   | integer                |\n"
" srid              | integer                |\n"
" type              | character varying(30)  |"
msgstr ""
"View \"public.geometry_columns\"\n"
"      Column       |          Type          | Modifiers\n"
"-------------------+------------------------+-----------\n"
" f_table_catalog   | character varying(256) |\n"
" f_table_schema    | character varying(256) |\n"
" f_table_name      | character varying(256) |\n"
" f_geometry_column | character varying(256) |\n"
" coord_dimension   | integer                |\n"
" srid              | integer                |\n"
" type              | character varying(30)  |"

#. Tag: para
#: using_postgis_dataman.xml:893 using_postgis_dataman.xml:1007
#, no-c-format
msgid "The columns are:"
msgstr "カラムは次の通りです。"

#. Tag: term
#: using_postgis_dataman.xml:897
#, no-c-format
msgid "f_table_catalog, f_table_schema, f_table_name"
msgstr "f_table_catalog, f_table_schema, f_table_name"

#. Tag: para
#: using_postgis_dataman.xml:900
#, fuzzy, no-c-format
msgid ""
"The fully qualified name of the feature table containing the geometry "
"column. There is no PostgreSQL analogue of \"catalog\" so that column is "
"left blank. For \"schema\" the PostgreSQL schema name is used "
"(<varname>public</varname> is the default)."
msgstr ""
"ジオメトリカラムを持つフィーチャーテーブルの完全修飾名。\"catalog\"および"
"\"schema\"の語はOracle風であることに注意して下さい。\"catalog\"に類似するもの"
"はPostgreSQLになく、このカラムは空白にされます。\"schema\"については"
"PostgreSQLスキーマ名が使われています (<varname>public</varname>がデフォルトで"
"す)。"

#. Tag: term
#: using_postgis_dataman.xml:908
#, no-c-format
msgid "f_geometry_column"
msgstr "f_geometry_column"

#. Tag: para
#: using_postgis_dataman.xml:911
#, no-c-format
msgid "The name of the geometry column in the feature table."
msgstr "フィーチャーテーブル内のジオメトリカラムの名前。"

#. Tag: term
#: using_postgis_dataman.xml:916
#, no-c-format
msgid "coord_dimension"
msgstr "coord_dimension"

#. Tag: para
#: using_postgis_dataman.xml:919
#, fuzzy, no-c-format
msgid "The coordinate dimension (2, 3 or 4) of the column."
msgstr "そのカラムの空間の次元 (2, 3 または 4)。"

#. Tag: term
#: using_postgis_dataman.xml:924 using_postgis_dataman.xml:1011
#, no-c-format
msgid "srid"
msgstr "srid"

#. Tag: para
#: using_postgis_dataman.xml:927
#, no-c-format
msgid ""
"The ID of the spatial reference system used for the coordinate geometry in "
"this table. It is a foreign key reference to the <varname>spatial_ref_sys</"
"varname> table (see <xref linkend=\"spatial_ref_sys_table\"/>)."
msgstr ""
"このテーブルのジオメトリの座標系として使用される座標系空間参照系のIDです。"
"<varname>spatial_ref_sys</varname>テーブルを参照する外部キーです (<xref "
"linkend=\"spatial_ref_sys_table\"/>を参照して下さい)。"

#. Tag: term
#: using_postgis_dataman.xml:935
#, no-c-format
msgid "type"
msgstr "type"

#. Tag: para
#: using_postgis_dataman.xml:938
#, no-c-format
msgid ""
"The type of the spatial object. To restrict the spatial column to a single "
"type, use one of: POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, "
"MULTIPOLYGON, GEOMETRYCOLLECTION or corresponding XYM versions POINTM, "
"LINESTRINGM, POLYGONM, MULTIPOINTM, MULTILINESTRINGM, MULTIPOLYGONM, "
"GEOMETRYCOLLECTIONM. For heterogeneous (mixed-type) collections, you can use "
"\"GEOMETRY\" as the type."
msgstr ""
"空間オブジェクトの型。空間カラムを単一型に制限するには、POINT、LINESTRING、"
"POLYGON、MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTIONのうち"
"のいずれかを、また、XYMで使う場合には、LINESTRINGM、POLYGONM、MULTIPOINTM、"
"MULTILINESTRINGM、MULTIPOLYGONM、GEOMETRYCOLLECTIONMのうちのいずれかを使いま"
"す。複数の型が混合するコレクションの場合は\"GEOMETRY\"を型とすることができま"
"す。"

#. Tag: title
#: using_postgis_dataman.xml:951
#, no-c-format
msgid "Manually Registering Geometry Columns"
msgstr "手動でジオメトリカラムをgeometry_columnsに登録する"

#. Tag: para
#: using_postgis_dataman.xml:953
#, no-c-format
msgid ""
"Two of the cases where you may need this are the case of SQL Views and bulk "
"inserts. For bulk insert case, you can correct the registration in the "
"geometry_columns table by constraining the column or doing an alter table. "
"For views, you could expose using a CAST operation. Note, if your column is "
"typmod based, the creation process would register it correctly, so no need "
"to do anything. Also views that have no spatial function applied to the "
"geometry will register the same as the underlying table geometry column."
msgstr ""
"これが必要になる事例に、SQLビューとバルクインサートの二つがあります。バルクイ"
"ンサートの場合には、カラムに制約を与えるか、ALTER TABLEを実行することで、"
"geometry_columnsテーブル内の登録を訂正することができます。ビューの場合には、"
"CAST演算を使用します。カラムが型修飾子に基づく場合には、生成処理によって正し"
"く登録されるので、何も行う必要がありません。ジオメトリに適用する空間関数を持"
"たないビューも、基礎となるテーブルのジオメトリカラムと同じように登録されま"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:958
#, no-c-format
msgid ""
"-- Lets say you have a view created like this\n"
"CREATE VIEW public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom, 3395) As geom, f_name\n"
"        FROM public.mytable;\n"
"\n"
"-- For it to register correctly\n"
"-- You need to cast the geometry\n"
"--\n"
"DROP VIEW public.vwmytablemercator;\n"
"CREATE VIEW  public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom, 3395)::geometry(Geometry, 3395) As "
"geom, f_name\n"
"        FROM public.mytable;\n"
"\n"
"-- If you know the geometry type for sure is a 2D POLYGON then you could do\n"
"DROP VIEW public.vwmytablemercator;\n"
"CREATE VIEW  public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom,3395)::geometry(Polygon, 3395) As "
"geom, f_name\n"
"        FROM public.mytable;"
msgstr ""
"-- 次のようなビューがあるとします\n"
"CREATE VIEW public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom, 3395) As geom, f_name\n"
"        FROM public.mytable;\n"
"\n"
"-- 正しく登録するには、\n"
"-- ジオメトリをキャストします。\n"
"--\n"
"DROP VIEW public.vwmytablemercator;\n"
"CREATE VIEW  public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom, 3395)::geometry(Geometry, 3395) As "
"geom, f_name\n"
"        FROM public.mytable;\n"
"\n"
"-- ジオメトリタイプが確実に2次元ポリゴンだと知っているなら\n"
"-- 次のようにできます。\n"
"DROP VIEW public.vwmytablemercator;\n"
"CREATE VIEW  public.vwmytablemercator AS\n"
"        SELECT gid, ST_Transform(geom,3395)::geometry(Polygon, 3395) As "
"geom, f_name\n"
"        FROM public.mytable;"

#. Tag: programlisting
#: using_postgis_dataman.xml:959
#, no-c-format
msgid ""
"--Lets say you created a derivative table by doing a bulk insert\n"
"SELECT poi.gid, poi.geom, citybounds.city_name\n"
"INTO myschema.my_special_pois\n"
"FROM poi INNER JOIN citybounds ON ST_Intersects(citybounds.geom, poi.geom);\n"
"\n"
"-- Create 2D index on new table\n"
"CREATE INDEX idx_myschema_myspecialpois_geom_gist\n"
"  ON myschema.my_special_pois USING gist(geom);\n"
"\n"
"-- If your points are 3D points or 3M points,\n"
"-- then you might want to create an nd index instead of a 2D index\n"
"CREATE INDEX my_special_pois_geom_gist_nd\n"
"        ON my_special_pois USING gist(geom gist_geometry_ops_nd);\n"
"\n"
"-- To manually register this new table's geometry column in "
"geometry_columns.\n"
"-- Note it will also change the underlying structure of the table to\n"
"-- to make the column typmod based.\n"
"SELECT populate_geometry_columns('myschema.my_special_pois'::regclass);\n"
"\n"
"-- If you are using PostGIS 2.0 and for whatever reason, you\n"
"-- you need the constraint based definition behavior\n"
"-- (such as case of inherited tables where all children do not have the same "
"type and srid)\n"
"-- set optional use_typmod argument to false\n"
"SELECT populate_geometry_columns('myschema.my_special_pois'::regclass, "
"false);"
msgstr ""
"-- 次のように、バルクインサートで派生テーブルを生成したとしましょう\n"
"SELECT poi.gid, poi.geom, citybounds.city_name\n"
"INTO myschema.my_special_pois\n"
"FROM poi INNER JOIN citybounds ON ST_Intersects(citybounds.geom, poi.geom);\n"
"\n"
"-- 新しいテーブルに2次元インデックスを作ります\n"
"CREATE INDEX idx_myschema_myspecialpois_geom_gist\n"
"  ON myschema.my_special_pois USING gist(geom);\n"
"\n"
"-- ポイントが3次元ポイントであったり、XYMポイントであったりした場合には、\n"
"-- 次のように、2次元インデックスでなくN次元インデックスを作ることになるかも\n"
"-- 知れません。\n"
"CREATE INDEX my_special_pois_geom_gist_nd\n"
"        ON my_special_pois USING gist(geom gist_geometry_ops_nd);\n"
"\n"
"-- 新しいテーブルのジオメトリカラムをgeometry_columnsに手動登録するには、\n"
"-- 次のようにします。\n"
"-- カラムを型修飾子ベースにするために、基礎となるテーブル構造も変更すること"
"に\n"
"-- 注意して下さい。\n"
"SELECT populate_geometry_columns('myschema.my_special_pois'::regclass);\n"
"\n"
"-- PostGIS 2.0を使っていて、何らかの理由で古い制約をもとにした定義を行う\n"
"-- (派生テーブルが同じタイプやSRIDを持たないといった場合)ことが必要な場合に"
"は、\n"
"-- 新しい任意変数use_typemodをfalseにします。\n"
"SELECT populate_geometry_columns('myschema.my_special_pois'::regclass, "
"false);"

#. Tag: para
#: using_postgis_dataman.xml:961
#, no-c-format
msgid ""
"Although the old-constraint based method is still supported, a constraint-"
"based geometry column used directly in a view, will not register correctly "
"in geometry_columns, as will a typmod one. In this example we define a "
"column using typmod and another using constraints."
msgstr ""
"古い制約を基にした手法は現在も対応していますが、制約を基にしたジオメトリカラ"
"ムで直接的にビューで使われている場合は、型修飾子のようには正しく"
"geometry_columnsに登録されません。次の例では、型修飾子を使ったカラム定義と、"
"制約に基づくカラムの定義とを行っています。"

#. Tag: programlisting
#: using_postgis_dataman.xml:964
#, no-c-format
msgid ""
"CREATE TABLE pois_ny(gid SERIAL PRIMARY KEY, poi_name text, cat text, geom "
"geometry(POINT,4326));\n"
"SELECT AddGeometryColumn('pois_ny', 'geom_2160', 2160, 'POINT', 2, false);"
msgstr ""
"CREATE TABLE pois_ny(gid SERIAL PRIMARY KEY, poi_name text, cat text, geom "
"geometry(POINT,4326));\n"
"SELECT AddGeometryColumn('pois_ny', 'geom_2160', 2160, 'POINT', 2, false);"

#. Tag: para
#: using_postgis_dataman.xml:965
#, no-c-format
msgid "If we run in psql"
msgstr "psqlで次を実行します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:966
#, no-c-format
msgid "\\d pois_ny;"
msgstr "\\d pois_ny;"

#. Tag: para
#: using_postgis_dataman.xml:967
#, no-c-format
msgid ""
"We observe they are defined differently -- one is typmod, one is constraint"
msgstr "型修飾子と制約に基づくのとでは異なった定義になっているのが見えます。"

#. Tag: screen
#: using_postgis_dataman.xml:968
#, no-c-format
msgid ""
"Table \"public.pois_ny\"\n"
"  Column   |         Type          |                       Modifiers\n"
"\n"
"-----------+-----------------------"
"+------------------------------------------------------\n"
" gid       | integer               | not null default "
"nextval('pois_ny_gid_seq'::regclass)\n"
" poi_name  | text                  |\n"
" cat       | character varying(20) |\n"
" geom      | geometry(Point,4326)  |\n"
" geom_2160 | geometry              |\n"
"Indexes:\n"
"    \"pois_ny_pkey\" PRIMARY KEY, btree (gid)\n"
"Check constraints:\n"
"    \"enforce_dims_geom_2160\" CHECK (st_ndims(geom_2160) = 2)\n"
"    \"enforce_geotype_geom_2160\" CHECK (geometrytype(geom_2160) = 'POINT'::"
"text\n"
"        OR geom_2160 IS NULL)\n"
"    \"enforce_srid_geom_2160\" CHECK (st_srid(geom_2160) = 2160)"
msgstr ""
"Table \"public.pois_ny\"\n"
"  Column   |         Type          |                       Modifiers\n"
"\n"
"-----------+-----------------------"
"+------------------------------------------------------\n"
" gid       | integer               | not null default "
"nextval('pois_ny_gid_seq'::regclass)\n"
" poi_name  | text                  |\n"
" cat       | character varying(20) |\n"
" geom      | geometry(Point,4326)  |\n"
" geom_2160 | geometry              |\n"
"Indexes:\n"
"    \"pois_ny_pkey\" PRIMARY KEY, btree (gid)\n"
"Check constraints:\n"
"    \"enforce_dims_geom_2160\" CHECK (st_ndims(geom_2160) = 2)\n"
"    \"enforce_geotype_geom_2160\" CHECK (geometrytype(geom_2160) = 'POINT'::"
"text\n"
"        OR geom_2160 IS NULL)\n"
"    \"enforce_srid_geom_2160\" CHECK (st_srid(geom_2160) = 2160)"

#. Tag: para
#: using_postgis_dataman.xml:969
#, no-c-format
msgid "In geometry_columns, they both register correctly"
msgstr "geometry_columnsでは、両方とも正しく登録されています。"

#. Tag: programlisting
#: using_postgis_dataman.xml:970
#, no-c-format
msgid ""
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'pois_ny';"
msgstr ""
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'pois_ny';"

#. Tag: screen
#: using_postgis_dataman.xml:971
#, no-c-format
msgid ""
"f_table_name | f_geometry_column | srid | type\n"
"-------------+-------------------+------+-------\n"
"pois_ny      | geom              | 4326 | POINT\n"
"pois_ny      | geom_2160         | 2160 | POINT"
msgstr ""
"f_table_name | f_geometry_column | srid | type\n"
"-------------+-------------------+------+-------\n"
"pois_ny      | geom              | 4326 | POINT\n"
"pois_ny      | geom_2160         | 2160 | POINT"

#. Tag: para
#: using_postgis_dataman.xml:972
#, no-c-format
msgid "However -- if we were to create a view like this"
msgstr "しかし、次のようにビューを作ろうとします。"

#. Tag: programlisting
#: using_postgis_dataman.xml:973
#, no-c-format
msgid ""
"CREATE VIEW vw_pois_ny_parks AS\n"
"SELECT *\n"
"  FROM pois_ny\n"
"  WHERE cat='park';\n"
"\n"
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'vw_pois_ny_parks';"
msgstr ""
"CREATE VIEW vw_pois_ny_parks AS\n"
"SELECT *\n"
"  FROM pois_ny\n"
"  WHERE cat='park';\n"
"\n"
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'vw_pois_ny_parks';"

#. Tag: para
#: using_postgis_dataman.xml:974
#, no-c-format
msgid ""
"The typmod based geom view column registers correctly, but the constraint "
"based one does not."
msgstr ""
"型修飾子によるgeomのビューカラムは正しく登録されますが、制約に基づくものは正"
"しく登録されません。"

#. Tag: screen
#: using_postgis_dataman.xml:976
#, no-c-format
msgid ""
"f_table_name   | f_geometry_column | srid |   type\n"
"------------------+-------------------+------+----------\n"
" vw_pois_ny_parks | geom              | 4326 | POINT\n"
" vw_pois_ny_parks | geom_2160         |    0 | GEOMETRY"
msgstr ""
"f_table_name   | f_geometry_column | srid |   type\n"
"------------------+-------------------+------+----------\n"
" vw_pois_ny_parks | geom              | 4326 | POINT\n"
" vw_pois_ny_parks | geom_2160         |    0 | GEOMETRY"

#. Tag: para
#: using_postgis_dataman.xml:978
#, no-c-format
msgid ""
"This may change in future versions of PostGIS, but for now to force the "
"constraint-based view column to register correctly, you need to do this:"
msgstr ""
"これは、将来的にPostGISの版で変更されるかもしれませんが、今のところは、制約に"
"基づくビューカラムを正しく登録させるには、次のようにします。"

#. Tag: programlisting
#: using_postgis_dataman.xml:980
#, no-c-format
msgid ""
"DROP VIEW vw_pois_ny_parks;\n"
"CREATE VIEW vw_pois_ny_parks AS\n"
"SELECT gid, poi_name, cat,\n"
"  geom,\n"
"  geom_2160::geometry(POINT,2160) As geom_2160\n"
"  FROM pois_ny\n"
"  WHERE cat = 'park';\n"
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'vw_pois_ny_parks';"
msgstr ""
"DROP VIEW vw_pois_ny_parks;\n"
"CREATE VIEW vw_pois_ny_parks AS\n"
"SELECT gid, poi_name, cat,\n"
"  geom,\n"
"  geom_2160::geometry(POINT,2160) As geom_2160\n"
"  FROM pois_ny\n"
"  WHERE cat = 'park';\n"
"SELECT f_table_name, f_geometry_column, srid, type\n"
"        FROM geometry_columns\n"
"        WHERE f_table_name = 'vw_pois_ny_parks';"

#. Tag: screen
#: using_postgis_dataman.xml:981
#, no-c-format
msgid ""
"f_table_name   | f_geometry_column | srid | type\n"
"------------------+-------------------+------+-------\n"
" vw_pois_ny_parks | geom              | 4326 | POINT\n"
" vw_pois_ny_parks | geom_2160         | 2160 | POINT"
msgstr ""
"f_table_name   | f_geometry_column | srid | type\n"
"------------------+-------------------+------+-------\n"
" vw_pois_ny_parks | geom              | 4326 | POINT\n"
" vw_pois_ny_parks | geom_2160         | 2160 | POINT"

#. Tag: title
#: using_postgis_dataman.xml:987
#, no-c-format
msgid "Spatial Reference Systems"
msgstr "空間参照系"

#. Tag: para
#: using_postgis_dataman.xml:989
#, no-c-format
msgid ""
"<ulink url=\"https://en.wikipedia.org/wiki/Spatial_reference_system"
"\">Spatial Reference Systems</ulink> (SRS) define how geometry is referenced "
"to locations on the Earth's surface."
msgstr ""
"<ulink url=\"https://en.wikipedia.org/wiki/Spatial_reference_system"
"\">Spatial Reference Systems</ulink> (SRS, 空間参照系)は、どのようにジオメト"
"リが地表位置に参照されるかを定義しています。"

#. Tag: title
#: using_postgis_dataman.xml:993
#, no-c-format
msgid "SPATIAL_REF_SYS Table"
msgstr "SPATIAL_REF_SYSテーブル"

#. Tag: para
#: using_postgis_dataman.xml:995
#, no-c-format
msgid ""
"The <varname>SPATIAL_REF_SYS</varname> table used by PostGIS is an OGC-"
"compliant database table that defines the available spatial reference "
"systems. It holds the numeric IDs and textual descriptions of the coordinate "
"systems. The main use is to support transformation (reprojection) between "
"them using <xref linkend=\"ST_Transform\"/>."
msgstr ""
"PostGISで使用される<varname>SPATIAL_REF_SYS</varname>テーブルは、有効な空間参"
"照系を定義するOGC準拠のデータベーステーブルです。数字の識別子と文字列の空間参"
"照系の説明を持ちます。主に<xref linkend=\"ST_Transform\"/>を用いた空間参照系"
"間の変換 (投影変換)に対応するために使用されています。"

#. Tag: para
#: using_postgis_dataman.xml:1003
#, no-c-format
msgid "The <varname>spatial_ref_sys</varname> table definition is:"
msgstr "<varname>spatial_ref_sys</varname>の定義は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1005
#, no-c-format
msgid ""
"CREATE TABLE spatial_ref_sys (\n"
"  srid       INTEGER NOT NULL PRIMARY KEY,\n"
"  auth_name  VARCHAR(256),\n"
"  auth_srid  INTEGER,\n"
"  srtext     VARCHAR(2048),\n"
"  proj4text  VARCHAR(2048)\n"
")"
msgstr ""
"CREATE TABLE spatial_ref_sys (\n"
"  srid       INTEGER NOT NULL PRIMARY KEY,\n"
"  auth_name  VARCHAR(256),\n"
"  auth_srid  INTEGER,\n"
"  srtext     VARCHAR(2048),\n"
"  proj4text  VARCHAR(2048)\n"
")"

#. Tag: para
#: using_postgis_dataman.xml:1014
#, no-c-format
msgid ""
"An integer code that uniquely identifies the <ulink url=\"http://en."
"wikipedia.org/wiki/SRID\">Spatial Reference System</ulink> (SRS) within the "
"database."
msgstr ""
"データベース内の<ulink url=\"http://en.wikipedia.org/wiki/SRID\">Spatial "
"Reference System</ulink> (SRS, 空間参照系)で一意に識別される整数コードです。"

#. Tag: term
#: using_postgis_dataman.xml:1020
#, no-c-format
msgid "auth_name"
msgstr "auth_name"

#. Tag: para
#: using_postgis_dataman.xml:1023
#, no-c-format
msgid ""
"The name of the standard or standards body that is being cited for this "
"reference system. For example, \"EPSG\" is a valid <varname>auth_name</"
"varname>."
msgstr ""
"この参照系に引用されている標準の名前もしくは標準そのものです。たとえば"
"「EPSG」は妥当な<varname>auth_name</varname>です。"

#. Tag: term
#: using_postgis_dataman.xml:1030
#, no-c-format
msgid "auth_srid"
msgstr "auth_srid"

#. Tag: para
#: using_postgis_dataman.xml:1033
#, no-c-format
msgid ""
"The ID of the Spatial Reference System as defined by the Authority cited in "
"the <varname>auth_name</varname>. In the case of EPSG, this is where the "
"EPSG projection code would go."
msgstr ""
"<varname>auth_name</varname>で引用されている団体によって定義された空間参照系"
"のIDです。EPSGの場合、EPSG投影コードが入ります。"

#. Tag: term
#: using_postgis_dataman.xml:1040
#, no-c-format
msgid "srtext"
msgstr "srtext"

#. Tag: para
#: using_postgis_dataman.xml:1043
#, no-c-format
msgid ""
"The Well-Known Text representation of the Spatial Reference System. An "
"example of a WKT SRS representation is:"
msgstr ""
"空間参照系のWell-Knownテキスト表現です。たとえば、WKT SRSの表現は、次のように"
"なります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1046
#, no-c-format
msgid ""
"PROJCS[\"NAD83 / UTM Zone 10N\",\n"
"  GEOGCS[\"NAD83\",\n"
"        DATUM[\"North_American_Datum_1983\",\n"
"          SPHEROID[\"GRS 1980\",6378137,298.257222101]\n"
"        ],\n"
"        PRIMEM[\"Greenwich\",0],\n"
"        UNIT[\"degree\",0.0174532925199433]\n"
"  ],\n"
"  PROJECTION[\"Transverse_Mercator\"],\n"
"  PARAMETER[\"latitude_of_origin\",0],\n"
"  PARAMETER[\"central_meridian\",-123],\n"
"  PARAMETER[\"scale_factor\",0.9996],\n"
"  PARAMETER[\"false_easting\",500000],\n"
"  PARAMETER[\"false_northing\",0],\n"
"  UNIT[\"metre\",1]\n"
"]"
msgstr ""
"PROJCS[\"NAD83 / UTM Zone 10N\",\n"
"  GEOGCS[\"NAD83\",\n"
"        DATUM[\"North_American_Datum_1983\",\n"
"          SPHEROID[\"GRS 1980\",6378137,298.257222101]\n"
"        ],\n"
"        PRIMEM[\"Greenwich\",0],\n"
"        UNIT[\"degree\",0.0174532925199433]\n"
"  ],\n"
"  PROJECTION[\"Transverse_Mercator\"],\n"
"  PARAMETER[\"latitude_of_origin\",0],\n"
"  PARAMETER[\"central_meridian\",-123],\n"
"  PARAMETER[\"scale_factor\",0.9996],\n"
"  PARAMETER[\"false_easting\",500000],\n"
"  PARAMETER[\"false_northing\",0],\n"
"  UNIT[\"metre\",1]\n"
"]"

#. Tag: para
#: using_postgis_dataman.xml:1048
#, no-c-format
msgid ""
"For a listing of EPSG projection codes and their corresponding WKT "
"representations, see <ulink url=\"http://www.opengeospatial.org/\">http://"
"www.opengeospatial.org/</ulink>. For a discussion of SRS WKT in general, see "
"the OpenGIS \"Coordinate Transformation Services Implementation Specification"
"\" at <ulink url=\"http://www.opengeospatial.org/standards\">http://www."
"opengeospatial.org/standards</ulink>. For information on the European "
"Petroleum Survey Group (EPSG) and their database of spatial reference "
"systems, see <ulink url=\"http://www.epsg.org/\">http://www.epsg.org</ulink>."
msgstr ""
"EPSG投影コードと対応するWKT表現の一覧については、<ulink url=\"http://www."
"opengeospatial.org/\">http://www.opengeospatial.org/</ulink>をご覧下さい。SRS"
"のWKTについての一般的な議論については、OpenGISの<ulink url=\"http://www."
"opengeospatial.org/standards\">http://www.opengeospatial.org/standards</"
"ulink>にある「座標変換サービス実装仕様」をご覧下さい。欧州石油調査グループ"
"(European Petroleum Survey Group, EPSG)とEPSG空間参照系のデータベースに関する"
"情報は、<ulink url=\"http://www.epsg.org/\">http://www.epsg.org/</ulink>をご"
"覧下さい。"

#. Tag: term
#: using_postgis_dataman.xml:1061
#, no-c-format
msgid "proj4text"
msgstr "proj4text"

#. Tag: para
#: using_postgis_dataman.xml:1064
#, no-c-format
msgid ""
"PostGIS uses the PROJ library to provide coordinate transformation "
"capabilities. The <varname>proj4text</varname> column contains the PROJ "
"coordinate definition string for a particular SRID. For example:"
msgstr ""
"PostGISは座標変換機能を提供するためにProj4ライブラリを用いています。 "
"<varname>proj4text</varname>カラムには、特定のSRIDを示すProj4座標定義文字列が"
"入ります。たとえば次のようになります。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1069
#, no-c-format
msgid "+proj=utm +zone=10 +ellps=clrk66 +datum=NAD27 +units=m"
msgstr "+proj=utm +zone=10 +ellps=clrk66 +datum=NAD27 +units=m"

#. Tag: para
#: using_postgis_dataman.xml:1071
#, no-c-format
msgid ""
"For more information see the <ulink url=\"https://proj.org/\">PROJ web site</"
"ulink>. The <filename>spatial_ref_sys.sql</filename> file contains both "
"<varname>srtext</varname> and <varname>proj4text</varname> definitions for "
"all EPSG projections."
msgstr ""
"詳細情報については<ulink url=\"https://proj.org/\">PROJウェブサイト</ulink>を"
"ご覧下さい。<filename>spatial_ref_sys.sql</filename>ファイルには、全てのEPSG"
"投影について、<varname>srtext</varname>と<varname>proj4text</varname>の定義が"
"あります。"

#. Tag: para
#: using_postgis_dataman.xml:1080
#, no-c-format
msgid ""
"When retrieving spatial reference system definitions for use in "
"transformations, PostGIS uses fhe following strategy:"
msgstr "投影変換で空間参照系の定義を使用する場合には、次の戦略を取ります。"

#. Tag: para
#: using_postgis_dataman.xml:1084
#, no-c-format
msgid ""
"If <varname>auth_name</varname> and <varname>auth_srid</varname> are present "
"(non-NULL) use the PROJ SRS based on those entries (if one exists)."
msgstr ""
"<varname>auth_name</varname>と<varname>auth_srid</varname>がある (NULLでない)"
"場合には、これに基づいてPROJSRSを使います (存在する場合)。"

#. Tag: para
#: using_postgis_dataman.xml:1088
#, no-c-format
msgid ""
"If <varname>srtext</varname> is present create a SRS using it, if possible."
msgstr ""
"<varname>srtext</varname>がある場合には、可能ならそれを使用してSRSを生成しま"
"す。"

#. Tag: para
#: using_postgis_dataman.xml:1091
#, no-c-format
msgid ""
"If <varname>proj4text</varname> is present create a SRS using it, if "
"possible."
msgstr ""
"<varname>proj4text</varname>がある場合には、可能ならこれを使用してSRSを生成し"
"ます。"

#. Tag: title
#: using_postgis_dataman.xml:1097
#, no-c-format
msgid "User-Defined Spatial Reference Systems"
msgstr "ユーザ定義空間参照系"

#. Tag: para
#: using_postgis_dataman.xml:1099
#, no-c-format
msgid ""
"The PostGIS <varname>spatial_ref_sys</varname> table contains over 3000 of "
"the most common spatial reference system definitions that are handled by the "
"<ulink url=\"https://proj.org\">PROJ</ulink> projection library. But there "
"are many coordinate systems that it does not contain. You can add SRS "
"definitions to the table if you have the required information about the "
"spatial reference system. Or, you can define your own custom spatial "
"reference system if you are familiar with PROJ constructs. Keep in mind that "
"most spatial reference systems are regional and have no meaning when used "
"outside of the bounds they were intended for."
msgstr ""
"PostGIS<varname>spatial_ref_sys</varname>テーブルには<ulink url=\"https://"
"proj.org/\">PROJ</ulink>投影ライブラリで処理される最も一般的な空間参照系定義"
"3000件以上があります。しかし、そこに無い多くの座標系があります。空間参照系に"
"関する必要な情報がある場合は、SRS定義をテーブルに追加できます。PROJに詳しいな"
"ら独自の空間参照系を定義することもできます。ほとんどの空間参照系は地域的なも"
"のであり、目的の範囲外で使用する場合は意味を持たない点に注意してください。"

#. Tag: para
#: using_postgis_dataman.xml:1109
#, no-c-format
msgid ""
"A resource for finding spatial reference systems not defined in the core set "
"is <ulink url=\"http://spatialreference.org/\">http://spatialreference.org/</"
"ulink>"
msgstr ""
"PostGISのコアセットに入っていない空間参照系を探すための素晴らしい資料が"
"<ulink url=\"http://spatialreference.org/\">http://spatialreference.org/</"
"ulink>にあります。"

#. Tag: para
#: using_postgis_dataman.xml:1111
#, no-c-format
msgid ""
"Some commonly used spatial reference systems are: <ulink url=\"http://"
"spatialreference.org/ref/epsg/4326/\">4326 - WGS 84 Long Lat</ulink>, <ulink "
"url=\"http://spatialreference.org/ref/epsg/4269/\">4269 - NAD 83 Long Lat</"
"ulink>, <ulink url=\"http://spatialreference.org/ref/epsg/3395/\">3395 - WGS "
"84 World Mercator</ulink>, <ulink url=\"http://spatialreference.org/ref/"
"epsg/2163/\">2163 - US National Atlas Equal Area</ulink>, and the 60 WGS84 "
"UTM zones. UTM zones are one of the most ideal for measurement, but only "
"cover 6-degree regions. (To determine which UTM zone to use for your area of "
"interest, see the <ulink url=\"http://trac.osgeo.org/postgis/wiki/"
"UsersWikiplpgsqlfunctionsDistance\">utmzone PostGIS plpgsql helper function</"
"ulink>.)"
msgstr ""
"一般的に使用される空間参照系には<ulink url=\"http://spatialreference.org/ref/"
"epsg/4326/\">4326 - WGS 84経度緯度</ulink>、<ulink url=\"http://"
"spatialreference.org/ref/epsg/4269/\">4269 - NAD 83 経度緯度</ulink>、<ulink "
"url=\"http://spatialreference.org/ref/epsg/3395/\">3395 - WGS 84 メルカトル</"
"ulink>、<ulink url=\"http://spatialreference.org/ref/epsg/2163/\">2163 - 米国"
"ナショナルアトラス正積図法</ulink>、60個のWGS84 UTMゾーンがあります。UTMゾー"
"ンは計測に最適ですが、6度 (訳注: 経度)の領域のみをカバーします (対象地域に使"
"用するUTMゾーンを決定するには<ulink url=\"http://trac.osgeo.org/postgis/wiki/"
"UsersWikiplpgsqlfunctionsDistance\">utmzone PostGIS plpgsql helper function</"
"ulink>を参照してください)。"

#. Tag: para
#: using_postgis_dataman.xml:1120
#, no-c-format
msgid ""
"US states use State Plane spatial reference systems (meter or feet based) - "
"usually one or 2 exists per state. Most of the meter-based ones are in the "
"core set, but many of the feet-based ones or ESRI-created ones will need to "
"be copied from <ulink url=\"http://spatialreference.org\">spatialreference."
"org</ulink>."
msgstr ""
"米国の州では、州平面空間参照系 (メートルまたはフィート単位)を使用します。この"
"空間参照系は州ごとに一つか二つ存在します。ほとんどのメートル単位のものはコア"
"のセットに存在しますが、フィート単位の多数のものやESRIが作成したものは<ulink "
"url=\"http://spatialreference.org\">spatialreference.org</ulink>からロードす"
"る必要があります。"

#. Tag: para
#: using_postgis_dataman.xml:1126
#, no-c-format
msgid ""
"You can even define non-Earth-based coordinate systems, such as <ulink url="
"\"http://spatialreference.org/ref/iau2000/mars-2000/\">Mars 2000</ulink> "
"This Mars coordinate system is non-planar (it's in degrees spheroidal), but "
"you can use it with the <varname>geography</varname> type to obtain length "
"and proximity measurements in meters instead of degrees."
msgstr ""
"地球外の座標系でさえも定義することができます。たとえば<ulink url=\"http://"
"spatialreference.org/ref/iau2000/mars-2000/\">Mars 2000</ulink>です。この火星"
"の座標系は非平面 (回転楕円体の度)ですが、<varname>geography</varname>型で、度"
"でなくメートル単位で長さや近接測定値を取得することができます。"

#. Tag: para
#: using_postgis_dataman.xml:1132
#, no-c-format
msgid ""
"Here is an example of loading a custom coordinate system using an unassigned "
"SRID and the PROJ definition for a US-centric Lambert Conformal projection:"
msgstr ""
"割当外のSRIDとPROJ定義を使って米国中央のランベルト正角円錐図法の独自座標系を"
"ロードする例を次に示します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1135
#, no-c-format
msgid ""
"INSERT INTO spatial_ref_sys (srid, proj4text)\n"
"VALUES ( 990000,\n"
"  '+proj=lcc  +lon_0=-95 +lat_0=25 +lat_1=25 +lat_2=25 +x_0=0 +y_0=0 "
"+datum=WGS84 +units=m +no_defs'\n"
");"
msgstr ""
"INSERT INTO spatial_ref_sys (srid, proj4text)\n"
"VALUES ( 990000,\n"
"  '+proj=lcc  +lon_0=-95 +lat_0=25 +lat_1=25 +lat_2=25 +x_0=0 +y_0=0 "
"+datum=WGS84 +units=m +no_defs'\n"
");"

#. Tag: title
#: using_postgis_dataman.xml:1142
#, no-c-format
msgid "Geometry Validation"
msgstr "ジオメトリ検証"

#. Tag: para
#: using_postgis_dataman.xml:1144
#, no-c-format
msgid ""
"PostGIS is compliant with the Open Geospatial Consortium’s (OGC) OpenGIS "
"Specifications. As such, many PostGIS methods require, or more accurately, "
"assume that geometries that are operated on are both simple and valid. For "
"example, it does not make sense to calculate the area of a polygon that has "
"a hole defined outside of the polygon, or to construct a polygon from a non-"
"simple boundary line."
msgstr ""
"PostGISはOpen Geospatial Consortium (OGC)のOpenGIS仕様に準拠しています。多く"
"のPostGISメソッドは、操作対象のジオメトリが単純かつ妥当であることが求められま"
"す (正確に言うとそう仮定します)。たとえば、ポリゴンの外に穴があるようなものの"
"面積を計算したり、単純でない境界線を持つポリゴンを作ったりするのは、意味があ"
"りません。"

#. Tag: para
#: using_postgis_dataman.xml:1151
#, no-c-format
msgid ""
"According to the OGC Specifications, a <emphasis>simple</emphasis> geometry "
"is one that has no anomalous geometric points, such as self intersection or "
"self tangency and primarily refers to 0 or 1-dimensional geometries (i.e. "
"<varname>[MULTI]POINT, [MULTI]LINESTRING</varname>). Geometry validity, on "
"the other hand, primarily refers to 2-dimensional geometries (i.e. "
"<varname>[MULTI]POLYGON)</varname> and defines the set of assertions that "
"characterizes a valid polygon. The description of each geometric class "
"includes specific conditions that further detail geometric simplicity and "
"validity."
msgstr ""
"OGS仕様に沿うと、<emphasis>単純な</emphasis>ジオメトリとは、自己インタセクト"
"や自己接触のような、異常な幾何点を持たないことです。主に0次元または1次元のジ"
"オメトリ (<varname>[MULTI]POINT, [MULTI]LINESTRING</varname>))に適用します。 "
"他方、ジオメトリの妥当性は、主に2次元ジオメトリ (<varname>[MULTI]POLYGON</"
"varname>)に適用し、妥当なポリゴンを特徴づける位置指定子の集合を定義します。"
"個々のジオメトリクラスには、単純性と妥当性をさらに詳細に述べる特定の条件があ"
"ります。"

#. Tag: para
#: using_postgis_dataman.xml:1161
#, no-c-format
msgid ""
"A <varname>POINT</varname> is inherently <emphasis>simple</emphasis> as a 0-"
"dimensional geometry object."
msgstr ""
"<varname>POINT</varname>は0次元ジオメトリオブジェクトとして常に<emphasis>単純"
"</emphasis>です。"

#. Tag: para
#: using_postgis_dataman.xml:1164
#, no-c-format
msgid ""
"<varname>MULTIPOINT</varname>s are <emphasis>simple</emphasis> if no two "
"coordinates (<varname>POINT</varname>s) are equal (have identical coordinate "
"values)."
msgstr ""
"<varname>MULTIPOINT</varname>は、二つの座標値 (<varname>POINT</varname>)が同"
"じでないなら<emphasis>単純</emphasis>です。"

#. Tag: para
#: using_postgis_dataman.xml:1168
#, no-c-format
msgid ""
"A <varname>LINESTRING</varname> is <emphasis>simple</emphasis> if it does "
"not pass through the same <varname>POINT</varname> twice (except for the "
"endpoints, in which case it is referred to as a linear ring and additionally "
"considered closed)."
msgstr ""
"<varname>LINESTRING</varname>は、2度同じ<varname>POINT</varname>を通らない "
"(終点は除きます。この場合は線型環と呼ばれ、さらに言うと閉じていると思われま"
"す)なら<emphasis>単純</emphasis>です。"

#. Tag: emphasis
#: using_postgis_dataman.xml:1183
#, no-c-format
msgid "<emphasis>(a)</emphasis>"
msgstr "<emphasis>(a)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1193
#, no-c-format
msgid "<emphasis>(b)</emphasis>"
msgstr "<emphasis>(b)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1205
#, no-c-format
msgid "<emphasis>(c)</emphasis>"
msgstr "<emphasis>(c)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1215
#, no-c-format
msgid "<emphasis>(d)</emphasis>"
msgstr "<emphasis>(d)</emphasis>"

#. Tag: para
#: using_postgis_dataman.xml:1225
#, no-c-format
msgid ""
"<emphasis role=\"bold\">(a)</emphasis> and <emphasis role=\"bold\">(c)</"
"emphasis> are simple <varname>LINESTRING</varname>s, <emphasis role=\"bold"
"\">(b)</emphasis> and <emphasis role=\"bold\">(d)</emphasis> are not."
msgstr ""
"<emphasis role=\"bold\">(a)</emphasis>と<emphasis role=\"bold\">(c)</"
"emphasis>は単純な<varname>LINESTRING</varname>です。<emphasis role=\"bold"
"\">(b)</emphasis>と<emphasis role=\"bold\">(d)</emphasis>は単純ではありませ"
"ん。"

#. Tag: para
#: using_postgis_dataman.xml:1234
#, no-c-format
msgid ""
"A <varname>MULTILINESTRING</varname> is <emphasis>simple</emphasis> only if "
"all of its elements are simple and the only intersection between any two "
"elements occurs at <varname>POINT</varname>s that are on the boundaries of "
"both elements."
msgstr ""
"<varname>MULTILINESTRING</varname>は、 全ての要素が単純で、かつ任意の2要素の"
"インタセクトが要素の境界である<varname>POINT</varname>でだけ発生する場合に"
"限って<emphasis>単純</emphasis>です。"

#. Tag: emphasis
#: using_postgis_dataman.xml:1249
#, no-c-format
msgid "<emphasis>(e)</emphasis>"
msgstr "<emphasis>(e)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1259
#, no-c-format
msgid "<emphasis>(f)</emphasis>"
msgstr "<emphasis>(f)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1269
#, no-c-format
msgid "<emphasis>(g)</emphasis>"
msgstr "<emphasis>(g)</emphasis>"

#. Tag: para
#: using_postgis_dataman.xml:1279
#, no-c-format
msgid ""
"<emphasis role=\"bold\">(e)</emphasis> and <emphasis role=\"bold\">(f)</"
"emphasis> are simple <varname>MULTILINESTRING</varname>s, <emphasis role="
"\"bold\">(g)</emphasis> is not."
msgstr ""
"<emphasis role=\"bold\">(e)</emphasis>と<emphasis role=\"bold\">(f)</"
"emphasis>は単純な<varname>MULTILINESTRING</varname>です。<emphasis role="
"\"bold\">(g)</emphasis>は単純ではありません。"

#. Tag: para
#: using_postgis_dataman.xml:1288
#, no-c-format
msgid ""
"By definition, a <varname>POLYGON</varname> is always <emphasis>simple</"
"emphasis>. It is <emphasis>valid</emphasis> if no two rings in the boundary "
"(made up of an exterior ring and interior rings) cross. The boundary of a "
"<varname>POLYGON</varname> may intersect at a <varname>POINT</varname> but "
"only as a tangent (i.e. not on a line). A <varname>POLYGON</varname> may not "
"have cut lines or spikes and the interior rings must be contained entirely "
"within the exterior ring."
msgstr ""
"定義から<varname>POLYGON</varname>は常に単純です。バウンダリ内の環 (外環と内"
"環からなる)のうち二つがクロスしていないなら<emphasis>妥当</emphasis>です。"
"<varname>POLYGON</varname>の境界は、<varname>POINT</varname>とインタセクトす"
"るかも知れませんが、接点にしかなりません (すなわち線上にない)。"
"<varname>POLYGON</varname>はカットラインまたはスパイクを持たなくても良く、内"
"環は外環の中に完全に含まれていなければなりません。"

#. Tag: emphasis
#: using_postgis_dataman.xml:1306
#, no-c-format
msgid "<emphasis>(h)</emphasis>"
msgstr "<emphasis>(h)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1316
#, no-c-format
msgid "<emphasis>(i)</emphasis>"
msgstr "<emphasis>(i)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1326
#, no-c-format
msgid "<emphasis>(j)</emphasis>"
msgstr "<emphasis>(j)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1338
#, no-c-format
msgid "<emphasis>(k)</emphasis>"
msgstr "<emphasis>(k)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1348
#, no-c-format
msgid "<emphasis>(l)</emphasis>"
msgstr "<emphasis>(l)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1358
#, no-c-format
msgid "<emphasis>(m)</emphasis>"
msgstr "<emphasis>(m)</emphasis>"

#. Tag: para
#: using_postgis_dataman.xml:1367
#, no-c-format
msgid ""
"<emphasis role=\"bold\">(h)</emphasis> and <emphasis role=\"bold\">(i)</"
"emphasis> are valid <varname>POLYGON</varname>s, <emphasis role=\"bold\">(j-"
"m)</emphasis> cannot be represented as single <varname>POLYGON</varname>s, "
"but <emphasis role=\"bold\">(j)</emphasis> and <emphasis role=\"bold\">(m)</"
"emphasis> could be represented as a valid <varname>MULTIPOLYGON</varname>."
msgstr ""
"<emphasis role=\"bold\">(h)</emphasis>と<emphasis role=\"bold\">(i)</"
"emphasis>は妥当な<varname>POLYGON</varname>です。<emphasis role=\"bold\">(jか"
"らm)</emphasis>は単一の<varname>POLYGON</varname>としては表現できませんが、"
"<emphasis role=\"bold\">(j)</emphasis>と<emphasis role=\"bold\">(m)</"
"emphasis>は妥当な<varname>MULTIPOLYGON</varname>として表現できます。"

#. Tag: para
#: using_postgis_dataman.xml:1379
#, no-c-format
msgid ""
"A <varname>MULTIPOLYGON</varname> is <emphasis>valid</emphasis> if and only "
"if all of its elements are valid and the interiors of no two elements "
"intersect. The boundaries of any two elements may touch, but only at a "
"finite number of <varname>POINT</varname>s."
msgstr ""
"<varname>MULTIPOLYGON</varname>は、全ての要素が妥当で、二つのポリゴン要素につ"
"いて内側がインタセクトしていない場合は<emphasis>妥当</emphasis>です。ポリゴン"
"要素の任意の二つの境界は接触してもよいですが、有限な数の<varname>POINT</"
"varname>でなければなりません。"

#. Tag: emphasis
#: using_postgis_dataman.xml:1394
#, no-c-format
msgid "<emphasis>(n)</emphasis>"
msgstr "<emphasis>(n)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1404
#, no-c-format
msgid "<emphasis>(o)</emphasis>"
msgstr "<emphasis>(o)</emphasis>"

#. Tag: emphasis
#: using_postgis_dataman.xml:1414
#, no-c-format
msgid "<emphasis>(p)</emphasis>"
msgstr "<emphasis>(p)</emphasis>"

#. Tag: para
#: using_postgis_dataman.xml:1423
#, no-c-format
msgid ""
"<emphasis role=\"bold\">(n)</emphasis> and <emphasis role=\"bold\">(o)</"
"emphasis> are not valid <varname>MULTIPOLYGON</varname>s. <emphasis role="
"\"bold\">(p)</emphasis>, however, is valid."
msgstr ""
"<emphasis role=\"bold\">(n)</emphasis>と<emphasis role=\"bold\">(o)</"
"emphasis>は妥当でない<varname>MULTIPOLYGON</varname>です。<emphasis role="
"\"bold\">(p)</emphasis>は妥当です。"

#. Tag: para
#: using_postgis_dataman.xml:1432
#, no-c-format
msgid ""
"Most of the functions implemented by the GEOS library rely on the assumption "
"that your geometries are valid as specified by the OpenGIS Simple Feature "
"Specification. To check simplicity or validity of geometries you can use the "
"<link linkend=\"ST_IsSimple\">ST_IsSimple()</link> and <link linkend="
"\"ST_IsValid\">ST_IsValid()</link>"
msgstr ""
"GEOSライブラリを使って実装されている関数のほとんどは、ジオメトリがOpenGISシン"
"プルフィーチャー仕様で定義されているように妥当であると仮定しています。ジオメ"
"トリが単純であるか、また妥当であるか、のチェックとして<link linkend="
"\"ST_IsSimple\">ST_IsSimple()</link>と<link linkend=\"ST_IsValid"
"\">ST_IsValid()</link>が使えます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1438
#, no-c-format
msgid ""
"-- Typically, it doesn't make sense to check\n"
"-- for validity on linear features since it will always return TRUE.\n"
"-- But in this example, PostGIS extends the definition of the OGC IsValid\n"
"-- by returning false if a LineString has less than 2 *distinct* vertices.\n"
"gisdb=# SELECT\n"
"   ST_IsValid('LINESTRING(0 0, 1 1)'),\n"
"   ST_IsValid('LINESTRING(0 0, 0 0, 0 0)');\n"
"\n"
" st_isvalid | st_isvalid\n"
"------------+-----------\n"
"      t     |     f"
msgstr ""
"-- 一般的に、線フィーチャーの妥当性のチェックは\n"
"-- 常にTRUEを返すので意味がありません\n"
"-- しかし、この例では、PostGISがOGCのIsValidの定義を拡張して\n"
"-- *一意な頂点*が2より少ないラインストリングについてFALSEを\n"
"-- 返すようにしています\n"
"gisdb=# SELECT\n"
"   ST_IsValid('LINESTRING(0 0, 1 1)'),\n"
"   ST_IsValid('LINESTRING(0 0, 0 0, 0 0)');\n"
"\n"
" st_isvalid | st_isvalid\n"
"------------+-----------\n"
"      t     |     f"

#. Tag: para
#: using_postgis_dataman.xml:1440
#, no-c-format
msgid ""
"By default, PostGIS does not apply this validity check on geometry input, "
"because testing for validity needs lots of CPU time for complex geometries, "
"especially polygons. If you do not trust your data sources, you can manually "
"enforce such a check to your tables by adding a check constraint:"
msgstr ""
"デフォルトでは、PostGISはジオメトリ入力に関するこの妥当性チェックを適用しませ"
"ん。複雑なジオメトリの妥当性のチェックはCPU時間を多く必要とするためです。デー"
"タソースが信用できない場合は、手動でこのチェックを強制するための制約を付ける"
"ことができます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1446
#, fuzzy, no-c-format
msgid ""
"ALTER TABLE mytable\n"
"  ADD CONSTRAINT geometry_valid_check\n"
"        CHECK (ST_IsValid(geom));"
msgstr ""
"ALTER TABLE mytable\n"
"  ADD CONSTRAINT geometry_valid_check\n"
"        CHECK (ST_IsValid(the_geom));"

#. Tag: para
#: using_postgis_dataman.xml:1448
#, no-c-format
msgid ""
"If you encounter any strange error messages such as \"GEOS Intersection() "
"threw an error!\" when calling PostGIS functions with valid input "
"geometries, you likely found an error in either PostGIS or one of the "
"libraries it uses, and you should contact the PostGIS developers. The same "
"is true if a PostGIS function returns an invalid geometry for valid input."
msgstr ""
"妥当な入力ジオメトリでPostGIS関数を呼んだのに「GEOS Intersection()がエラーを"
"投げました!」というようなエラーメッセージに遭遇したなら、PostGISまたは使用し"
"ているライブラリの中のエラーを発見しました。PostGIS開発者に連絡するべきです。"
"PostGIS関数が妥当である入力ジオメトリから妥当でないジオメトリが返る場合も同じ"
"です。"

#. Tag: para
#: using_postgis_dataman.xml:1456
#, no-c-format
msgid ""
"The <link linkend=\"ST_IsValid\">ST_IsValid()</link> function does not check "
"the Z and M dimensions."
msgstr ""

#. Tag: title
#: using_postgis_dataman.xml:1463
#, no-c-format
msgid "Loading Spatial Data"
msgstr "空間データのロード"

#. Tag: para
#: using_postgis_dataman.xml:1465
#, no-c-format
msgid ""
"Once you have created a spatial table, you are ready to upload spatial data "
"to the database. There are two built-in ways to get spatial data into a "
"PostGIS/PostgreSQL database: using formatted SQL statements or using the "
"Shapefile loader."
msgstr ""
"空間テーブルを作成したら、これでGISデータをデータベースにアップロードする準備"
"ができたことになります。現在、PostGIS/PostgreSQLデータベースにデータをロード"
"するには、SQLステートメントを使う、またはシェープファイルのローダ/ダンパを使"
"う、という二つの方法があります。"

#. Tag: title
#: using_postgis_dataman.xml:1471
#, no-c-format
msgid "Using SQL to Load Data"
msgstr "SQLを使ってロードする"

#. Tag: para
#: using_postgis_dataman.xml:1473
#, no-c-format
msgid ""
"If spatial data can be converted to a text representation (as either WKT or "
"WKB), then using SQL might be the easiest way to get data into PostGIS. Data "
"can be bulk-loaded into PostGIS/PostgreSQL by loading a text file of SQL "
"<code>INSERT</code> statements using the <code>psql</code> SQL utility."
msgstr ""
"空間データを文字表現 (WKTかWKB)に変換できたら、SQLを使うのがPostGISにデータを"
"持たせる最も簡単です。SQLユーティリティの<code>psql</code>を使用して、SQLの"
"<code>INSERT</code>ステートメントのテキストファイルをロードすると、データを"
"PostGIS/PostgreSQLに一括読み込みできます。"

#. Tag: para
#: using_postgis_dataman.xml:1478
#, no-c-format
msgid ""
"A SQL load file (<filename>roads.sql</filename> for example) might look like "
"this:"
msgstr ""
"データアップロードファイル (たとえば<filename>roads.sql</filename>)は次のよう"
"になるでしょう。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1481
#, no-c-format
msgid ""
"BEGIN;\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (1,'LINESTRING(191232 243118,191108 243242)','Jeff Rd');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (2,'LINESTRING(189141 244158,189265 244817)','Geordie Rd');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (3,'LINESTRING(192783 228138,192612 229814)','Paul St');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (4,'LINESTRING(189412 252431,189631 259122)','Graeme Ave');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (5,'LINESTRING(190131 224148,190871 228134)','Phil Tce');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (6,'LINESTRING(198231 263418,198213 268322)','Dave Cres');\n"
"COMMIT;"
msgstr ""
"BEGIN;\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (1,'LINESTRING(191232 243118,191108 243242)','Jeff Rd');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (2,'LINESTRING(189141 244158,189265 244817)','Geordie Rd');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (3,'LINESTRING(192783 228138,192612 229814)','Paul St');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (4,'LINESTRING(189412 252431,189631 259122)','Graeme Ave');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (5,'LINESTRING(190131 224148,190871 228134)','Phil Tce');\n"
"INSERT INTO roads (road_id, roads_geom, road_name)\n"
"  VALUES (6,'LINESTRING(198231 263418,198213 268322)','Dave Cres');\n"
"COMMIT;"

#. Tag: para
#: using_postgis_dataman.xml:1483
#, no-c-format
msgid "The SQL file can be loaded into PostgreSQL using <code>psql</code>:"
msgstr ""
"SQLファイルのPostgreSQLへのロードは<code>psql</code>を使います。次のようにし"
"ます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1485
#, no-c-format
msgid "psql -d [database] -f roads.sql"
msgstr "psql -d [データベース名] -f roads.sql"

#. Tag: title
#: using_postgis_dataman.xml:1489
#, no-c-format
msgid "Using the Shapefile Loader"
msgstr "シェープファイルローダを使う"

#. Tag: para
#: using_postgis_dataman.xml:1491
#, no-c-format
msgid ""
"The <filename>shp2pgsql</filename> data loader converts Shapefiles into SQL "
"suitable for insertion into a PostGIS/PostgreSQL database either in geometry "
"or geography format. The loader has several operating modes selected by "
"command line flags."
msgstr ""
"<filename>shp2pgsql</filename>データローダは、ESRIシェープファイルをPostGIS/"
"PostgreSQLデータベースに、ジオメトリまたはジオグラフィとして挿入するための適"
"切なSQLに変換します。ローダには、次に示すコマンドラインフラグによって区別され"
"る、いくつかの操作モードがあります。"

#. Tag: para
#: using_postgis_dataman.xml:1496
#, no-c-format
msgid ""
"There is also a <filename>shp2pgsql-gui</filename> graphical interface with "
"most of the options as the command-line loader. This may be easier to use "
"for one-off non-scripted loading or if you are new to PostGIS. It can also "
"be configured as a plugin to PgAdminIII."
msgstr ""
"グラフィカルユーザインタフェースを持つ<filename>shp2pgsql-gui</filename>もあ"
"ります。コマンドラインローダのオプションのほとんどが使えます。これは、スクリ"
"プト化されていない1回限りのロードの場合や、PostGIS初心者がロードする場合に、"
"簡単に使用できます。PgAdminIIIのプラグインとすることもできます。"

#. Tag: term
#: using_postgis_dataman.xml:1504
#, no-c-format
msgid "(c|a|d|p) These are mutually exclusive options:"
msgstr "(c|a|d|p) 相互に排他的なオプションです"

#. Tag: term
#: using_postgis_dataman.xml:1509
#, no-c-format
msgid "<term>-c</term>"
msgstr "<term>-c</term>"

#. Tag: para
#: using_postgis_dataman.xml:1511
#, no-c-format
msgid ""
"Creates a new table and populates it from the Shapefile. <emphasis>This is "
"the default mode.</emphasis>"
msgstr ""
"新しいテーブルの作成とシェープファイルからのデータの読み込みを行います。"
"<emphasis>これがデフォルトモードです</emphasis>。"

#. Tag: term
#: using_postgis_dataman.xml:1519
#, no-c-format
msgid "<term>-a</term>"
msgstr "<term>-a</term>"

#. Tag: para
#: using_postgis_dataman.xml:1521
#, no-c-format
msgid ""
"Appends data from the Shapefile into the database table. Note that to use "
"this option to load multiple files, the files must have the same attributes "
"and same data types."
msgstr ""
"シェープファイルからデータベーステーブルにデータを追加します。複数のファイル"
"をロードするためにこのオプションを使う場合は、これらのファイルは同じ属性と同"
"じデータ型を持つ必要があります。"

#. Tag: term
#: using_postgis_dataman.xml:1530
#, no-c-format
msgid "<term>-d</term>"
msgstr "<term>-d</term>"

#. Tag: para
#: using_postgis_dataman.xml:1532
#, no-c-format
msgid ""
"Drops the database table before creating a new table with the data in the "
"Shapefile."
msgstr ""
"シェープファイルにあるデータを持つ新しいテーブルを作成する前にデータベース"
"テーブルを削除します。"

#. Tag: term
#: using_postgis_dataman.xml:1539
#, no-c-format
msgid "<term>-p</term>"
msgstr "<term>-p</term>"

#. Tag: para
#: using_postgis_dataman.xml:1541
#, no-c-format
msgid ""
"Only produces the table creation SQL code, without adding any actual data. "
"This can be used if you need to completely separate the table creation and "
"data loading steps."
msgstr ""
"テーブル作成のSQLコードを生成するだけで、実際のデータは追加しません。このモー"
"ドは、テーブル作成とデータロードとを完全に分けたい場合に使用します。"

#. Tag: term
#: using_postgis_dataman.xml:1554
#, no-c-format
msgid "<term>-?</term>"
msgstr "<term>-?</term>"

#. Tag: para
#: using_postgis_dataman.xml:1556
#, no-c-format
msgid "Display help screen."
msgstr "ヘルプ画面を表示します。"

#. Tag: term
#: using_postgis_dataman.xml:1563
#, no-c-format
msgid "<term>-D</term>"
msgstr "<term>-D</term>"

#. Tag: para
#: using_postgis_dataman.xml:1565
#, no-c-format
msgid ""
"Use the PostgreSQL \"dump\" format for the output data. This can be combined "
"with -a, -c and -d. It is much faster to load than the default \"insert\" "
"SQL format. Use this for very large data sets."
msgstr ""
"出力データにPostgreSQLのダンプ書式を用います。このモードは-a, -c, -dと組み合"
"わせて利用します。デフォルトの\"insert\"によるSQL書式よりも、大変早くロードで"
"きます。大きなデータセットではこちらを使用して下さい。"

#. Tag: term
#: using_postgis_dataman.xml:1574
#, no-c-format
msgid "-s [&lt;FROM_SRID&gt;:]&lt;SRID&gt;"
msgstr "-s [&lt;FROM_SRID&gt;:]&lt;SRID&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1576
#, no-c-format
msgid ""
"Creates and populates the geometry tables with the specified SRID. "
"Optionally specifies that the input shapefile uses the given FROM_SRID, in "
"which case the geometries will be reprojected to the target SRID."
msgstr ""
"指定したSRIDを持つジオメトリテーブルの生成や追加を行います。FROM_SRIDが与えら"
"れた場合には、入力シェープファイルに、これを使います 。この場合には、ジオメト"
"リは変更先SRIDに投影変換します。"

#. Tag: term
#: using_postgis_dataman.xml:1586
#, no-c-format
msgid "<term>-k</term>"
msgstr "<term>-k</term>"

#. Tag: para
#: using_postgis_dataman.xml:1588
#, no-c-format
msgid ""
"Keep identifiers' case (column, schema and attributes). Note that attributes "
"in Shapefile are all UPPERCASE."
msgstr ""
"識別子 (カラム、スキーマおよび属性)の大文字小文字を保持します。シェープファイ"
"ルの属性は全て大文字であることに注意して下さい。"

#. Tag: term
#: using_postgis_dataman.xml:1596
#, no-c-format
msgid "<term>-i</term>"
msgstr "<term>-i</term>"

#. Tag: para
#: using_postgis_dataman.xml:1598
#, no-c-format
msgid ""
"Coerce all integers to standard 32-bit integers, do not create 64-bit "
"bigints, even if the DBF header signature appears to warrant it."
msgstr ""
"全ての整数を標準の32ビット整数に強制します。DBFヘッダではそれが正当であったと"
"しても、64ビットのbigintを生成しません。"

#. Tag: term
#: using_postgis_dataman.xml:1606
#, no-c-format
msgid "<term>-I</term>"
msgstr "<term>-I</term>"

#. Tag: para
#: using_postgis_dataman.xml:1608
#, no-c-format
msgid "Create a GiST index on the geometry column."
msgstr "ジオメトリカラムにGiSTインデックスを生成します。"

#. Tag: term
#: using_postgis_dataman.xml:1615
#, no-c-format
msgid "<term>-m</term>"
msgstr "<term>-m</term>"

#. Tag: para
#: using_postgis_dataman.xml:1617
#, no-c-format
msgid ""
"-m <filename>a_file_name</filename> Specify a file containing a set of "
"mappings of (long) column names to 10 character DBF column names. The "
"content of the file is one or more lines of two names separated by white "
"space and no trailing or leading space. For example:"
msgstr ""
"-m <filename>a_file_name</filename>で、長いカラム名を10文字のDBFカラム名に対"
"応付けるファイルを指定します。ファイルは、1以上の行を持ちます。各行は空白区切"
"りで二つの名前を持ち、行頭行末に空白を入れません。例を次に示します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1622
#, no-c-format
msgid ""
"COLUMNNAME DBFFIELD1\n"
"AVERYLONGCOLUMNNAME DBFFIELD2"
msgstr ""
"COLUMNNAME DBFFIELD1\n"
"AVERYLONGCOLUMNNAME DBFFIELD2"

#. Tag: term
#: using_postgis_dataman.xml:1628
#, no-c-format
msgid "<term>-S</term>"
msgstr "<term>-S</term>"

#. Tag: para
#: using_postgis_dataman.xml:1630
#, no-c-format
msgid ""
"Generate simple geometries instead of MULTI geometries. Will only succeed if "
"all the geometries are actually single (I.E. a MULTIPOLYGON with a single "
"shell, or or a MULTIPOINT with a single vertex)."
msgstr ""
"マルチ系ジオメトリの替りに単一ジオメトリを生成します。全てのジオメトリが実際"
"に単一である (たとえば単一の外環でなるMULTIPOLYGONや単一の頂点でなる"
"MULTIPOINT)場合にのみ成功します。"

#. Tag: term
#: using_postgis_dataman.xml:1639
#, no-c-format
msgid "-t &lt;dimensionality&gt;"
msgstr "-t &lt;次元&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1641
#, no-c-format
msgid ""
"Force the output geometry to have the specified dimensionality. Use the "
"following strings to indicate the dimensionality: 2D, 3DZ, 3DM, 4D."
msgstr ""
"出力ジオメトリが特定の次元を持つよう強制します。次元は、2D, 3DZ, 3DM, 4Dの文"
"字列を使います。"

#. Tag: para
#: using_postgis_dataman.xml:1645
#, no-c-format
msgid ""
"If the input has fewer dimensions that specified, the output will have those "
"dimensions filled in with zeroes. If the input has more dimensions that "
"specified, the unwanted dimensions will be stripped."
msgstr ""
"入力の次元が出力より小さい場合には、出力では0が入ります。入力の次元が大きい場"
"合には、外されます。"

#. Tag: term
#: using_postgis_dataman.xml:1654
#, no-c-format
msgid "<term>-w</term>"
msgstr "<term>-w</term>"

#. Tag: para
#: using_postgis_dataman.xml:1656
#, no-c-format
msgid ""
"Output WKT format, instead of WKB. Note that this can introduce coordinate "
"drifts due to loss of precision."
msgstr ""
"出力書式をWKBでなくWKTにします。精度が低下して、座標変動が発生しうることに注"
"意が必要です。"

#. Tag: term
#: using_postgis_dataman.xml:1664
#, no-c-format
msgid "<term>-e</term>"
msgstr "<term>-e</term>"

#. Tag: para
#: using_postgis_dataman.xml:1666
#, no-c-format
msgid ""
"Execute each statement on its own, without using a transaction. This allows "
"loading of the majority of good data when there are some bad geometries that "
"generate errors. Note that this cannot be used with the -D flag as the \"dump"
"\" format always uses a transaction."
msgstr ""
"トランザクションを使わずに、ステートメントごとに実行するようにします。エラー"
"の元となる不良なジオメトリがいくつか含んでいる時に、大半の良好なデータのロー"
"ドが可能にするものです。ダンプ書式ではトランザクションを常に使うので、-Dフラ"
"グを指定している場合には使えません。"

#. Tag: term
#: using_postgis_dataman.xml:1676
#, no-c-format
msgid "-W &lt;encoding&gt;"
msgstr "-W &lt;エンコーディング&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1678
#, no-c-format
msgid ""
"Specify encoding of the input data (dbf file). When used, all attributes of "
"the dbf are converted from the specified encoding to UTF8. The resulting SQL "
"output will contain a <code>SET CLIENT_ENCODING to UTF8</code> command, so "
"that the backend will be able to reconvert from UTF8 to whatever encoding "
"the database is configured to use internally."
msgstr ""
"入力データ (dbfファイル)のエンコーディングを指定します。全てのdbfの属性は指定"
"されたエンコーディングからUTF8に変換されます。SQL出力結果には <code>SET "
"CLIENT_ENCODING to UTF8</code>が含まれるようになり、バックエンドはUTF-8から"
"データベースが内部利用のために設定したエンコーディングに再変換できます。"

#. Tag: term
#: using_postgis_dataman.xml:1688
#, no-c-format
msgid "-N &lt;policy&gt;"
msgstr "-N &lt;方針&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1690
#, no-c-format
msgid "NULL geometries handling policy (insert*,skip,abort)"
msgstr ""
"NULLジオメトリ操作方針(insert*=挿入, skip=スキップ, abort=強制終了)を選択しま"
"す。"

#. Tag: term
#: using_postgis_dataman.xml:1696
#, no-c-format
msgid "<term>-n</term>"
msgstr "<term>-n</term>"

#. Tag: para
#: using_postgis_dataman.xml:1698
#, no-c-format
msgid ""
"-n Only import DBF file. If your data has no corresponding shapefile, it "
"will automatically switch to this mode and load just the dbf. So setting "
"this flag is only needed if you have a full shapefile set, and you only want "
"the attribute data and no geometry."
msgstr ""
"DBFファイルのみインポートします。対応するシェープファイルを持っていない場"
"合、 自動的にこのモードになり、DBFファイルのみロードします。 このフラグは、完"
"全なシェープファイル群を持っていて、属性データだけが欲しくてジオメトリが欲し"
"くない時のみ使用します。"

#. Tag: term
#: using_postgis_dataman.xml:1706
#, no-c-format
msgid "<term>-G</term>"
msgstr "<term>-G</term>"

#. Tag: para
#: using_postgis_dataman.xml:1708
#, no-c-format
msgid ""
"Use geography type instead of geometry (requires lon/lat data) in WGS84 long "
"lat (SRID=4326)"
msgstr ""
"ジオメトリ型のかわりに、ジオグラフィ型で、WGS84経度緯度 (SRID=4326)を使用しま"
"す (経度緯度データが必要です)。"

#. Tag: term
#: using_postgis_dataman.xml:1714
#, no-c-format
msgid "-T &lt;tablespace&gt;"
msgstr "-T &lt;tablespace&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1716
#, no-c-format
msgid ""
"Specify the tablespace for the new table. Indexes will still use the default "
"tablespace unless the -X parameter is also used. The PostgreSQL "
"documentation has a good description on when to use custom tablespaces."
msgstr ""
"新しいテーブルのテーブル空間を指定します。 -Xパラメータが使われない場合には、"
"インデックスはデフォルトのテーブル空間を使用します。PostgreSQL文書には、テー"
"ブル空間を用いるべき時に関する良い文書があります。"

#. Tag: term
#: using_postgis_dataman.xml:1724
#, no-c-format
msgid "-X &lt;tablespace&gt;"
msgstr "-X &lt;tablespace&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1726
#, no-c-format
msgid ""
"Specify the tablespace for the new table's indexes. This applies to the "
"primary key index, and the GIST spatial index if -I is also used."
msgstr ""
"新しいテーブルのインデックスで使われるテーブル空間を指定します。 主キーイン"
"デックスに適用され、-Iが合わせて使われている場合にはGiST空間インデックスにも"
"適用されます。"

#. Tag: term
#: using_postgis_dataman.xml:1733
#, fuzzy, no-c-format
msgid "<term>-Z</term>"
msgstr "<term>-c</term>"

#. Tag: para
#: using_postgis_dataman.xml:1735
#, no-c-format
msgid ""
"When used, this flag will prevent the generation of <code>ANALYZE</code> "
"statements. Without the -Z flag (default behavior), the <code>ANALYZE</code> "
"statements will be generated."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:1744
#, no-c-format
msgid ""
"An example session using the loader to create an input file and loading it "
"might look like this:"
msgstr ""
"ローダを使って入力ファイルを生成してアップロードするセッション例は次の通りで"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1749
#, no-c-format
msgid ""
"# shp2pgsql -c -D -s 4269 -i -I shaperoads.shp myschema.roadstable &gt; "
"roads.sql\n"
"# psql -d roadsdb -f roads.sql"
msgstr ""
"# shp2pgsql -c -D -s 4269 -i -I shaperoads.shp myschema.roadstable &gt; "
"roads.sql\n"
"# psql -d roadsdb -f roads.sql"

#. Tag: para
#: using_postgis_dataman.xml:1751
#, no-c-format
msgid "A conversion and load can be done in one step using UNIX pipes:"
msgstr "変換とアップロードはUNIXのパイプを使うと一回で実行できます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1755
#, no-c-format
msgid "# shp2pgsql shaperoads.shp myschema.roadstable | psql -d roadsdb"
msgstr "# shp2pgsql shaperoads.shp myschema.roadstable | psql -d roadsdb"

#. Tag: title
#: using_postgis_dataman.xml:1760
#, no-c-format
msgid "Extracting Spatial Data"
msgstr "空間データの抽出"

#. Tag: para
#: using_postgis_dataman.xml:1762
#, no-c-format
msgid ""
"Spatial data can be extracted from the database using either SQL or the "
"Shapefile dumper. The section on SQL presents some of the functions "
"available to do comparisons and queries on spatial tables."
msgstr ""
"空間データはSQLかシェープファイルダンパを使うと抽出できます。SQLの節では空間"
"テーブルで比較とクエリに使用できる関数を示します。"

#. Tag: title
#: using_postgis_dataman.xml:1768
#, no-c-format
msgid "Using SQL to Extract Data"
msgstr "SQLを使ってデータを抽出する"

#. Tag: para
#: using_postgis_dataman.xml:1770
#, no-c-format
msgid ""
"The most straightforward way of extracting spatial data out of the database "
"is to use a SQL <code>SELECT</code> query to define the data set to be "
"extracted and dump the resulting columns into a parsable text file:"
msgstr ""
"データベース外へのデータ抽出の最も簡単な方法は、抽出するデータセットを定義"
"し、<code>SELECT</code>問い合わせを使って、結果カラムを解析可能なテキストファ"
"イルにダンプすることです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1775
#, no-c-format
msgid ""
"db=# SELECT road_id, ST_AsText(road_geom) AS geom, road_name FROM roads;\n"
"\n"
"road_id | geom                                    | road_name\n"
"--------+-----------------------------------------+-----------\n"
"          1 | LINESTRING(191232 243118,191108 243242) | Jeff Rd\n"
"          2 | LINESTRING(189141 244158,189265 244817) | Geordie Rd\n"
"          3 | LINESTRING(192783 228138,192612 229814) | Paul St\n"
"          4 | LINESTRING(189412 252431,189631 259122) | Graeme Ave\n"
"          5 | LINESTRING(190131 224148,190871 228134) | Phil Tce\n"
"          6 | LINESTRING(198231 263418,198213 268322) | Dave Cres\n"
"          7 | LINESTRING(218421 284121,224123 241231) | Chris Way\n"
"(6 rows)"
msgstr ""
"db=# SELECT road_id, ST_AsText(road_geom) AS geom, road_name FROM roads;\n"
"\n"
"road_id | geom                                    | road_name\n"
"--------+-----------------------------------------+-----------\n"
"          1 | LINESTRING(191232 243118,191108 243242) | Jeff Rd\n"
"          2 | LINESTRING(189141 244158,189265 244817) | Geordie Rd\n"
"          3 | LINESTRING(192783 228138,192612 229814) | Paul St\n"
"          4 | LINESTRING(189412 252431,189631 259122) | Graeme Ave\n"
"          5 | LINESTRING(190131 224148,190871 228134) | Phil Tce\n"
"          6 | LINESTRING(198231 263418,198213 268322) | Dave Cres\n"
"          7 | LINESTRING(218421 284121,224123 241231) | Chris Way\n"
"(6 rows)"

#. Tag: para
#: using_postgis_dataman.xml:1777
#, no-c-format
msgid ""
"There will be times when some kind of restriction is necessary to cut down "
"the number of records returned. In the case of attribute-based restrictions, "
"use the same SQL syntax as used with a non-spatial table. In the case of "
"spatial restrictions, the following functions are useful:"
msgstr ""
"返されるレコードの数を減らすためにある種の制限が必要になる場合があります。属"
"性ベースで制限をかける場合には、非空間テーブルで使うのと同じSQL文を使います。"
"空間に制限をかけるには次の関数を使います。"

#. Tag: term
#: using_postgis_dataman.xml:1785
#, no-c-format
msgid "ST_Intersects"
msgstr "ST_Intersects"

#. Tag: para
#: using_postgis_dataman.xml:1788
#, no-c-format
msgid "This function tells whether two geometries share any space."
msgstr ""
"この関数は、二つのジオメトリが空間を共有しているかどうかをテストします。"

#. Tag: term
#: using_postgis_dataman.xml:1793
#, no-c-format
msgid "<term>=</term>"
msgstr "<term>=</term>"

#. Tag: para
#: using_postgis_dataman.xml:1796
#, no-c-format
msgid ""
"This tests whether two geometries are geometrically identical. For example, "
"if 'POLYGON((0 0,1 1,1 0,0 0))' is the same as 'POLYGON((0 0,1 1,1 0,0 "
"0))' (it is)."
msgstr ""
"この関数で、二つのジオメトリが幾何的に同一であるかを見ることができます。たと"
"えば、'POLYGON((0 0,1 1,1 0,0 0))' は 'POLYGON((0 0,1 1,1 0,0 0))' と同じかを"
"見ることができます (これは同じとなります)。"

#. Tag: para
#: using_postgis_dataman.xml:1804
#, no-c-format
msgid ""
"Next, you can use these operators in queries. Note that when specifying "
"geometries and boxes on the SQL command line, you must explicitly turn the "
"string representations into geometries function. The 312 is a fictitious "
"spatial reference system that matches our data. So, for example:"
msgstr ""
"次に、これらの演算子をクエリで使うことができます。SQLコマンドラインからジオメ"
"トリとボックスの指定を行うときは、明示的に文字列表現をジオメトリに変換しなけ"
"ればならないことに注意して下さい。たとえば、次のようになります。ただし312は架"
"空の空間参照系番号で、ここでのデータに合致しています。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1810
#, no-c-format
msgid ""
"SELECT road_id, road_name\n"
"  FROM roads\n"
"  WHERE roads_geom='SRID=312;LINESTRING(191232 243118,191108 243242)'::"
"geometry;"
msgstr ""
"SELECT road_id, road_name\n"
"  FROM roads\n"
"  WHERE roads_geom='SRID=312;LINESTRING(191232 243118,191108 243242)'::"
"geometry;"

#. Tag: para
#: using_postgis_dataman.xml:1812
#, no-c-format
msgid ""
"The above query would return the single record from the \"ROADS_GEOM\" table "
"in which the geometry was equal to that value."
msgstr ""
"上のクエリは\"ROADS_GEOM\"テーブルから、その値と等価である単一のレコードを返"
"します。"

#. Tag: para
#: using_postgis_dataman.xml:1815
#, no-c-format
msgid ""
"To check whether some of the roads passes in the area defined by a polygon:"
msgstr ""
"道路がポリゴンで定義した面を通過するかどうかをチェックするには次のようにしま"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1817
#, no-c-format
msgid ""
"SELECT road_id, road_name\n"
"FROM roads\n"
"WHERE ST_Intersects(roads_geom, 'SRID=312;POLYGON((...))');"
msgstr ""
"SELECT road_id, road_name\n"
"FROM roads\n"
"WHERE ST_Intersects(roads_geom, 'SRID=312;POLYGON((...))');"

#. Tag: para
#: using_postgis_dataman.xml:1821
#, no-c-format
msgid ""
"The most common spatial query will probably be a \"frame-based\" query, used "
"by client software, like data browsers and web mappers, to grab a \"map frame"
"\" worth of data for display."
msgstr ""
"最も一般的な空間クエリは「フレームベース」のクエリでしょう。これは、表示する"
"ためのデータの価値のある「マップフレーム」を取得するために、データブラウザや"
"ウェブマッパのようなクライアントソフトウェアに使われます。"

#. Tag: para
#: using_postgis_dataman.xml:1824
#, no-c-format
msgid ""
"When using the \"&amp;&amp;\" operator, you can specify either a BOX3D as "
"the comparison feature or a GEOMETRY. When you specify a GEOMETRY, however, "
"its bounding box will be used for the comparison."
msgstr ""
"\"&amp;&amp;\"演算子を使うとき、比較フィーチャーをBOX3DかGEOMETRYかに指定する"
"ことができます。ただし、GEOMETRYを指定すると、それのバウンディングボックスが"
"比較に使われます。"

#. Tag: para
#: using_postgis_dataman.xml:1828
#, no-c-format
msgid "Using a \"BOX3D\" object for the frame, such a query looks like this:"
msgstr "次に示すクエリのように、フレームにBOX3Dオブジェクトを使います。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1830
#, no-c-format
msgid ""
"SELECT ST_AsText(roads_geom) AS geom\n"
"FROM roads\n"
"WHERE\n"
"  roads_geom &amp;&amp; ST_MakeEnvelope(191232, 243117,191232, 243119,312);"
msgstr ""
"SELECT ST_AsText(roads_geom) AS geom\n"
"FROM roads\n"
"WHERE\n"
"  roads_geom &amp;&amp; ST_MakeEnvelope(191232, 243117,191232, 243119,312);"

#. Tag: para
#: using_postgis_dataman.xml:1832
#, no-c-format
msgid ""
"Note the use of the SRID 312, to specify the projection of the envelope."
msgstr ""
"エンベロープの投影を指定するためにSRID 312を使っていることに注意して下さい。"

#. Tag: title
#: using_postgis_dataman.xml:1838
#, no-c-format
msgid "Using the Shapefile Dumper"
msgstr "ダンパを使う"

#. Tag: para
#: using_postgis_dataman.xml:1840
#, no-c-format
msgid ""
"The <filename>pgsql2shp</filename> table dumper connects to the database and "
"converts a table (possibly defined by a query) into a shape file. The basic "
"syntax is:"
msgstr ""
"<filename>pgsql2shp</filename>テーブルダンパは、データベースに直接接続して、"
"テーブル (あるいはクエリによって定義されたもの)をシェープファイルに変換するも"
"のです。基本的な文は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:1844
#, no-c-format
msgid ""
"pgsql2shp [&lt;options&gt;] &lt;database&gt; [&lt;schema&gt;.]&lt;table&gt;"
msgstr ""
"pgsql2shp [&lt;オプション&gt;] &lt;database&gt; [&lt;スキーマ&gt;.]&lt;"
"table&gt;"

#. Tag: programlisting
#: using_postgis_dataman.xml:1846
#, no-c-format
msgid "pgsql2shp [&lt;options&gt;] &lt;database&gt; &lt;query&gt;"
msgstr "pgsql2shp [&lt;オプション&gt;] &lt;データベース&gt; &lt;クエリ&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1848
#, no-c-format
msgid "The commandline options are:"
msgstr "コマンドラインオプションは次の通りです。"

#. Tag: term
#: using_postgis_dataman.xml:1852
#, no-c-format
msgid "-f &lt;filename&gt;"
msgstr "-f &lt;ファイル名&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1855
#, no-c-format
msgid "Write the output to a particular filename."
msgstr "特定のファイル名に出力を書きこみます。"

#. Tag: term
#: using_postgis_dataman.xml:1860
#, no-c-format
msgid "-h &lt;host&gt;"
msgstr "-h &lt;ホスト&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1863
#, no-c-format
msgid "The database host to connect to."
msgstr "接続先データベースのホスト名。"

#. Tag: term
#: using_postgis_dataman.xml:1868
#, no-c-format
msgid "-p &lt;port&gt;"
msgstr "-p &lt;ポート&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1871
#, no-c-format
msgid "The port to connect to on the database host."
msgstr "接続先データベースのポート。"

#. Tag: term
#: using_postgis_dataman.xml:1876
#, no-c-format
msgid "-P &lt;password&gt;"
msgstr "-P &lt;パスワード&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1879
#, no-c-format
msgid "The password to use when connecting to the database."
msgstr "データベースに接続するためのパスワード。"

#. Tag: term
#: using_postgis_dataman.xml:1884
#, no-c-format
msgid "-u &lt;user&gt;"
msgstr "-u &lt;ユーザ名&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1887
#, no-c-format
msgid "The username to use when connecting to the database."
msgstr "データベースに接続する際のユーザ名。"

#. Tag: term
#: using_postgis_dataman.xml:1892
#, no-c-format
msgid "-g &lt;geometry column&gt;"
msgstr "-g &lt;ジオメトリカラム&gt;"

#. Tag: para
#: using_postgis_dataman.xml:1895
#, no-c-format
msgid ""
"In the case of tables with multiple geometry columns, the geometry column to "
"use when writing the shape file."
msgstr ""
"複数のジオメトリカラムを持つテーブルの場合の、シェープファイルの出力に使用す"
"るジオメトリカラム。"

#. Tag: term
#: using_postgis_dataman.xml:1901
#, no-c-format
msgid "<term>-b</term>"
msgstr "<term>-b</term>"

#. Tag: para
#: using_postgis_dataman.xml:1904
#, no-c-format
msgid ""
"Use a binary cursor. This will make the operation faster, but will not work "
"if any NON-geometry attribute in the table lacks a cast to text."
msgstr ""
"バイナリカーソルを使います。これは、実行時間を短くしますが、テーブルの非ジオ"
"メトリ属性がテキストへのキャストを持っていない場合には、動作しません。"

#. Tag: term
#: using_postgis_dataman.xml:1911
#, no-c-format
msgid "<term>-r</term>"
msgstr "<term>-r</term>"

#. Tag: para
#: using_postgis_dataman.xml:1914
#, no-c-format
msgid ""
"Raw mode. Do not drop the <varname>gid</varname> field, or escape column "
"names."
msgstr ""
"Rawモード。<varname>gid</varname>フィールドを落としたり、カラム名をエスケープ"
"してはいけません。"

#. Tag: term
#: using_postgis_dataman.xml:1920
#, no-c-format
msgid "-m <varname>filename</varname>"
msgstr "-m <varname>ファイル名</varname>"

#. Tag: para
#: using_postgis_dataman.xml:1922
#, no-c-format
msgid ""
"Remap identifiers to ten character names. The content of the file is lines "
"of two symbols separated by a single white space and no trailing or leading "
"space: VERYLONGSYMBOL SHORTONE ANOTHERVERYLONGSYMBOL SHORTER etc."
msgstr ""
"識別名を10文字名に再割り当てします。 ファイルの中身は、一つの空白で区切られ、"
"前と後に空白が無い二つのシンボルの行からなります。VERYLONGSYMBOL SHORTONE "
"ANOTHERVERYLONGSYMBOL SHORTER等となります。"

#. Tag: title
#: using_postgis_dataman.xml:1935
#, fuzzy, no-c-format
msgid "Spatial Indexes"
msgstr "空間インデックスを構築する"

#. Tag: para
#: using_postgis_dataman.xml:1937
#, fuzzy, no-c-format
msgid ""
"Spatial indexes make using a spatial database for large data sets possible. "
"Without indexing, a search for features requires a sequential scan of every "
"record in the database. Indexing speeds up searching by organizing the data "
"into a structure which can be quickly traversed to find matching records."
msgstr ""
"インデックスによって巨大データセットの空間データベースの使用が可能となりま"
"す。インデックス無しでは、地物の検索を行う際に、データベースの全てのレコード"
"に対するシーケンシャルスキャンが必要となります。インデックスによって、データ"
"からレコード探索のために早く移動できる構造を構築するので、検索速度が向上しま"
"す。"

#. Tag: para
#: using_postgis_dataman.xml:1943
#, fuzzy, no-c-format
msgid ""
"The B-tree index method commonly used for attribute data is not very useful "
"for spatial data, since it only supports storing and querying data in a "
"single dimension. Data such as geometry (which has 2 or more dimensions) "
"requires an index method that supports range query across all the data "
"dimensions. One of the key advantages of PostgreSQL for spatial data "
"handling is that it offers several kinds of index methods which work well "
"for multi-dimensional data: GiST, BRIN and SP-GiST indexes."
msgstr ""
"一般に属性データ使われるB木インデックスによる方法は、空間データにはあまり使い"
"やすくはありません。1次元のデータの格納と問い合わせにしか対応していないためで"
"す。ジオメトリのように2以上の次元を持つデータには、データの次元の全ての範囲に"
"対応するインデックス手法が必要です (B木と明示的な範囲検索を使って、いわゆるXY"
"データのインデックスを生成することが可能です)。空間データ処理における"
"PostgreSQLの主な利点は、高次元データで有効に動作する数種類のインデックス、す"
"なわちGiST、BRIN、SP-GiSTを提供していることです。"

#. Tag: para
#: using_postgis_dataman.xml:1953
#, no-c-format
msgid ""
"<emphasis role=\"bold\">GiST (Generalized Search Tree)</emphasis> indexes "
"break up data into \"things to one side\", \"things which overlap\", "
"\"things which are inside\" and can be used on a wide range of data-types, "
"including GIS data. PostGIS uses an R-Tree index implemented on top of GiST "
"to index spatial data. GiST is the most commonly-used and versatile spatial "
"index method, and offers very good query performance."
msgstr ""
"<emphasis role=\"bold\">GiST (Generalized Search Tree)</emphasis>インデックス"
"は、データを「一方にあるもの」「オーバラップするもの」「内部にあるもの」に分"
"解するもので、GISデータを含む幅広い範囲で使えます。PostGISはGiSTインデックス"
"空間データをR木インデックス実装のベースにています。GiSTは最も一般的に使われ、"
"多目的なインデックス手法で、非常に良好な問い合わせ効率を提供しています。"

#. Tag: para
#: using_postgis_dataman.xml:1963
#, no-c-format
msgid ""
"<emphasis role=\"bold\">BRIN (Block Range Index)</emphasis> indexes operate "
"by summarizing the spatial extent of ranges of table records. Search is done "
"via a scan of the ranges. BRIN is only appropriate for use for some kinds of "
"data (spatially sorted, with infrequent or no update). But it provides much "
"faster index create time, and much smaller index size."
msgstr ""
"<emphasis role=\"bold\">BRIN (Block Range Index)</emphasis>インデックスは、空"
"間範囲を集計することで動作します。探索は範囲のスキャンを通して行われます。"
"BRINは一部の種類 (空間的にソートされ、更新がほぼ無いか全く無い)のデータだけに"
"適切です。しかし、インデックス生成時間は非所に早く、インデックスサイズは非常"
"に小さくなります。"

#. Tag: para
#: using_postgis_dataman.xml:1973
#, no-c-format
msgid ""
"<emphasis role=\"bold\">SP-GiST (Space-Partitioned Generalized Search Tree)</"
"emphasis> is a generic index method that supports partitioned search trees "
"such as quad-trees, k-d trees, and radix trees (tries)."
msgstr ""
"<emphasis role=\"bold\">SP-GiST (Space-Partitioned Generalized Search Tree)</"
"emphasis>は4分木、kd木、基数木 (トライ木)のような部分木探索に対応する一般的な"
"インデックス手法です。"

#. Tag: para
#: using_postgis_dataman.xml:1980
#, no-c-format
msgid ""
"Spatial indexes store only the bounding box of geometries. Spatial queries "
"use the index as a <emphasis role=\"bold\">primary filter</emphasis> to "
"quickly determine a set of geometries potentially matching the query "
"condition. Most spatial queries require a <emphasis role=\"bold\">secondary "
"filter</emphasis> that uses a spatial predicate function to test a more "
"specific spatial condition. For more information on queying with spatial "
"predicates see <xref linkend=\"using-query-indexes\"/>."
msgstr ""

#. Tag: para
#: using_postgis_dataman.xml:1988
#, fuzzy, no-c-format
msgid ""
"See also the <ulink url=\"https://postgis.net/workshops/postgis-intro/"
"indexing.html\">PostGIS Workshop section on spatial indexes</ulink>, and the "
"<ulink url=\"https://www.postgresql.org/docs/current/indexes.html"
"\">PostgreSQL manual</ulink>."
msgstr ""
"詳細情報については<ulink url=\"https://postgis.net/workshops/postgis-intro/"
"indexing.html\">PostGIS Workshop</ulink>と<ulink url=\"https://www."
"postgresql.org/docs/current/indexes.html\">PostgreSQL documentation</ulink>を"
"参照して下さい。"

#. Tag: title
#: using_postgis_dataman.xml:1994
#, no-c-format
msgid "GiST Indexes"
msgstr "GiSTインデックス"

#. Tag: para
#: using_postgis_dataman.xml:1996
#, fuzzy, no-c-format
msgid ""
"GiST stands for \"Generalized Search Tree\" and is a generic form of "
"indexing for multi-dimensional data. PostGIS uses an R-Tree index "
"implemented on top of GiST to index spatial data. GiST is the most commonly-"
"used and versatile spatial index method, and offers very good query "
"performance. Other implementations of GiST are used to speed up searches on "
"all kinds of irregular data structures (integer arrays, spectral data, etc) "
"which are not amenable to normal B-Tree indexing. For more information see "
"the <ulink url=\"https://www.postgresql.org/docs/current/gist.html"
"\">PostgreSQL manual</ulink>."
msgstr ""
"GiSTは「汎用的な検索木 (Generalized Search Tree)」の意味で、インデックスの一"
"般化された形式です。GISインデックスに加えて、GiSTは通常のB木インデックスに従"
"わない全ての種類の不規則なデータ構造 (整数配列, スペクトラルデータ等)の検索速"
"度を向上させるために使います。"

#. Tag: para
#: using_postgis_dataman.xml:2006
#, fuzzy, no-c-format
msgid ""
"Once a spatial data table exceeds a few thousand rows, you will want to "
"build an index to speed up spatial searches of the data (unless all your "
"searches are based on attributes, in which case you'll want to build a "
"normal index on the attribute fields)."
msgstr ""
"ひとたびGISデータテーブルが数千行を超えたら、空間検索の速度向上のためインデッ"
"クスを構築したくなるでしょう (これは属性検索でない場合です。属性でしたら通常"
"のインデックスを属性フィールドに追加します)。"

#. Tag: para
#: using_postgis_dataman.xml:2011
#, no-c-format
msgid ""
"The syntax for building a GiST index on a \"geometry\" column is as follows:"
msgstr "GiSTインデックスをジオメトリカラムに追加するための文は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2014
#, no-c-format
msgid "CREATE INDEX [indexname] ON [tablename] USING GIST ( [geometryfield] );"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING GIST ( [ジオメトリカラム"
"名] );"

#. Tag: para
#: using_postgis_dataman.xml:2016
#, no-c-format
msgid ""
"The above syntax will always build a 2D-index. To get the an n-dimensional "
"index for the geometry type, you can create one using this syntax:"
msgstr ""
"上の文では常に2次元インデックスを構築します。n次元インデックスをジオメトリ型"
"で使うには、次の文でインデックスを生成できます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2017
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename] USING GIST ([geometryfield] "
"gist_geometry_ops_nd);"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING GIST ( [ジオメトリカラム"
"名] gist_geometry_ops_nd);"

#. Tag: para
#: using_postgis_dataman.xml:2019
#, no-c-format
msgid ""
"Building a spatial index is a computationally intensive exercise. It also "
"blocks write access to your table for the time it creates, so on a "
"production system you may want to do in in a slower CONCURRENTLY-aware way:"
msgstr ""
"空間インデックスの構築は、計算量を集中させて行われます。また、この時には、"
"テーブルへの書き込みアクセスがブロックされます。そのため、本番システムではよ"
"り遅いCONCURRENTLYを選択するかも知れません。次のようにします。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2020
#, no-c-format
msgid ""
"CREATE INDEX CONCURRENTLY [indexname] ON [tablename] USING GIST "
"( [geometryfield] );"
msgstr ""
"CREATE INDEX CONCURRENTLY [インデックス名] ON [テーブル名] USING GIST ( [ジオ"
"メトリカラム名] );"

#. Tag: para
#: using_postgis_dataman.xml:2022 using_postgis_dataman.xml:2194
#, no-c-format
msgid ""
"After building an index, it is sometimes helpful to force PostgreSQL to "
"collect table statistics, which are used to optimize query plans:"
msgstr ""
"インデックス構築後に、時々PostgreSQLにテーブルの統計情報を集めさせると助かり"
"ます。クエリプランの最適化に使われます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2025 using_postgis_dataman.xml:2197
#, no-c-format
msgid "VACUUM ANALYZE [table_name] [(column_name)];"
msgstr "VACUUM ANALYZE [テーブル名] [(カラム名)];"

#. Tag: title
#: using_postgis_dataman.xml:2030
#, no-c-format
msgid "BRIN Indexes"
msgstr "BRINインデックス"

#. Tag: para
#: using_postgis_dataman.xml:2032
#, fuzzy, no-c-format
msgid ""
"BRIN stands for \"Block Range Index\". It is a general-purpose index method "
"introduced in PostgreSQL 9.5. BRIN is a <emphasis>lossy</emphasis> index "
"method, meaning that a secondary check is required to confirm that a record "
"matches a given search condition (which is the case for all provided spatial "
"indexes). It provides much faster index creation and much smaller index "
"size, with reasonable read performance. Its primary purpose is to support "
"indexing very large tables on columns which have a correlation with their "
"physical location within the table. In addition to spatial indexing, BRIN "
"can speed up searches on various kinds of attribute data structures "
"(integer, arrays etc). For more information see the <ulink url=\"https://www."
"postgresql.org/docs/current/brin.html\">PostgreSQL manual</ulink>."
msgstr ""
"BRINは\"Block Range Index\"の略です。PostgreSQL 9.5で導入された汎用<ulink "
"url=\"https://www.postgresql.org/docs/current/brin.html\">index method</"
"ulink>です。BRINは<emphasis>不可逆</emphasis>インデックス手法であり、レコード"
"が与えた検索条件に合致することを確認する二番目のチェックが必要であることを意"
"味しています (全ての空間インデックスで言えます)。非常に速いインデックス作成、"
"非常に小さいインデックスサイズで、合理的な読み込み効率を持ちます。主目的は、"
"非常に大きいテーブルのテーブル内の物理位置と関係があるカラムにインデックスを"
"作ることに対応するためです。空間インデックスに加えて、BRINは様々な種類の属性"
"データ構造 (整数、配列等)で速度向上させることができます。"

#. Tag: para
#: using_postgis_dataman.xml:2048
#, no-c-format
msgid ""
"Once a spatial table exceeds a few thousand rows, you will want to build an "
"index to speed up spatial searches of the data. GiST indexes are very "
"performant as long as their size doesn't exceed the amount of RAM available "
"for the database, and as long as you can afford the index storage size, and "
"the cost of index update on write. Otherwise, for very large tables BRIN "
"index can be considered as an alternative."
msgstr ""
"空間テーブルが、ひとたび数千行を超えると、データの空間検索の速度向上にイン"
"デックスが必要と感じることになります。GiSTインデックスは、サイズがデータベー"
"スで使えるRAM容量を超えず、インデックスのストレージサイズに余裕があり、書き込"
"み時のインデックス更新コストにも余裕があるなら、非常に高いパフォーマンスを発"
"揮します。そうでない場合には、非常に大きなテーブルにおいては、BRINインデック"
"スを代替に考えることができます。"

#. Tag: para
#: using_postgis_dataman.xml:2055
#, no-c-format
msgid ""
"A BRIN index stores the bounding box enclosing all the geometries contained "
"in the rows in a contiguous set of table blocks, called a <emphasis>block "
"range</emphasis>. When executing a query using the index the block ranges "
"are scanned to find the ones that intersect the query extent. This is "
"efficient only if the data is physically ordered so that the bounding boxes "
"for block ranges have minimal overlap (and ideally are mutually exclusive). "
"The resulting index is very small in size, but is typically less performant "
"for read than a GiST index over the same data."
msgstr ""
"BRINインデックスは、連続するテーブルブロックの集合 (<emphasis>ブロック範囲</"
"emphasis>と言います)の全てのジオメトリを囲むバウンディングボックスを格納しま"
"す。インデックスを使用した問い合わせを実行する時に、問い合わせ範囲とインタセ"
"クトするブロック範囲を見つけるためにスキャンします。これは、データが物理的に"
"整列していて、ブロック範囲のバウンディングボックスのオーバラップが最小である "
"(理想的には相互に排他的である)場合に限って効率的です。結果インデックスは非常"
"に小さいサイズですが、通常、読み込み効率は、同じデータにおけるGiSTインデック"
"スより悪くなります。"

#. Tag: para
#: using_postgis_dataman.xml:2065
#, no-c-format
msgid ""
"Building a BRIN index is much less CPU-intensive than building a GiST index. "
"It's common to find that a BRIN index is ten times faster to build than a "
"GiST index over the same data. And because a BRIN index stores only one "
"bounding box for each range of table blocks, it's common to use up to a "
"thousand times less disk space than a GiST index."
msgstr ""
"BRINインデックスの構築は、はGiSTインデックスと比べて、CPU集中を非常に減らしま"
"す。BRINインデックスはGiSTインデックスよりも、同じデータに対して10倍速く構築"
"するのが普通です。BRINインデックスはテーブルブロックの範囲ごとに一つのバウン"
"ディングボックスしか格納しないので、GiSTインデックスと比べて、ディスクスペー"
"スを1000倍少なくできます。"

#. Tag: para
#: using_postgis_dataman.xml:2071
#, no-c-format
msgid ""
"You can choose the number of blocks to summarize in a range. If you decrease "
"this number, the index will be bigger but will probably provide better "
"performance."
msgstr ""
"レンジ内で要約するブロック数を選択できます。この数字を減らすと、インデックス"
"は大きくなりますが、効率向上の助けになる可能性があります。"

#. Tag: para
#: using_postgis_dataman.xml:2075
#, no-c-format
msgid ""
"For BRIN to be effective, the table data should be stored in a physical "
"order which minimizes the amount of block extent overlap. It may be that the "
"data is already sorted appropriately (for instance, if it is loaded from "
"another dataset that is already sorted in spatial order). Otherwise, this "
"can be accomplished by sorting the data by a one-dimensional spatial key. "
"One way to do this is to create a new table sorted by the geometry values "
"(which in recent PostGIS versions uses an efficient Hilbert curve ordering):"
msgstr ""
"BRINを効果的にするには、テーブルデータをブロック範囲のオーバラップの量を最小"
"にするような物理的オーダーで格納します。データが既に適切に並び替えられている"
"かも知れません (たとえば、既に空間オーダーで並び替えられているデータセットを"
"他のデータベースからロードする場合)。そうでない場合には、一つの空間キーによる"
"データの並べ替えで実現できます。一つの方法として、ジオメトリ値で並べ替えた新"
"しいテーブルを生成することです (最近のPostGISのバージョンで効果的なヒルベルト"
"曲線オーダーが使われています)。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2084
#, no-c-format
msgid ""
"CREATE TABLE table_sorted AS\n"
"   SELECT * FROM table  ORDER BY geom;"
msgstr ""
"CREATE TABLE table_sorted AS\n"
"   SELECT * FROM table  ORDER BY geom;"

#. Tag: para
#: using_postgis_dataman.xml:2086
#, no-c-format
msgid ""
"Alternatively, data can be sorted in-place by using a GeoHash as a "
"(temporary) index, and clustering on that index:"
msgstr ""
"もしくは、データは、ジオハッシュを (一時的な)インデックスに使い、そのインデッ"
"クスでクラスタリングを行うことによって適切に並べ替えることができます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2090
#, no-c-format
msgid ""
"CREATE INDEX idx_temp_geohash ON table\n"
"    USING btree (ST_GeoHash( ST_Transform( geom, 4326 ), 20));\n"
"CLUSTER table USING idx_temp_geohash;"
msgstr ""
"CREATE INDEX idx_temp_geohash ON table\n"
"    USING btree (ST_GeoHash( ST_Transform( geom, 4326 ), 20));\n"
"CLUSTER table USING idx_temp_geohash;"

#. Tag: para
#: using_postgis_dataman.xml:2093
#, no-c-format
msgid ""
"The syntax for building a BRIN index on a <code>geometry</code> column is:"
msgstr ""
"BRINインデックスを<code>ジオメトリ</code>カラムに追加するための文は次の通りで"
"す。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2095
#, no-c-format
msgid "CREATE INDEX [indexname] ON [tablename] USING BRIN ( [geome_col] );"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING BRIN ( [ジオメトリカラム"
"名] );"

#. Tag: para
#: using_postgis_dataman.xml:2097
#, no-c-format
msgid ""
"The above syntax builds a 2D index. To build a 3D-dimensional index, use "
"this syntax:"
msgstr ""
"上の文で2次元インデックスを構築します。3次元インデックスをビルドするには、こ"
"の文を使います。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2099
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename]\n"
"    USING BRIN ([geome_col] brin_geometry_inclusion_ops_3d);"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名]\n"
"    USING BRIN ( [ジオメトリカラム名] brin_geometry_inclusion_ops_3d);"

#. Tag: para
#: using_postgis_dataman.xml:2101
#, no-c-format
msgid "You can also get a 4D-dimensional index using the 4D operator class:"
msgstr "また、4次元演算子クラスを使う4次元インデックスを使うこともできます。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2103
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename]\n"
"    USING BRIN ([geome_col] brin_geometry_inclusion_ops_4d);"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名]\n"
"    USING BRIN ( [ジオメトリカラム名] brin_geometry_inclusion_ops_4d);"

#. Tag: para
#: using_postgis_dataman.xml:2105
#, no-c-format
msgid ""
"The above commands use the default number of blocks in a range, which is "
"128. To specify the number of blocks to summarise in a range, use this syntax"
msgstr ""
"上記のコマンドでは、範囲のブロック数はデフォルトの128を使用しています。集計で"
"範囲のブロック数を指定するには、この文を使います。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2108
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename]\n"
"    USING BRIN ( [geome_col] ) WITH (pages_per_range = [number]);"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名]\n"
"    USING BRIN ( [ジオメトリカラム名] ) WITH (pages_per_range = [数字]);"

#. Tag: para
#: using_postgis_dataman.xml:2110
#, no-c-format
msgid ""
"Keep in mind that a BRIN index only stores one index entry for a large "
"number of rows. If your table stores geometries with a mixed number of "
"dimensions, it's likely that the resulting index will have poor performance. "
"You can avoid this performance penalty by choosing the operator class with "
"the least number of dimensions of the stored geometries"
msgstr ""
"また、BRINインデックスは、多数の行で一つのインデックス値を格納することを心に"
"留めておいて下さい。テーブルに違う次元のジオメトリを格納する場合には、イン"
"デックスの効率が悪くなります。この効率欠落を回避するには、格納したジオメトリ"
"の次元数の最小値となる演算子クラスを選択します。"

#. Tag: para
#: using_postgis_dataman.xml:2118
#, no-c-format
msgid ""
"The <code>geography</code> datatype is supported for BRIN indexing. The "
"syntax for building a BRIN index on a geography column is:"
msgstr ""
"「ジオグラフィ」型もまたBRINインデックスに対応しています。BRINインデックスを"
"「ジオグラフィ」カラムに構築するための文は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2121
#, no-c-format
msgid "CREATE INDEX [indexname] ON [tablename] USING BRIN ( [geog_col] );"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING BRIN ( [ジオメトリカラム"
"名] );"

#. Tag: para
#: using_postgis_dataman.xml:2123
#, no-c-format
msgid ""
"The above syntax builds a 2D-index for geospatial objects on the spheroid."
msgstr ""
"上の文では常に回転楕円体面上の地理空間オブジェクトの2次元インデックスを構築し"
"ます。"

#. Tag: para
#: using_postgis_dataman.xml:2125
#, no-c-format
msgid ""
"Currently, only \"inclusion support\" is provided, meaning that just the "
"<varname>&amp;&amp;</varname>, <varname>~</varname> and <varname>@</varname> "
"operators can be used for the 2D cases (for both <code>geometry</code> and "
"<code>geography</code>), and just the <varname>&amp;&amp;&amp;</varname> "
"operator for 3D geometries. There is currently no support for kNN searches."
msgstr ""
"現在のところは「包括対応」だけをここで考えています。これは、<varname>&amp;"
"&amp;</varname>, <varname>~</varname>, <varname>@</varname>の演算子だけが2次"
"元で使われることを意味します (<code>ジオメトリ</code>と<code>ジオグラフィ</"
"code>の両方)。 <varname>&amp;&amp;&amp;</varname>演算子は3次元ジオメトリで使"
"えます。しばらくはKNN検索に対応しません。"

#. Tag: para
#: using_postgis_dataman.xml:2132
#, no-c-format
msgid ""
"An important difference between BRIN and other index types is that the "
"database does not maintain the index dynamically. Changes to spatial data in "
"the table are simply appended to the end of the index. This will cause index "
"search performance to degrade over time. The index can be updated by "
"performing a <code>VACUUM</code>, or by using a special function "
"<code>brin_summarize_new_values(regclass)</code>. For this reason BRIN may "
"be most appropriate for use with data that is read-only, or only rarely "
"changing. For more information refer to the <ulink url=\"https://www."
"postgresql.org/docs/current/brin-intro.html#BRIN-OPERATION\">manual</ulink>."
msgstr ""
"BRINと他のインデックスとの重要な違いは、データベースがインデックスを動的に保"
"守しないことです。テーブルの空間データを変更すると、単純にインデックスの末尾"
"に追加しています。このためインデックス探索の能率が時間とともに低下します。イ"
"ンデックスは<code>VACUUM</code>か空間関数"
"<code>brin_summarize_new_values(regclass)</code>を実行することで更新できま"
"す。このため、BRINは読み込み専用か、書き込みがほとんど発生しないよなデータで"
"の利用では最も適切になりえます。詳細情報については、<ulink url=\"https://www."
"postgresql.org/docs/current/brin-intro.html#BRIN-OPERATION\">manual</ulink>を"
"ご覧下さい。"

#. Tag: para
#: using_postgis_dataman.xml:2142
#, no-c-format
msgid "To summarize using BRIN for spatial data:"
msgstr "空間データにBRINを使用して集計するには:"

#. Tag: para
#: using_postgis_dataman.xml:2146
#, no-c-format
msgid "Index build time is very fast, and index size is very small."
msgstr ""
"インデックス構築時間は非常に速く、インデックスサイズは非常に小さいです。"

#. Tag: para
#: using_postgis_dataman.xml:2147
#, no-c-format
msgid "Index query time is slower than GiST, but can still be very acceptable."
msgstr "インデックスのクエリ時間はGiSTより遅いですが、十分許容できます。"

#. Tag: para
#: using_postgis_dataman.xml:2148
#, no-c-format
msgid "Requires table data to be sorted in a spatial ordering."
msgstr "テーブルデータを空間順序で並べ替える必要があります。"

#. Tag: para
#: using_postgis_dataman.xml:2149
#, no-c-format
msgid "Requires manual index maintenance."
msgstr "手動でインデックスの保守をする必要があります。"

#. Tag: para
#: using_postgis_dataman.xml:2150
#, fuzzy, no-c-format
msgid ""
"Most appropriate for very large tables, with low or no overlap (e.g. "
"points), which are static or change infrequently."
msgstr ""
"巨大なテーブルであって、オーバラップが少ないか無く (ポイントなど)、かつ静的か"
"頻繁には変更しないようなものに、最も適しています。"

#. Tag: para
#: using_postgis_dataman.xml:2153
#, no-c-format
msgid ""
"More effective for queries which return relatively large numbers of data "
"records."
msgstr ""

#. Tag: title
#: using_postgis_dataman.xml:2159
#, no-c-format
msgid "SP-GiST Indexes"
msgstr "SP-GiSTインデックス"

#. Tag: para
#: using_postgis_dataman.xml:2161
#, fuzzy, no-c-format
msgid ""
"SP-GiST stands for \"Space-Partitioned Generalized Search Tree\" and is a "
"generic form of indexing for multi-dimensional data types that supports "
"partitioned search trees, such as quad-trees, k-d trees, and radix trees "
"(tries). The common feature of these data structures is that they repeatedly "
"divide the search space into partitions that need not be of equal size. In "
"addition to spatial indexing, SP-GiST is used to speed up searches on many "
"kinds of data, such as phone routing, ip routing, substring search, etc. For "
"more information see the <ulink url=\"https://www.postgresql.org/docs/"
"current/spgist.html\">PostgreSQL manual</ulink>."
msgstr ""
"SP-GiSTは、「空間分割された一般探索木」を表します。四分木、k次元木、基数木 "
"(トライ木)のような分割探索木に対応するインデックスの総称的な形式です。この"
"データ構造の一般的な機能は、検索空間を反復して分割することですが、分割は等し"
"いサイズである必要はありません。SP-GiSTは、GISインデックスだけでなく、電話回"
"線のルーティングや、IPルーティング、部分文字列検索等といった、様々な種類の"
"データを探索する速度の向上に使われます。"

#. Tag: para
#: using_postgis_dataman.xml:2173
#, fuzzy, no-c-format
msgid ""
"As it is the case for GiST indexes, SP-GiST indexes are lossy, in the sense "
"that they store the bounding box enclosing spatial objects. SP-GiST indexes "
"can be considered as an alternative to GiST indexes."
msgstr ""
"GiSTインデックスのためのケースですので、空間オブジェクトを覆うバウンディング"
"ボックスを保存するという意味で、SP-GiSTインデックスは不可逆です。SP-GiSTイン"
"デックスは、GiSTインデックスの選択肢の一つとして考えることができます。能率試"
"験によって、SP-GiSTインデックスは,、多数のオーバラップするオブジェクトがある"
"「スパゲッティデータ」と呼ばれる状態のときに、特に有利であることが分かりまし"
"た。"

#. Tag: para
#: using_postgis_dataman.xml:2177
#, no-c-format
msgid ""
"Once a GIS data table exceeds a few thousand rows, an SP-GiST index may be "
"used to speed up spatial searches of the data. The syntax for building an SP-"
"GiST index on a \"geometry\" column is as follows:"
msgstr ""
"一度GISデータテーブルが数千行を超えると、データの空間探索の速度向上にSP-GiST"
"インデックスを使うと良いかも知れません。「ジオメトリ」カラムにSP-GiSTインデッ"
"クスを構築するための文は次の通りです。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2181
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename] USING SPGIST ( [geometryfield] );"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING SPGIST ( [ジオメトリカラ"
"ム] );"

#. Tag: para
#: using_postgis_dataman.xml:2183
#, no-c-format
msgid ""
"The above syntax will build a 2-dimensional index. A 3-dimensional index for "
"the geometry type can be created using the 3D operator class:"
msgstr ""
"上の文では、2次元インデックスを構築します。ジオメトリ型の3次元インデックス"
"は、次のように、3次元演算子クラスを使用して生成します。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2186
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename] USING SPGIST ([geometryfield] "
"spgist_geometry_ops_3d);"
msgstr ""
"CREATE INDEX [インデックス名] ON [テーブル名] USING SPGIST ([ジオメトリカラ"
"ム] spgist_geometry_ops_3d);"

#. Tag: para
#: using_postgis_dataman.xml:2188
#, no-c-format
msgid ""
"Building a spatial index is a computationally intensive operation. It also "
"blocks write access to your table for the time it creates, so on a "
"production system you may want to do in in a slower CONCURRENTLY-aware way:"
msgstr ""
"空間インデックスの構築は、計算量を集中させて行われます。また、この時には、"
"テーブルへの書き込みアクセスがブロックされます。そのため、本番システムでは、"
"より遅いCONCURRENTLYを選択するかも知れません。次のようにします。"

#. Tag: programlisting
#: using_postgis_dataman.xml:2192
#, no-c-format
msgid ""
"CREATE INDEX CONCURRENTLY [indexname] ON [tablename] USING SPGIST "
"( [geometryfield] );"
msgstr ""
"CREATE INDEX CONCURRENTLY [インデックス名] ON [テーブル名] USING SPGIST ( [ジ"
"オメトリカラム] );"

#. Tag: para
#: using_postgis_dataman.xml:2199
#, no-c-format
msgid ""
"An SP-GiST index can accelerate queries involving the following operators:"
msgstr ""
"SP-GiSTインデックスは次の演算子を含むクエリの実行速度を向上させられます。"

#. Tag: para
#: using_postgis_dataman.xml:2201
#, no-c-format
msgid ""
"&lt;&lt;, &amp;&lt;, &amp;&gt;, &gt;&gt;, &lt;&lt;|, &amp;&lt;|, |&amp;&gt;, "
"|&gt;&gt;, &amp;&amp;, @&gt;, &lt;@, and ~=, for 2-dimensional indexes,"
msgstr ""
"2次元インデックスについては &lt;&lt;, &amp;&lt;, &amp;&gt;, &gt;&gt;, &lt;"
"&lt;|, &amp;&lt;|, |&amp;&gt;, |&gt;&gt;, &amp;&amp;, @&gt;, &lt;@, and ~= 。"

#. Tag: para
#: using_postgis_dataman.xml:2202
#, no-c-format
msgid "&amp;/&amp;, ~==, @&gt;&gt;, and &lt;&lt;@, for 3-dimensional indexes."
msgstr ""
"3次元インデックスについては &amp;/&amp;, ~==, @&gt;&gt;, and &lt;&lt;@ 。"

#. Tag: para
#: using_postgis_dataman.xml:2204
#, no-c-format
msgid "There is no support for kNN searches at the moment."
msgstr "現時点ではkNN探索に対応していません。"

#. Tag: title
#: using_postgis_dataman.xml:2207
#, no-c-format
msgid "Tuning Index Usage"
msgstr "インデックス使用のチューニング"

#. Tag: para
#: using_postgis_dataman.xml:2209
#, no-c-format
msgid ""
"Ordinarily, indexes invisibly speed up data access: once an index is built, "
"the PostgreSQL query planner automatically decides when to use it to improve "
"query performance. But there are some situations where the planner does not "
"choose to use existing indexes, so queries end up using slow sequential "
"scans instead of a spatial index."
msgstr ""
"通常、インデックスは知らないうちにデータアクセスの速度を向上します。ひとたび"
"インデックスを構築すれば、PostgreSQLクエリプランナは自動的にクエリの能率を向"
"上させるために使うべきかどうかを決定します。しかし、プランナが既存のインデッ"
"クスを選択せず、遅いシーケンシャルスキャンを使い続ける場合があります。"

#. Tag: para
#: using_postgis_dataman.xml:2215
#, no-c-format
msgid ""
"If you find your spatial indexes are not being used, there are a few things "
"you can do:"
msgstr ""
"空間インデックスが使われていないのが分かった場合には、少しの行えることがあり"
"ます。"

#. Tag: para
#: using_postgis_dataman.xml:2220
#, no-c-format
msgid ""
"Examine the query plan and check your query actually computes the thing you "
"need. An erroneous JOIN, either forgotten or to the wrong table, can "
"unexpectedly retrieve table records multiple times. To get the query plan, "
"execute with <code>EXPLAIN</code> in front of the query."
msgstr ""
"クエリプランの試験とクエリの確認で、必要なものを計算できます。誤ったJOINや忘"
"れ去られたテーブルや間違ったテーブルでは、予期しないテーブルレコード検索が複"
"数回行われることがありえます。クエリプランを得るにはクエリの先頭に"
"<code>EXPLAIN</code>を付けて実行します。"

#. Tag: para
#: using_postgis_dataman.xml:2227
#, no-c-format
msgid ""
"Make sure statistics are gathered about the number and distributions of "
"values in a table, to provide the query planner with better information to "
"make decisions around index usage. <command>VACUUM ANALYZE</command> will "
"compute both."
msgstr ""
"テーブル内の値の数量と分布に関する統計情報を収集するとともに、クエリプランナ"
"にインデックス使用にかかる意思決定のための、より良い情報を与えるようにしま"
"す。<command>VACUUM ANALYZE</command>は両方を計算します。"

#. Tag: para
#: using_postgis_dataman.xml:2232
#, no-c-format
msgid ""
"You should regularly vacuum your databases anyways. Many PostgreSQL DBAs run "
"<command>VACUUM</command> as an off-peak cron job on a regular basis."
msgstr ""
"データベースに対する定期的なvacuumは常に実行するべきです。多くのPostgreSQL"
"データベースエージェントは、閑散時のcronジョブとして定期的に<command>VACUUM</"
"command>を実行します。"

#. Tag: para
#: using_postgis_dataman.xml:2237
#, no-c-format
msgid ""
"If vacuuming does not help, you can temporarily force the planner to use the "
"index information by using the command <command>SET ENABLE_SEQSCAN TO OFF;</"
"command>. This way you can check whether the planner is at all able to "
"generate an index-accelerated query plan for your query. You should only use "
"this command for debugging; generally speaking, the planner knows better "
"than you do about when to use indexes. Once you have run your query, do not "
"forget to run <command>SET ENABLE_SEQSCAN TO ON;</command> so that the "
"planner will operate normally for other queries."
msgstr ""
"VACUUMが役に立たない場合には、<command>SET ENABLE_SEQSCAN TO OFF;</command>コ"
"マンドを使用して、一時的にプランナにインデックス情報の使用を強制することがで"
"きます。この方法で、プランナがインデックス使用を多くしたクエリプランを生成で"
"きるかどうかを確認できます。このコマンドはデバッグにのみ使用してください。一"
"般的に言えば、プランナはインデックスを使用するタイミングをよく知っています。"
"クエリを実行したら<command>SET ENABLE_SEQSCAN TO ON;</command>を実行して、他"
"のクエリでは通常操作にすることを忘れないでください。"

#. Tag: para
#: using_postgis_dataman.xml:2249
#, no-c-format
msgid ""
"If <command>SET ENABLE_SEQSCAN TO OFF;</command> helps your query to run "
"faster, your Postgres is likely not tuned for your hardware. If you find the "
"planner wrong about the cost of sequential versus index scans try reducing "
"the value of <varname>RANDOM_PAGE_COST</varname> in <code>postgresql.conf</"
"code>, or use <command>SET RANDOM_PAGE_COST TO 1.1;</command>. The default "
"value for <varname>RANDOM_PAGE_COST</varname> is 4.0. Try setting it to 1.1 "
"(for SSD) or 2.0 (for fast magnetic disks). Decreasing the value makes the "
"planner more likely to use index scans."
msgstr ""
"<command>SET ENABLE_SEQSCAN TO OFF;</command>でクエリ速度が向上する場合には、"
"PostgreSQLのハードウェア関連のチューンが行われていないのかも知れません。プラ"
"ンナがシーケンシャル対インデックスのコストが誤っている場合には、"
"<code>postgresql.conf</code>内にある<varname>RANDOM_PAGE_COST</varname>の値を"
"変更してみて下さい。<command>SET RANDOM_PAGE_COST TO 1.1;</command>とします。"
"<varname>RANDOM_PAGE_COST</varname>のデフォルト値は4.0です。1.1 (SSDの場合)ま"
"たは2.0 (高速磁気ディスクの場合)を試してみて下さい。値を小さくするほど、プラ"
"ンナがインデックススキャンをしやすくなります。"

#. Tag: para
#: using_postgis_dataman.xml:2260
#, no-c-format
msgid ""
"If <command>SET ENABLE_SEQSCAN TO OFF;</command> does not help your query, "
"the query may be using a SQL construct that the Postgres planner is not yet "
"able to optimize. It may be possible to rewrite the query in a way that the "
"planner is able to handle. For example, a subquery with an inline SELECT may "
"not produce an efficient plan, but could possibly be rewritten using a "
"LATERAL JOIN."
msgstr ""
"<command>SET ENABLE_SEQSCAN TO OFF;</command>がクエリの助けにならないなら、ク"
"エリはPostgreSQLプランナがまだ最適化できないSQL構成なのかも知れません。プラン"
"ナが処理できるようにクエリを再記述できるかもしれません。例えば、インライン"
"SELECTを持つ副問い合わせがあると、効果的なプランを作らないことがあり、"
"LATERAL JOINを使うように書き換えることができます。"

#. Tag: para
#: using_postgis_dataman.xml:2269
#, no-c-format
msgid ""
"For more information see the Postgres manual section on <ulink url=\"https://"
"www.postgresql.org/docs/current/runtime-config-query.html\">Query Planning</"
"ulink>."
msgstr ""
"詳細情報についてはPostgreSQLマニュアルの<ulink url=\"https://www.postgresql."
"jp/document/current/html/runtime-config-query.html\">問い合わせ計画</ulink>節"
"をご覧下さい。"

#, no-c-format
#~ msgid "GIS Objects"
#~ msgstr "GISオブジェクト"

#, no-c-format
#~ msgid ""
#~ "The GIS objects supported by PostGIS are a superset of the \"Simple "
#~ "Features\" standard defined by the OpenGIS Consortium (OGC). PostGIS "
#~ "supports all the objects and functions specified in the OGC \"Simple "
#~ "Features for SQL\" specification (SFS)."
#~ msgstr ""
#~ "PostGISでサポートされるGISオブジェクトは、OpenGIS Consortium (OGC)が定義す"
#~ "る\"Simple Features\"標準のスーパーセットです。 PostGISはOGCの\"Simple "
#~ "Features for SQL\" (SFS)仕様で定められた全てのオブジェクトと関数に対応して"
#~ "います。"

#, no-c-format
#~ msgid ""
#~ "PostGIS extends the standard with support for embedded SRID information."
#~ msgstr "PostGISは標準から拡張してSRIDの組み込みに対応しています。"

#, no-c-format
#~ msgid "PostGIS EWKB, EWKT and Canonical Forms"
#~ msgstr "PostGIS EWKB, EWKTと標準形式"

#, no-c-format
#~ msgid ""
#~ "First OpenGIS specifications (prior to 1.2.0) only support 2D geometries, "
#~ "and the associated SRID is *never* embedded in the input/output "
#~ "representations."
#~ msgstr ""
#~ "最初のOpenGIS使用 (1.2.0より前)は2次元ジオメトリしかサポートされておらず、"
#~ "また、入出力の表現においてSRIDは*決して*埋め込まれません。"

#, no-c-format
#~ msgid ""
#~ "Even though the last OpenGIS specification 1.2.1 supports 3DM and 3DZ "
#~ "coordinates specifing ZM qualifiers, it does not include yet the "
#~ "associated SRID in the input/output representations."
#~ msgstr ""
#~ "最後のOpenGIS 1.2.1仕様ではZ,M修飾子を指定するXYM座標とXYZ座標に対応してい"
#~ "ますが、入出力表現に、関連するSRIDが含まれていません。"

#, no-c-format
#~ msgid ""
#~ "PostGIS extended formats add 3DM, 3DZ, 4D coordinates support and "
#~ "embedded SRID information. However, PostGIS EWKB/EWKT outputs have "
#~ "several peculiarities:"
#~ msgstr ""
#~ "PostGIS EWKB/EWKT では 3DM, 3DZ, 4D の座標サポートが追加され、SRID情報が埋"
#~ "め込まれます。しかしながら、EWKB/EWKT出力には次のような相違点があります。"

#, no-c-format
#~ msgid ""
#~ "Examples of the text representations (EWKT) of the extended spatial "
#~ "objects of the features are as follows."
#~ msgstr ""
#~ "拡張された空間オブジェクトのテキスト表現 (EWKT)の例は、次の通りです。"

#, no-c-format
#~ msgid ""
#~ "Conversion between these formats is available using the following "
#~ "interfaces:"
#~ msgstr "これらの書式の変換は次のインタフェースを用いて実現できます。"

#, no-c-format
#~ msgid ""
#~ "The \"canonical forms\" of a PostgreSQL type are the representations you "
#~ "get with a simple query (without any function call) and the one which is "
#~ "guaranteed to be accepted with a simple insert, update or copy. For the "
#~ "PostGIS 'geometry' type these are:"
#~ msgstr ""
#~ "PostgreSQLの「標準的な形式」は単純なクエリ (全く関数呼び出しが無い)で得る"
#~ "表現であり、単純なINSERT, UPDATE, COPYで受け付けられることが保障されるもの"
#~ "です。PostGISの\"geometory\"型の場合は次の通りです。"

#, no-c-format
#~ msgid ""
#~ "- Output\n"
#~ "  - binary: EWKB\n"
#~ "        ascii: HEXEWKB (EWKB in hex form)\n"
#~ "- Input\n"
#~ "  - binary: EWKB\n"
#~ "        ascii: HEXEWKB|EWKT"
#~ msgstr ""
#~ "- 出力\n"
#~ "  - バイナリ: EWKB\n"
#~ "        ascii: HEXEWKB (EWKBのHEX表現)\n"
#~ "- 入力\n"
#~ "  - バイナリ: EWKB\n"
#~ "        ascii: HEXEWKB|EWKT"

#, no-c-format
#~ msgid ""
#~ "For example this statement reads EWKT and returns HEXEWKB in the process "
#~ "of canonical ascii input/output:"
#~ msgstr ""
#~ "たとえば、次のステートメントは、標準的なASCII文字列による入出力の処理で"
#~ "EWKTを読み、HEXEWKBを返すものです。"

#, no-c-format
#~ msgid ""
#~ "The SQL Multimedia Applications Spatial specification extends the simple "
#~ "features for SQL spec by defining a number of circularly interpolated "
#~ "curves."
#~ msgstr ""
#~ "SQLマルチメディア・アプリケーション空間仕様は、円弧補完曲線を定義したSQL仕"
#~ "様の拡張です。"

#, no-c-format
#~ msgid ""
#~ "The SQL-MM definitions include 3DM, 3DZ and 4D coordinates, but do not "
#~ "allow the embedding of SRID information."
#~ msgstr ""
#~ "SQL-MMの定義では、3DM、3DZと4Dの座標を含みますが、SRID情報の埋め込みはでき"
#~ "ません。"

#, no-c-format
#~ msgid ""
#~ "The Well-Known Text extensions are not yet fully supported. Examples of "
#~ "some simple curved geometries are shown below:"
#~ msgstr ""
#~ "Well-Known Text拡張はまだ完全にはサポートされていません。単純な曲線ジオメ"
#~ "トリの例を次に示します。"

#, no-c-format
#~ msgid "CIRCULARSTRING(0 0, 1 1, 1 0)"
#~ msgstr "CIRCULARSTRING(0 0, 1 1, 1 0)"

#, no-c-format
#~ msgid "MULTICURVE((0 0, 5 5),CIRCULARSTRING(4 0, 4 4, 8 4))"
#~ msgstr "MULTICURVE((0 0, 5 5),CIRCULARSTRING(4 0, 4 4, 8 4))"

#, no-c-format
#~ msgid ""
#~ "It uses a data type called <varname>geography</varname>. None of the GEOS "
#~ "functions support the <varname>geography</varname> type. As a workaround "
#~ "one can convert back and forth between geometry and geography types."
#~ msgstr ""
#~ "<varname>geography</varname>と呼ばれるデータ型を使用します。GEOS関数は"
#~ "<varname>geography</varname>型に対応していません。回避策として、ジオメトリ"
#~ "とジオグラフィの型変換を行うことができます。"

#, no-c-format
#~ msgid ""
#~ "Prior to PostGIS 2.2, the geography type only supported WGS 84 long lat "
#~ "(SRID:4326). For PostGIS 2.2 and above, any long/lat based spatial "
#~ "reference system defined in the <varname>spatial_ref_sys</varname> table "
#~ "can be used. You can even add your own custom spheroidal spatial "
#~ "reference system as described in <ulink url=\"http://www.bostongis.com/"
#~ "blog/index.php?/archives/266-geography-type-is-not-limited-to-earth.html"
#~ "\">geography type is not limited to earth</ulink>."
#~ msgstr ""
#~ "PostGIS 2.2より前は、ジオグラフィ型はWGS84経度緯度 (SRID:4326)だけに対応し"
#~ "ていました。PostGIS 2.2以降は、<varname>spatial_ref_sys</varname>で定義さ"
#~ "れている経度緯度ベースの空間参照系の全てが使えます。<ulink url=\"http://"
#~ "www.bostongis.com/blog/index.php?/archives/266-geography-type-is-not-"
#~ "limited-to-earth.html\">geography type is not limited to earth</ulink>の記"
#~ "述にある通り、独自の回転楕円体の空間参照系を追加することもできます。"

#, no-c-format
#~ msgid ""
#~ "The geography type uses the PostgreSQL typmod definition format so that a "
#~ "table with a geography field can be added in a single step. All the "
#~ "standard OGC formats except for curves are supported."
#~ msgstr ""
#~ "ジオグラフィ型はPostgreSQLのtypmod定義書式を使います。ジオグラフィカラムを"
#~ "持つテーブルに1ステップで追加できます。標準OGC書式は曲線を除いてサポートし"
#~ "ます。"

#, no-c-format
#~ msgid "Geography Basics"
#~ msgstr "ジオグラフィ基礎"

#, no-c-format
#~ msgid ""
#~ "The geography type does not support curves, TINS, or POLYHEDRALSURFACEs, "
#~ "but other geometry types are supported. Standard geometry type data will "
#~ "autocast to geography if it is of SRID 4326. You can also use the EWKT "
#~ "and EWKB conventions to insert data."
#~ msgstr ""
#~ "ジオグラフィ型はシンプルフィーチャーの最も簡単なもののみサポートします。標"
#~ "準的なジオメトリ型データで、SRIDが4326の場合は、ジオグラフィに自動でキャス"
#~ "トされます。またデータ挿入においてEWKTとEWKBの取り決めを使うこともできま"
#~ "す。"

#, no-c-format
#~ msgid ""
#~ "Creating a table with z coordinate point and explicitly specifying srid"
#~ msgstr ""
#~ "Z値を持ち、明示的にSRIDを指定したポイントのテーブル生成は次の通りです。"

#, no-c-format
#~ msgid "POLYGON"
#~ msgstr "POLYGON"

#, no-c-format
#~ msgid ""
#~ "--polygon NAD 1927 long lat\n"
#~ "CREATE TABLE lgeognad27(gid serial PRIMARY KEY, geog "
#~ "geography(POLYGON,4267) );"
#~ msgstr ""
#~ "-- ポリゴン NAD 1927経度緯度\n"
#~ "CREATE TABLE lgeognad27(gid serial PRIMARY KEY, geog "
#~ "geography(POLYGON,4267) );"

#, no-c-format
#~ msgid "MULTILINESTRING"
#~ msgstr "MULTILINESTRING"

#, no-c-format
#~ msgid "MULTIPOLYGON"
#~ msgstr "MULTIPOLYGON"

#, no-c-format
#~ msgid ""
#~ "Now, check the \"geography_columns\" view and see that your table is "
#~ "listed."
#~ msgstr ""
#~ "\"geography_columns\"ビューをチェックして、テーブルが一覧にあるか見て下さ"
#~ "い。"

#, no-c-format
#~ msgid ""
#~ "You can create a new table with a GEOGRAPHY column using the CREATE TABLE "
#~ "syntax."
#~ msgstr ""
#~ "CREATE TABLEの文法でジオグラフィカラムを持つテーブルを新規に生成できます。"

#, no-c-format
#~ msgid ""
#~ "Note that the location column has type GEOGRAPHY and that geography type "
#~ "supports two optional modifiers: a type modifier that restricts the kind "
#~ "of shapes and dimensions allowed in the column; an SRID modifier that "
#~ "restricts the coordinate reference identifier to a particular number."
#~ msgstr ""
#~ "locationカラムはジオグラフィ型で、二つの任意修飾子に対応していることにご注"
#~ "意ください。一つは、そのカラムで使用できる形状と次元を限定する型修飾子で"
#~ "す。もう一つは、座標参照IDを特定の数に限定するSRID修飾子です。"

#, no-c-format
#~ msgid ""
#~ "If you do not specify an SRID, the SRID will default to 4326 WGS 84 long/"
#~ "lat will be used, and all calculations will proceed using WGS84."
#~ msgstr ""
#~ "SRIDを指定していない場合には、SRIDは4326 WGS84経度緯度が使われ、全ての計算"
#~ "はWGS 84を使って行われます。"

#, no-c-format
#~ msgid ""
#~ "Once you have created your table, you can see it in the GEOGRAPHY_COLUMNS "
#~ "table:"
#~ msgstr ""
#~ "テーブルを作ったら、次のようにしてGEOGRAPHY_COLUMNSを見ることができます。"

#, no-c-format
#~ msgid ""
#~ "You can insert data into the table the same as you would if it was using "
#~ "a GEOMETRY column:"
#~ msgstr ""
#~ "ジオメトリカラムを使うのと同じようにテーブルへのデータの挿入ができます。"

#, no-c-format
#~ msgid ""
#~ "Creating a table with spatial data, can be done in one step. As shown in "
#~ "the following example which creates a roads table with a 2D linestring "
#~ "geometry column in WGS84 long lat"
#~ msgstr ""
#~ "空間データを持つテーブルの生成は、1段階でできます。2次元ラインストリングで"
#~ "WGS84経度緯度のジオメトリカラムを持つroadsテーブルの生成の例を次に示しま"
#~ "す。"

#, no-c-format
#~ msgid ""
#~ "CREATE TABLE ROADS (ID serial, ROAD_NAME text, geom "
#~ "geometry(LINESTRING,4326) );"
#~ msgstr ""
#~ "CREATE TABLE ROADS (ID serial, ROAD_NAME text, geom "
#~ "geometry(LINESTRING,4326) );"

#, no-c-format
#~ msgid ""
#~ "We can add additional columns using standard ALTER TABLE command as we do "
#~ "in this next example where we add a 3-D linestring."
#~ msgstr ""
#~ "次の、3次元ラインストリングを追加する例で示す通り、標準的なALTER TABLEコマ"
#~ "ンドを使ってカラムを追加できます。"

#, no-c-format
#~ msgid ""
#~ "In PostGIS <varname>geometry_columns</varname> is a view reading from "
#~ "database system catalog tables. Its structure is:"
#~ msgstr ""
#~ "PostGISでは<varname>geometry_columns</varname>は、データベースシステムカタ"
#~ "ログテーブルから読み取るビューです。構造は次の通りです。"

#, no-c-format
#~ msgid ""
#~ "This attribute is (probably) not part of the OpenGIS specification, but "
#~ "is required for ensuring type homogeneity."
#~ msgstr ""
#~ "この属性は (おそらく)OpenGIS仕様に入っていませんが、型の同一性を保証するた"
#~ "めに必要です。"

#, no-c-format
#~ msgid ""
#~ "Strictly compliant OGC geometries cannot have Z or M values. The <link "
#~ "linkend=\"ST_IsValid\">ST_IsValid()</link> function won't consider higher "
#~ "dimensioned geometries invalid! Invocations of <link linkend="
#~ "\"AddGeometryColumn\">AddGeometryColumn()</link> will add a constraint "
#~ "checking geometry dimensions, so it is enough to specify 2 there."
#~ msgstr ""
#~ "厳格にOGCジオメトリに準拠すると、Z値やM値を持てません。<link linkend="
#~ "\"ST_IsValid\">ST_IsValid()</link>は高次を考慮に入れません。<link linkend="
#~ "\"AddGeometryColumn\">AddGeometryColumn()</link>を実行するとジオメトリの次"
#~ "元をチェックする制約が加わるので、そこで2を指定すれば十分です。"
